const TITLE_SCREEN=false;const LOADING_SCREEN_TIME=20;const DO_LEVEL_GEN=true;const DEBUG_MODE=true;const UP=0,RIGHT=1,DOWN=2,LEFT=3;const OPEN=0,CLOSED=1;const entity_player=0,entity_mob=1;const physical_solid=true,physical_non_solid=false;const display_opaque=true,display_transparent=false;const entity_active_range=20;const CENTER_SQUARE=0,TOP_LEFT=1,BOTTOM_RIGHT=2,UPPER_BOUND=3,LOWER_BOUND=4;const PERM=.5;const xxcomp=[1,0,0,-1,-1,0,0,1];const xycomp=[0,1,-1,0,0,-1,1,0];const yxcomp=[0,1,1,0,0,-1,-1,0];const yycomp=[1,0,0,1,-1,0,0,-1];const light_range=10,light_max=light_range-1;const light_intensity=.25,light_red=255,light_green=190,light_blue=0;const shadow_intensity=0.4,shadow_stop=4,shadow_red=10,shadow_green=0,shadow_blue=40;const light_fill_string='rgba('+light_red+','+light_green+','+light_blue+','+light_intensity+')';const light_level_to_light=[];const light_level_to_shadow=[];for(let i=0;i<light_range;i++){light_level_to_light.unshift('rgba('+floor(light_red-light_red/(light_range-1)*i)+','+floor(light_green-light_green/(light_range-1)*i)+','+floor(light_blue-light_blue/(light_range-1)*i)+','+floor(100*(light_intensity-light_intensity/(light_range-1)*i))/100+')');if(i>shadow_stop){light_level_to_shadow.push('rgba(0,0,0,0)')}else{light_level_to_shadow.push('rgba('+floor(shadow_red-shadow_red/shadow_stop*i)+','+floor(shadow_green-shadow_green/shadow_stop*i)+','+floor(shadow_blue-shadow_blue/shadow_stop*i)+','+floor(100*(shadow_intensity-shadow_intensity/shadow_stop*i))/100+')')}}light_level_to_light[light_level_to_light.length-1]=light_level_to_light[light_level_to_light.length-2];const light_level_player=3,light_level_torch=light_max-2;const direction_up=0,direction_right=1,direction_down=2,direction_left=3;const square_floor=0,square_wall=1,square_door=2,square_stair=3,square_level_origin=4;const interactable_door=0,interactable_stair=1;const texture_floor=0,texture_wall=1,texture_door_closed=2,texture_door_open=3,texture_stair=6,texture_level_origin=7;const texture_default=0,texture_alt1=1,texture_alt2=2,texture_alt3=3,texture_alt4=4,texture_alt5=5,texture_alt6=6,texture_alt7=7,texture_alt8=8,texture_alt9=9,texture_side_top=10,texture_side_right=11,texture_side_bottom=12,texture_side_left=13,texture_in_corner_top_right=14,texture_in_corner_bottom_right=15,texture_in_corner_bottom_left=16,texture_in_corner_top_left=17,texture_out_corner_top_right=18,texture_out_corner_bottom_right=19,texture_out_corner_bottom_left=20,texture_out_corner_top_left=21,texture_U_top=22,texture_U_right=23,texture_U_bottom=24,texture_U_left=25,texture_cross=26,texture_num_alts=27;const texture_probability_distribution=[];texture_probability_distribution[0]=55;texture_probability_distribution[1]=texture_probability_distribution[0]+34;texture_probability_distribution[2]=texture_probability_distribution[1]+21;texture_probability_distribution[3]=texture_probability_distribution[2]+13;texture_probability_distribution[4]=texture_probability_distribution[3]+8;texture_probability_distribution[5]=texture_probability_distribution[4]+5;texture_probability_distribution[6]=texture_probability_distribution[5]+3;texture_probability_distribution[7]=texture_probability_distribution[6]+2;texture_probability_distribution[8]=texture_probability_distribution[7]+1;texture_probability_distribution[9]=texture_probability_distribution[8]+1;const texture_probability_max=texture_probability_distribution[texture_probability_distribution.length-1];const ui_heart=0,ui_empty_heart=1;const component_position=0,component_movement=1,component_display=2,component_texture=3,component_animation=4,component_actions=5,component_sprint=6,component_direction=7,component_map=8,component_health=9,component_light=10,component_strength=11,component_dexterity=12,component_magic=13,component_level=14,component_depth=15,component_stair=16,component_combat=17,component_ai=18,component_light_emitter=19,component_collision=20,component_abilities=21,component_controller=22,component_interactable=23;const event_new_game=0,event_reset_game=1,event_window_resized=2,event_level_generated=3,event_player_generated=4,event_down_level=5,event_new_level=6,event_new_player=7,event_entities_loaded=8,event_begin_level=9,event_player_moved=10,event_entity_moved=11,event_player_start_sprinting=12,event_player_stop_sprinting=13,event_open_door=14,event_successful_action=20,event_failed_action=21,event_new_animation=30,event_hitstun=31,event_begin_combat=40,event_end_combat=41,event_melee_ability=42,event_aoe_ability=43,event_aoe_ranged_ability=44,event_skillshot_ability=45,event_smite_ability=46,event_entity_spawned=50,event_spawn_enemy_close=51,event_entity_take_damage=60,event_player_take_damage=61,event_title_screen=999,event_game_over=1000;const event_to_string=[];event_to_string[0]='event_new_game';event_to_string[1]='event_reset_game';event_to_string[2]='event_window_resized';event_to_string[3]='event_level_generated';event_to_string[4]='event_player_generated';event_to_string[5]='event_down_level';event_to_string[6]='event_new_level';event_to_string[8]='event_entities_loaded';event_to_string[9]='event_begin_level';event_to_string[10]='event_player_moved';event_to_string[11]='event_entity_moved';event_to_string[12]='event_player_start_sprinting';event_to_string[13]='event_player_stop_sprinting';event_to_string[14]='event_open_door';event_to_string[20]='event_successful_action';event_to_string[21]='event_failed_action';event_to_string[30]='event_new_animation';event_to_string[31]='event_hitstun';event_to_string[40]='event_begin_combat';event_to_string[41]='event_end_combat';event_to_string[42]='event_melee_ability';event_to_string[43]='event_aoe_ability';event_to_string[44]='event_aoe_ranged_ability';event_to_string[45]='event_skillshot_ability';event_to_string[46]='event_smite_ability';event_to_string[50]='event_entity_spawned';event_to_string[51]='event_spawn_enemy_close';event_to_string[60]='event_entity_take_damage';event_to_string[61]='event_player_take_damage';event_to_string[999]='event_title_screen';event_to_string[1000]='event_game_over';const action_none=0,action_move=10,action_move_up=11,action_move_right=12,action_move_down=13,action_move_left=14,action_ability_primary=20,action_ability_secondary=21,action_ability_special=22;const class_warrior=0,class_mage=1,class_rogue=2,entity_skeleton=3,boss_blob=4;const DEFAULT_PLAYER_SIZE=1;const DEFAULT_PLAYER_HEALTH=100;const DEFAULT_PLAYER_ATTACK_DAMAGE=10;const DEFAULT_PLAYER_MAGIC_DAMAGE=10;const DEFAULT_PLAYER_ARMOR=10;const DEFAULT_PLAYER_ACTIONS=[action_move_up,action_move_right,action_move_down,action_move_left,action_ability_primary,action_ability_secondary,action_ability_special];const DEFAULT_CONTROLLER_LAYOUT={};DEFAULT_CONTROLLER_LAYOUT[87]=action_move_up;DEFAULT_CONTROLLER_LAYOUT[68]=action_move_right;DEFAULT_CONTROLLER_LAYOUT[83]=action_move_down;DEFAULT_CONTROLLER_LAYOUT[65]=action_move_left;DEFAULT_CONTROLLER_LAYOUT;DEFAULT_CONTROLLER_LAYOUT[38]=action_move_up;DEFAULT_CONTROLLER_LAYOUT[39]=action_move_right;DEFAULT_CONTROLLER_LAYOUT[40]=action_move_down;DEFAULT_CONTROLLER_LAYOUT[37]=action_move_left;DEFAULT_CONTROLLER_LAYOUT;DEFAULT_CONTROLLER_LAYOUT[49]=action_ability_primary;DEFAULT_CONTROLLER_LAYOUT[50]=action_ability_secondary;DEFAULT_CONTROLLER_LAYOUT[51]=action_ability_special;const DEFAULT_ENEMY_SIZE=1;const DEFAULT_ENEMY_HEALTH=50;const DEFAULT_ENEMY_ATTACK_DAMAGE=10;const DEFAULT_ENEMY_MAGIC_DAMAGE=10;const DEFAULT_ENEMY_ARMOR=10;const DEFAULT_ENEMY_ACTIONS=[action_move_up,action_move_right,action_move_down,action_move_left];const entity_string_to_constant=[];entity_string_to_constant['warrior']=class_warrior;entity_string_to_constant['mage']=class_mage;entity_string_to_constant['rogue']=class_rogue;entity_string_to_constant['skeleton']=entity_skeleton;entity_string_to_constant['blob']=boss_blob;const animation_idle=0,animation_move_up=1,animation_move_right=2,animation_move_down=3,animation_move_left=4,animation_no_animations_yet=1000;const animation_strings_to_constants=[];animation_strings_to_constants['animation_idle']=animation_idle;animation_strings_to_constants['animation_move_up']=animation_move_up;animation_strings_to_constants['animation_move_right']=animation_move_right;animation_strings_to_constants['animation_move_down']=animation_move_down;animation_strings_to_constants['animation_move_left']=animation_move_left;const keyCode_to_action=[];keyCode_to_action[87]=action_move_up;keyCode_to_action[68]=action_move_right;keyCode_to_action[83]=action_move_down;keyCode_to_action[65]=action_move_left;keyCode_to_action[38]=action_move_up;keyCode_to_action[39]=action_move_right;keyCode_to_action[40]=action_move_down;keyCode_to_action[37]=action_move_left;keyCode_to_action[49]=action_ability_primary;keyCode_to_action[50]=action_ability_secondary;keyCode_to_action[51]=action_ability_special;const action_to_priority=[];action_to_priority[action_none]=0;action_to_priority[action_move_up]=3;action_to_priority[action_move_left]=3;action_to_priority[action_move_down]=3;action_to_priority[action_move_right]=3;action_to_priority[action_ability_primary]=4;action_to_priority[action_ability_secondary]=4;action_to_priority[action_ability_special]=4;const action_to_direction=[];action_to_direction[action_move_up]=direction_up;action_to_direction[action_move_right]=direction_right;action_to_direction[action_move_down]=direction_down;action_to_direction[action_move_left]=direction_left;const action_to_animation=[];action_to_animation[action_none]=animation_idle;action_to_animation[action_move_up]=animation_move_up;action_to_animation[action_move_right]=animation_move_right;action_to_animation[action_move_down]=animation_move_down;action_to_animation[action_move_left]=animation_move_left;const ability_type_melee=0,ability_type_aoe=1,ability_type_aoe_ranged=2,ability_type_skillshot=3,ability_type_smite=4;const ability_type_string_to_constant=[];ability_type_string_to_constant['melee']=ability_type_melee;ability_type_string_to_constant['aoe']=ability_type_aoe;ability_type_string_to_constant['aoe_ranged']=ability_type_aoe_ranged;ability_type_string_to_constant['skillshot']=ability_type_skillshot;ability_type_string_to_constant['smite']=ability_type_smite;const ability_slash=0,ability_spin_attack=1,ability_judgement_day=2;const ability_string_to_constant=[];ability_string_to_constant['Slash']=ability_slash;ability_string_to_constant['Spin Attack']=ability_spin_attack;ability_string_to_constant['Judgement Day']=ability_judgement_day;
class GameSystem{constructor(componentSignature){this.entities={};this.componentSignature=componentSignature}init(engine){}run(engine){}addEntity(entity){if(this.componentSignature.length>0&&!(entity.ID in this.entities)&&Utility.checkComponents(entity.components,this.componentSignature)){this.entities[entity.ID]=entity.components}}destroyEntity(ID){if(ID in this.entities){delete this.entities[ID]}}handleEvent(engine,eventID,data){}}
class PoppsEngine{constructor(data){const config=data.config;const room_pool=data.room_pool;const stair_room_pool=data.stair_room_pool;const images=data.images.textures;const ui=data.images.ui;const player_config=data.player_config;const enemy_config=data.enemy_config;const boss_config=data.boss_config;this.systems=[];this.LevelSystem=new LevelSystem(config.level,room_pool,stair_room_pool);this.EntitySystem=new EntitySystem(config.entities,player_config,enemy_config,boss_config);this.systems.push(this.LevelSystem);this.systems.push(this.EntitySystem);this.UISystem=new UISystem(config.ui,data.images.ui);this.systems.push(this.UISystem);this.init();if(TITLE_SCREEN){this.sendEvent(event_title_screen)}else{this.sendEvent(event_new_game)}}init(){Utility.debugLog("Initializing PoppsEngine");this.entities={};this.events=[];this.depth=0;this.UIOnly=false;this.FOCUSED=true;for(let system of this.systems){system.init(this)}window.addEventListener("resize",this.sendEvent(event_window_resized));let self=this;window.addEventListener("focus",function(){self.tick()});window.addEventListener("blur",function(){window.cancelAnimationFrame(self.requestID)});this.tick()}pause(){this.UIOnly=true}resume(){this.UIOnly=false}tick(){if(this.UIOnly){this.UISystem.run(this)}else{this.handleEvents(this.events);for(let s of this.systems){s.run(this)}}this.requestID=window.requestAnimationFrame(()=>this.tick())}sendEvent(e,data=undefined,ticks=0){if(ticks==0){this.runEvent([e,data])}else{this.events.push([e,data,ticks])}}handleEvents(events){for(let i=events.length-1;i>=0;i--){if(events[i][2]>0){events[i][2]--}else{this.runEvent(events[i]);events.splice(i,1)}}}runEvent(e){Utility.debugLog(event_to_string[e[0]]);this.handleEvent(e[0],e[1]);for(let s of this.systems){s.handleEvent(this,e[0],e[1])}}handleEvent(event,data){switch(event){case event_new_game:this.clearEntities();this.sendEvent(event_new_level,{depth:this.depth});this.sendEvent(event_new_player);break;case event_level_generated:this.sendEvent(event_begin_level,{depth:this.depth},LOADING_SCREEN_TIME);break;case event_reset_game:this.init();break;case event_game_over:this.pause();break;case event_down_level:this.depth++;if(this.depth==this.Dungeon.levels.length){this.Dungeon.entities.push([]);this.LevelSystem.generateLevel(this,this.depth);this.EntitySystem.generateEntities(this,this.Dungeon.levels[this.depth],this.depth);this.LightSystem.generateTorches(this,this.Dungeon.levels[this.depth].map.map,this.Dungeon.levels[this.depth].rooms)}this.clearEntities();this.sendEvent(event_begin_level,this.Dungeon.levels[this.depth],LOADING_SCREEN_TIME);break;}}createEntity(components){this.addEntity(new GameEntity(this.getFreeID(),components))}getFreeID(){let ID=1;while(ID in this.entities){ID++}return ID}addEntity(entity){this.entities[entity.ID]=entity.components;for(let s of this.systems){s.addEntity(entity)}}destroyEntity(ID){if(ID in this.entities){delete this.entities[ID]}for(let s of this.systems){s.destroyEntity(ID)}}clearEntities(){for(let ID in this.entities){if(!Utility.entityHasDepth(this.entities[ID])){this.destroyEntity(ID)}}}saveLevel(){let level_data={};if(sessionStorage.length>0){level_data=JSON.parse(sessionStorage.LEVEL_DATA)}level_data[this.depth]=[];for(let entityID in this.entities){if(!Utility.entityHasDepth(this.entities[entityID])){level_data[this.depth].push(this.entities[entitiyID])}}}loadLevel(levelDepth){this.clearEntities();let level_data={};if(sessionStorage.length>0){level_data=JSON.parse(sessionStorage.LEVEL_DATA)}else{alert("Error loading level, sessionStorage has no data")}for(let entityWithoutDepth of level_data[levelDepth]){this.addEntity(entityWithoutDepth)}this.depth=levelDepth;this.sendEvent(event_level_loaded,this.depth)}}
class Utility{static debugLog(message){if(DEBUG_MODE)console.log(message)}static collision(o1,o2){return!(o1.top>=o2.bottom||o1.right<=o2.left||o1.bottom<=o2.top||o1.left>=o2.right)}static checkComponents(entityComponents,systemComponents){if(entityComponents.length>6){console.log(entityComponents);console.log(systemComponents)}for(let component of systemComponents){if(!(component in entityComponents))return false}return true}static entityHasDepth(entity){for(let component of entity.components){if(component instanceof DepthComponent)return true}return false}static getHealthPercent(entity){return entity.component_health.health/entity.component_health.maxHealth}static getCurrentHeartAmount(entity){return floor(entity.component_health.health/10)}static getMaxHeartAmount(entity){console.log(entity);return floor(entity.component_health.maxHealth/10)}static entityActionSuccessful(entity){entity.actions.busy=action_length[entity.actions.currentAction];entity.animation.newAnimation=true;entity.animation.animation=action_to_animation[entity.actions.currentAction];entity.actions.failedAction=action_none;entity.actions.lastAction=entity.actions.currentAction;entity.actions.currentAction=action_none}static entityActionFailed(entity){entity.actions.lastAction=action_none;entity.actions.failedAction=entity.actions.currentAction;entity.actions.currentAction=action_none}static getSquaresInFront(engine,position,direction,range){let squares=[];let map=engine.getMap();switch(direction){case direction_up:for(let i=0;i<range;i++){for(let j=0;j<range-i;j++){if(position.y-(i+1)>=0){if(position.x-j>=0){squares.push(map[position.x-j][position.y-(i+1)])}if(j!=0&&position.x+j<map.length){squares.push(map[position.x+j][position.y-(i+1)])}}}}break;case direction_right:for(let i=0;i<range;i++){for(let j=0;j<range-i;j++){if(position.x+(i+1)<map.length){if(position.y-j>=0){squares.push(map[position.x+(i+1)][position.y-j])}if(j!=0&&position.y+j<map.length){squares.push(map[position.x+(i+1)][position.y+j])}}}}break;case direction_down:for(let i=0;i<range;i++){for(let j=0;j<range-i;j++){if(position.y+(i+1)<map.length){if(position.x-j>=0){squares.push(map[position.x-j][position.y+(i+1)])}if(j!=0&&position.x+j<map.length){squares.push(map[position.x+j][position.y+(i+1)])}}}}break;case direction_left:for(let i=0;i<range;i++){for(let j=0;j<range-i;j++){if(position.x-(i+1)>=0){if(position.y-j>=0){squares.push(map[position.x-(i+1)][position.y-j])}if(j!=0&&position.y+j<map.length){squares.push(map[position.x-(i+1)][position.y+j])}}}}break;}return squares}static getSquaresAround(engine,position,range){let squares=[];let map=engine.getMap();for(let i=position.x-range;i<=position.x+range;i++){for(let j=position.y-range;j<=position.y+range;j++){if(Utility.positionInBounds(new PositionComponent(i,j),engine.getMap().length)){squares.push(map[i][j])}}}return squares}static getEntitiesInSquares(engine,squares){let entities=[];let elist=engine.getEntities();for(let s of squares){for(let e of elist){if(e.components.includes(component_position)&&e.position.x==s.position.x&&e.position.y==s.position.y){entities.push(e)}else if(e.components.includes(component_collision)&&Utility.collision(e.collision,new CollisionComponent(s.position.x,s.position.y,1))){entities.push(e)}}}return entities}static entityWithinRange(e1,e2,dist){return abs(e1.position.x-e2.position.x)<dist&&abs(e1.position.y-e2.position.y)<dist}static positionInRange(p1,p2,dist){return abs(p1.x-p2.x)<dist&&abs(p1.y-p2.y)<dist}static entityDistance(e1,e2){if(e1.collision.width==1&&e1.collision.height==1&&e2.collision.width==1&&e2.collision.height==1){return Utility.distance(e1.position,e2.position)}else{let xDist=0;if(e1.collision.left>=e2.collision.right){xDist=abs(e1.collision.left-(e2.collision.right-1))}else if(e1.collision.right<=e2.collision.left){xDist=abs(e1.collision.right-1-e2.collision.left)}let yDist=0;if(e1.collision.top>=e2.collision.bottom){yDist=abs(e1.collision.top-(e2.collision.bottom-1))}else if(e1.collision.bottom<=e2.collision.top){yDist=abs(e1.collision.bottom-1-e2.collision.top)}return xDist+yDist}}static distance(p1,p2){return abs(p1.x-p2.x)+abs(p1.y-p2.y)}static getDirectionToEntity(e1,e2){if(e1.position.y>e2.position.y){return direction_up}if(e1.position.x<e2.position.x){return direction_right}if(e1.position.y<e2.position.y){return direction_down}if(e1.position.x>e2.position.x){return direction_left}}static shortestPath(map,startPosition,endPosition){}static convertMapToNodes(map){let nodeMap=new Array(map.length);for(let i=0;i<map.length;i++){nodeMap[i]=new Array(map.length);for(let j=0;j<map.length;j++){nodeMap[i][j]={'searched':false,'cameFrom':undefined,'distFromStart':10000,'finalCost':10000}}}return nodeMap}static getCollisionInFrontOf(entity){return Utility.getCollisionInDirection(entity,entity.direction.direction)}static getCollisionInDirection(entity,direction){switch(direction){case direction_up:return new CollisionComponent(entity.collision.left,entity.collision.top-1,entity.collision.width,1);case direction_right:return new CollisionComponent(entity.collision.right,entity.collision.top,1,entity.collision.height);case direction_down:return new CollisionComponent(entity.collision.left,entity.collision.bottom,entity.collision.width,1);case direction_left:return new CollisionComponent(entity.collision.left-1,entity.collision.top,1,entity.collision.height);default:console.log('Cannot determine direction');return;}}static entityAdjacent(entity,otherEntity){let c1=entity.collision,c2=otherEntity.collision;if(Utility.collision(Utility.getCollisionInDirection(entity,direction_up),c2)){return direction_up}else if(Utility.collision(Utility.getCollisionInDirection(entity,direction_right),c2)){return direction_right}else if(Utility.collision(Utility.getCollisionInDirection(entity,direction_down),c2)){return direction_down}else if(Utility.collision(Utility.getCollisionInDirection(entity,direction_left),c2)){return direction_left}else{return-1}}static getSquareNeighbors(x,y,map){neighbors=[];if(x>0){neighbors.push(map[x-1][y])}if(y>0){neighbors.push(map[x][y-1])}if(x<map.length-1){neighbors.push(map[x+1][y])}if(y<map.length-1){neighbors.push(map[x][y+1])}return neighbors}static findMobPath(board,mob,player){return findPath(board,board[mob.position.x][mob.position.y],board[player.position.x][player.position.y])}static walkable(x,y,map,entity,objects){return Utility.positionInBounds(new PositionComponent(x,y),map.length)&&Utility.squareIsWalkable(map[x][y],entity)&&!Utility.squareIsOccupied(x,y,entity,objects)}static positionOnScreen(x,y,w,h){return x>-w&&x<width+w&&y>-h&&y<height+h}static positionInBounds(position,size){return position.x>=0&&position.x<size&&position.y>=0&&position.y<size}static squareInBounds(square,size){return square.position.x>=0&&square.position.x<size&&square.position.y>=0&&square.position.y<size}static getNeighbors(square,map){let neighbors=new Array(4);if(Utility.positionInBounds(new PositionComponent(square.position.x,square.position.y-1),map.length)){neighbors[0]=map[square.position.x][square.position.y-1]}if(Utility.positionInBounds(new PositionComponent(square.position.x+1,square.position.y),map.length)){neighbors[1]=map[square.position.x+1][square.position.y]}if(Utility.positionInBounds(new PositionComponent(square.position.x,square.position.y+1),map.length)){neighbors[2]=map[square.position.x][square.position.y+1]}if(Utility.positionInBounds(new PositionComponent(square.position.x-1,square.position.y),map.length)){neighbors[3]=map[square.position.x-1][square.position.y]}return neighbors}static getCornerNeighbors(square,map){let neighbors=new Array(4);if(Utility.positionInBounds(new PositionComponent(square.position.x-1,square.position.y-1),map.length)){neighbors[0]=map[square.position.x-1][square.position.y-1]}if(Utility.positionInBounds(new PositionComponent(square.position.x+1,square.position.y-1),map.length)){neighbors[1]=map[square.position.x+1][square.position.y-1]}if(Utility.positionInBounds(new PositionComponent(square.position.x-1,square.position.y+1),map.length)){neighbors[2]=map[square.position.x-1][square.position.y+1]}if(Utility.positionInBounds(new PositionComponent(square.position.x-1,square.position.y+1),map.length)){neighbors[3]=map[square.position.x+1][square.position.y+1]}return neighbors}static squareIsWalkable(square,entity){return entity instanceof Player?Utility.playerWalkable(square):Utility.mobWalkable(square)}static playerWalkable(square){return!square.components.includes(component_collision)||square instanceof DoorSquare||square instanceof StairUpSquare||square instanceof StairDownSquare}static mobWalkable(square){return!square.components.includes(component_collision)}static squareIsOccupied(x,y,entity,objects){for(let o of objects){if(entity!=o&&o.components.includes(component_collision)){if(Utility.collision(new CollisionComponent(x,y,1),o.collision)){return true}}}return false}static directionToPosition(direction){switch(direction){case direction_up:return new PositionComponent(0,-1);case direction_right:return new PositionComponent(1,0);case direction_down:return new PositionComponent(0,1);case direction_left:return new PositionComponent(-1,0);}}static isMovementAction(action){return action>action_move&&action<=action_move_left}static convertMovementToSprint(action){switch(action){case action_move_up:return action_sprint_up;case action_move_right:return action_sprint_right;case action_move_down:return action_sprint_down;case action_move_left:return action_sprint_left;}}static convertSprintToMovement(action){switch(action){case action_sprint_up:return action_move_up;case action_sprint_right:return action_move_right;case action_sprint_down:return action_move_down;case action_sprint_left:return action_move_left;}}static convertAnimationsFromConfig(animations){let animationsArray=[];for(let a in animations){animationsArray[animation_strings_to_constants[a]]=animations[a]}return animationsArray}static convertActionsFromConfig(actions){let actionsArray=[];for(let i=0;i<actions.length;i++){actionsArray[i]=action_strings_to_constants[actions[i]]}return actionsArray}static getSquareCode(x,y,size){return x+y*size}static getSquareFromCode(map,code){return map[code%map.length][floor(code/map.length)]}}const LARGE_VALUE=10000;function findPath(board,start,end){let searched=[];let searching=[];let cameFrom={};let distFromStart={};let finalCost={};for(let i=0;i<board.length;i++){for(let j=0;j<board[0].length;j++){distFromStart[board[i][j]]=LARGE_VALUE;finalCost[board[i][j]]=LARGE_VALUE}}searching.push(start);distFromStart[start]=0;finalCost[start]=squareDistance(start,end);cameFrom[Utility.getSquareCode(start.position.x,start.position.y)]=-1;while(searching.length>0){let current=searching[0];for(let s of searching){if(finalCost[s]<finalCost[current])current=s}if(current==end){return makePath(board,cameFrom,current)}searching.splice(searching.indexOf(current),1);searched.push(current);let currentNeighbors=getNeighbors(board,current);for(let n of currentNeighbors){if(searched.includes(n)){continue}else{let estimatedDistFromStart=distFromStart[current]+1;if(!searching.includes(n)){searching.push(n)}else if(estimatedDistFromStart>=distFromStart[n]){continue}cameFrom[Utility.getSquareCode(n.position.x,n.position.y)]=Utility.getSquareCode(current.position.x,current.position.y);distFromStart[n]=estimatedDistFromStart;finalCost[n]=distFromStart[n]+squareDistance(start,end)}}}return false}function squareDistance(start,end){return abs(start.position.x-end.position.x)+abs(start.position.y-end.position.y)}function makePath(board,cameFrom,last){let path=[];let current=Utility.getSquareCode(last.position.x,last.position.y);while(cameFrom[current]>0){path.unshift(Utility.getSquareFromCode(board,current));current=cameFrom[current]}path.unshift(Utility.getSquareFromCode(board,current));return path}function getNeighbors(board,square){neighbors=[];if(square.position.x>0&&walkable(entity_mob,board[square.position.x-1][square.position.y])){neighbors.push(board[square.position.x-1][square.position.y])}if(square.position.y>0&&walkable(entity_mob,board[square.position.x][square.position.y-1])){neighbors.push(board[square.position.x][square.position.y-1])}if(square.position.x<board.length-1&&walkable(entity_mob,board[square.position.x+1][square.position.y])){neighbors.push(board[square.position.x+1][square.position.y])}if(square.position.y<board.length-1&&walkable(entity_mob,board[square.position.x][square.position.y+1])){neighbors.push(board[square.position.x][square.position.y+1])}return neighbors}
function setup(){createCanvas(windowWidth,windowHeight,'game');load()}function load(){let config=loadConfig();let images=loadImages(config.textures);let room_pool=loadRoomPools();let player_config=processEntityData(loadJSON('/data/player_config.json'));let enemy_config=processEntityData(loadJSON('/data/enemy_config.json'));let boss_config=processEntityData(loadJSON('/data/boss_config.json'));let data={'config':config,'room_pool':room_pool[0],'stair_room_pool':room_pool[1],'images':images,'player_config':player_config,'enemy_config':enemy_config,'boss_config':boss_config};new PoppsEngine(data)}function processEntityData(entityData){let newEntityData=[];for(let e in entityData){let entityConstant=entity_string_to_constant[e];newEntityData[entityConstant]=entityData[e];let processedAbilities=[];let i=0;for(let ability of entityData[e].abilities){let a=ability_type_string_to_constant[ability.abilityType];processedAbilities[i]=ability;processedAbilities[i].abilityType=a;i++}newEntityData[entityConstant].abilities=processedAbilities}return newEntityData}function loadConfig(){return loadJSON('/config/config.json')}function loadRoomPools(){return loadJSON('/config/roompool.json')}function loadImages(textureConfig){let images={};images.textures=loadTextures(textureConfig);images.ui=loadUI();return images}function loadTextures(textureConfig){let textures=[];textures[texture_floor]=[];textures[texture_floor][texture_default]=loadImage('/img/textures/floor/floor_default.jpg');textures[texture_floor][texture_num_alts]=textureConfig.NUM_FLOOR_ALTS;for(let i=0;i<textures[texture_floor][texture_num_alts];i++){textures[texture_floor][texture_alt1+i]=loadImage('/img/textures/floor/floor_alt_'+(1+i)+'.png')}textures[texture_wall]=[];textures[texture_wall][texture_default]=loadImage('/img/textures/wall/wall_default.png');textures[texture_wall][texture_num_alts]=textureConfig.NUM_WALL_ALTS;for(let i=0;i<textures[texture_wall][texture_num_alts];i++){textures[texture_wall][texture_alt1+i]=loadImage('/img/textures/wall/wall_alt_'+(1+i)+'.png')}textures[texture_wall][texture_side_top]=loadImage('/img/textures/wall/wall_side_top.png');textures[texture_wall][texture_side_right]=loadImage('/img/textures/wall/wall_side_right.png');textures[texture_wall][texture_side_bottom]=loadImage('/img/textures/wall/wall_side_bottom.png');textures[texture_wall][texture_side_left]=loadImage('/img/textures/wall/wall_side_left.png');textures[texture_wall][texture_in_corner_top_right]=loadImage('/img/textures/wall/wall_corner_in_top_right.png');textures[texture_wall][texture_in_corner_bottom_right]=loadImage('/img/textures/wall/wall_corner_in_bottom_right.png');textures[texture_wall][texture_in_corner_bottom_left]=loadImage('/img/textures/wall/wall_corner_in_bottom_left.png');textures[texture_wall][texture_in_corner_top_left]=loadImage('/img/textures/wall/wall_corner_in_top_left.png');textures[texture_wall][texture_out_corner_top_right]=loadImage('/img/textures/wall/wall_corner_out_top_right.png');textures[texture_wall][texture_out_corner_bottom_right]=loadImage('/img/textures/wall/wall_corner_out_bottom_right.png');textures[texture_wall][texture_out_corner_bottom_left]=loadImage('/img/textures/wall/wall_corner_out_bottom_left.png');textures[texture_wall][texture_out_corner_top_left]=loadImage('/img/textures/wall/wall_corner_out_top_left.png');textures[texture_door_closed]=[];textures[texture_door_closed][texture_default]=loadImage('/img/textures/old/doorClosedTexture.png');textures[texture_door_closed][texture_num_alts]=0;textures[texture_door_open]=[];textures[texture_door_open][texture_default]=loadImage('/img/textures/old/doorOpenedTexture.png');textures[texture_door_open][texture_num_alts]=0;textures[texture_stair]=[];textures[texture_stair][texture_default]=loadImage('/img/textures/stairUp.png');textures[texture_stair][texture_num_alts]=0;textures[texture_level_origin]=[];textures[texture_level_origin][texture_default]=loadImage('/img/textures/stairDown.png');textures[texture_level_origin][texture_num_alts]=0;return textures}function loadUI(){let ui=[];ui[ui_heart]=loadImage('/img/icons/heart.png');ui[ui_empty_heart]=loadImage('/img/icons/emptyHeart.png');return ui}function loadMusic(){let music=[];music.push(loadAudio('/audio/music/001_0100.wav'));music.push(loadAudio('/audio/music/002_0001.wav'));music.push(loadAudio('/audio/music/003_0101.wav'));music.push(loadAudio('/audio/music/004_1101.wav'));music.push(loadAudio('/audio/music/005_1121.wav'));music.push(loadAudio('/audio/music/006_2121.wav'));music.push(loadAudio('/audio/music/007_0200.wav'));music.push(loadAudio('/audio/music/008_0201.wav'));music.push(loadAudio('/audio/music/009_1201.wav'));music.push(loadAudio('/audio/music/010_1221.wav'));return music}function loadSounds(){}function keyDown(){}function keyUp(){}
function PositionComponent(x,y){this.x=x;this.y=y}function HealthComponent(initialHealth){this.maxHealth=initialHealth;this.health=initialHealth}function StrengthComponent(initialStrength){this.strength=initialStrength}function IntelligenceComponent(initialIntelligence){this.intelligence=initialIntelligence}function DexterityComponent(initialDexterity){this.dexterity=initialDexterity}function CombatComponent(attackDamage,magicDamage,armor){this.attackDamage=attackDamage;this.magicDamage=magicDamage;this.armor=armor}function DirectionComponent(direction){this.direction=direction}function PhysicalComponent(solid,size){this.solid=solid;this.size=size}function CollisionComponent(x,y,w,h){if(h===undefined){h=w}this.top=y;this.right=x+w;this.bottom=y+h;this.left=x;this.width=w;this.height=h}function MovementComponent(speed){this.speed=speed;this.currentCooldown=0}function DisplayComponent(width,height,offsetX=0,offsetY=0){this.width=width;this.height=height;this.offsetX=offsetX;this.offsetY=offsetY;this.lightLevel=0}function SquareComponent(type){this.type=type;this.visible=false;this.discovered=false;this.discoveredCounter=0;this.opaque=opaque}function AnimationComponent(animations){if(animations==-1){this.animation=animation_no_animations_yet}else{this.offsetX=0;this.offsetY=0;this.stage=0;this.sprite=undefined;this.animation=animation_idle;this.animations=animations}}function TextureComponent(type){this.textureType=type;this.textureSubtype=texture_default}function TextureElementComponent(element=texture_default,xOff=0,yOff=0){this.element=element;this.xOff=xOff;this.yOff=yOff}function LightComponent(){this.level=0}function LightEmitterComponent(emitterLevel){this.level=emitterLevel}function ActionsComponent(actions){this.busy=0;this.actions=actions;this.nextAction=action_none;this.currentAction=action_none;this.lastAction=action_none;this.lastActionFailed=false}function ActionComponent(actionID,actionCooldown,actionTime){this.action=actionID;this.cooldown=actionCooldown;this.time=actionTime;this.currentCooldown=0}function SprintComponent(movesBeforeSprinting,sprintSpeed){this.movesBeforeSprinting=movesBeforeSprinting;this.lastMoveTime=0;this.sprintCounter=0;this.sprinting=false;this.sprintSpeed=sprintSpeed}function MapComponent(map){this.map=map}function DepthComponent(depth){this.depth=depth}function AIComponent(attackRange){this.attackRange=attackRange;this.noticedPlayer=false;this.idleTimer=0}function AbilitiesComponent(abilities){this.abilities=[];for(let a of abilities){this.abilities.push(new AbilityComponent(a))}}function AbilityComponent(ability){for(let prop in ability){this[prop]=ability[prop]}this.currentCooldown=0}function ControllerComponent(controls){this.inputs=controls}
function PlayerTemplate(x=0,y=0,depth=0,size=DEFAULT_PLAYER_SIZE,health=DEFAULT_PLAYER_HEALTH,attackDamage=DEFAULT_PLAYER_ATTACK_DAMAGE,magicDamage=DEFAULT_PLAYER_MAGIC_DAMAGE,armor=DEFAULT_PLAYER_ARMOR,abilities,animations=-1){let components=[];components[component_position]=new PositionComponent(x,y);components[component_depth]=new DepthComponent(depth);components[component_display]=new DisplayComponent(size,size);components[component_collision]=new CollisionComponent(x,y,size,size);components[component_direction]=new DirectionComponent(direction_down);components[component_health]=new HealthComponent(health);components[component_combat]=new CombatComponent(attackDamage,magicDamage,armor);components[component_actions]=new ActionsComponent(DEFAULT_PLAYER_ACTIONS);components[component_controller]=new ControllerComponent(DEFAULT_CONTROLLER_LAYOUT);components[component_abilities]=new AbilitiesComponent(abilities);components[component_animation]=new AnimationComponent(animations);return components}function EnemyTemplate(x=0,y=0,size=DEFAULT_ENEMY_SIZE,direction=randomInt(0,3),health=DEFAULT_ENEMY_HEALTH,attackDamage=DEFAULT_ENEMY_ATTACK_DAMAGE,magicDamage=DEFAULT_ENEMY_MAGIC_DAMAGE,armor=DEFAULT_ENEMY_ARMOR,actions=DEFAULT_ENEMY_ACTIONS,abilities,animations=-1){let components=[];components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(size,size);components[component_collision]=new CollisionComponent(x,y,size,size);components[component_direction]=new DirectionComponent(direction);components[component_health]=new HealthComponent(health);components[component_combat]=new CombatComponent(attackDamage,magicDamage,armor);components[component_actions]=new ActionsComponent(actions);components[component_abilities]=new AbilitiesComponent(abilities);components[component_animation]=new AnimationComponent(animations);return components}function SquareTemplate(x,y,type){let components=[];if(type==square_wall){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_wall);components[component_collision]=new CollisionComponent(x,y,1,1)}else if(type==square_floor){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new Texturecomponent(texture_floor)}else if(type==square_door){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_door_closed);components[component_collision]=new CollisionComponent(x,y,1,1);components[component_interactable]=new InteractableComponent(interactable_door)}else if(type==square_stair){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_stair);components[component_interactable]=new InteractableComponent(interactable_stair)}else if(type==square_level_origin){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_level_origin)}return components}function TorchTemplate(x=0,y=0,size=1,direction=randomInt(0,3)){let components=[];components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(size,size);components[component_direction]=new DirectionComponent(direction);components[component_texture]=new TextureComponent(texture_torch);return components}
function GameEntity(ID,components){this.ID=ID;this.components=components}
function Item(){}
function generateLevel(CONFIG,depth,ROOM_POOL,STAIR_ROOM_POOL){if(DO_LEVEL_GEN){let startTime=millis();let level;let rooms=[];let torches=[];let stairUp={x:0,y:0,sector:0};let stairDown={x:0,y:0,sector:0};level=initLevel(CONFIG.DUNGEON_SIZE,square_wall);rooms.push(generateStairUpRoom(stairUp,CONFIG.DUNGEON_SIZE,STAIR_ROOM_POOL));stairUp.x=rooms[0].x;stairUp.y=rooms[0].y;rooms.push(generateStairDownRoom(stairUp,stairDown,CONFIG.DUNGEON_SIZE,STAIR_ROOM_POOL));stairDown.x=rooms[1].x;stairDown.y=rooms[1].y;generateOtherRooms(level,rooms,CONFIG.DUNGEON_SIZE,CONFIG.ROOM_TRIES,ROOM_POOL);placeRoomsOnLevel(level,rooms);markNodeSquares(level);connectRooms(level,rooms,CONFIG.DUNGEON_SIZE);populateRooms(level,rooms,torches);finalizeLevel(level,stairUp,stairDown);return{"level_origin":stairUp,"squares":level}}else{let level=initLevel(CONFIG.DUNGEON_SIZE,square_floor);let torches=[];let stairUp={x:randomInt(CONFIG.DUNGEON_SIZE),y:randomInt(CONFIG.DUNGEON_SIZE)};let stairDown={x:randomInt(CONFIG.DUNGEON_SIZE),y:randomInt(CONFIG.DUNGEON_SIZE)};finalizeLevel(level,stairUp,stairDown);return new Level(level,stairUp,stairDown,depth,torches)}}function initLevel(size,defaultValue){let level=new Array(size);for(let i=0;i<size;i++){level[i]=new Array(size);for(let j=0;j<size;j++){level[i][j]=defaultValue}}return level}function generateStairUpRoom(stairUp,size,STAIR_ROOM_POOL){stairUp.sector=randomInt(8);sectorToCoordinates(stairUp,size);return new Room(random(STAIR_ROOM_POOL),stairUp.x,stairUp.y)}function generateStairDownRoom(stairUp,stairDown,size,STAIR_ROOM_POOL){stairDown.sector=(stairUp.sector+4)%8;sectorToCoordinates(stairDown,size);return new Room(random(STAIR_ROOM_POOL),stairDown.x,stairDown.y)}function sectorToCoordinates(stair,size){switch(stair.sector){case 0:stair.x=floor(size/4);stair.y=floor(size/4);break;case 1:stair.x=2*floor(size/4);stair.y=floor(size/4);break;case 2:stair.x=3*floor(size/4);stair.y=floor(size/4);break;case 3:stair.x=3*floor(size/4);stair.y=2*floor(size/4);break;case 4:stair.x=3*floor(size/4);stair.y=3*floor(size/4);break;case 5:stair.x=2*floor(size/4);stair.y=3*floor(size/4);break;case 6:stair.x=floor(size/4);stair.y=3*floor(size/4);break;case 7:stair.x=floor(size/4);stair.y=2*floor(size/4);break;}}function generateOtherRooms(level,rooms,size,ROOM_TRIES,ROOM_POOL){for(let i=0;i<ROOM_TRIES;i++){tryRoom(level,rooms,size,ROOM_POOL)}}function tryRoom(level,rooms,size,ROOM_POOL){let newRoom=new Room(random(ROOM_POOL),randomInt(size),randomInt(size));if(isValidRoom(rooms,newRoom,size))rooms.push(newRoom)}function isValidRoom(rooms,newRoom,size){if(newRoom.left<0||newRoom.top<0||newRoom.right>size||newRoom.bottom>size)return false;for(let r of rooms){if(roomsCollide(r,newRoom))return false}return true}function roomsCollide(r1,r2){return!(r1.left>r2.right||r1.top>r2.bottom||r1.right<r2.left||r1.bottom<r2.top)}function placeRoomsOnLevel(level,rooms){for(let r of rooms){for(let i=0;i<r.width;i++){for(let j=0;j<r.height;j++){level[i+r.left][j+r.top]=r.squares[i][j]}}}}function markNodeSquares(level){for(let i=1;i<level.length-1;i+=2){for(let j=1;j<level.length-1;j+=2){if(level[i][j]==square_wall)level[i][j]=new Node(i,j,false)}}}function connectRooms(level,rooms,size){let connected=[rooms[0]];let connectedDoors=rooms[0].doors;while(connected.length<rooms.length){let closestRoom;let closestDistance;for(let r of rooms){if(!connected.includes(r)){closestRoom=r;closestDistance=10000}}for(let c of connected){for(let r of rooms){if(connected.includes(r))continue;else{let currentDistance=roomDistance(c,r);if(currentDistance<closestDistance){closestRoom=r;closestDistance=currentDistance}}}}connectRoom(level,connected,closestRoom,connectedDoors)}}function roomDistance(r1,r2){return abs(r1.x-r2.x)+abs(r1.y-r2.y)}function connectRoom(level,connected,room,connectedDoors){let roomDoors=room.doors;let closestDoors=[connectedDoors[0],roomDoors[0]];let closestDistance=10000;let adjacent=false;let success=false;for(let rd of roomDoors){if(includesDoor(connectedDoors,rd)){closestDoors[0]=rd;adjacent=true;success=true;break}else{for(let cd of connectedDoors){let currentDistance=doorDistance(rd,cd);if(currentDistance<closestDistance){closestDoors=[cd,rd];closestDistance=currentDistance}}}}if(!adjacent){success=makePathBetweenDoors(level,closestDoors[0],closestDoors[1],connectedDoors)}if(success){if(adjacent){level[closestDoors[0][0]][closestDoors[0][1]]=square_door}else{level[closestDoors[0][0]][closestDoors[0][1]]=square_door;level[closestDoors[1][0]][closestDoors[1][1]]=square_door}for(let rd of roomDoors){if(!includesDoor(connectedDoors,rd)){connectedDoors.push(rd)}}connected.push(room)}else{connectedDoors.splice(connectedDoors.indexOf(closestDoors[0]),1);room.doors.splice(room.doors.indexOf(closestDoors[1]),1);connectRoom(level,connected,room,connectedDoors)}}function includesDoor(doorArray,door){for(let d of doorArray){if(door[0]==d[0]&&door[1]==d[1])return true}return false}function doorDistance(d1,d2){return(d1[0]-d2[0])*(d1[0]-d2[0])+(d1[1]-d2[1])*(d1[1]-d2[1])}function makePathBetweenDoors(level,door1,door2,connectedDoors){let searched=[];let searching=[];let distFromStart={};let finalCost={};for(let i=0;i<level.length;i++){for(let j=0;j<level[0].length;j++){distFromStart[level[i][j]]=LARGE_VALUE;finalCost[level[i][j]]=LARGE_VALUE}}let start=getAdjacentNode(level,door1);let end=getAdjacentNode(level,door2);if(start==undefined||end==undefined)return false;searching.push(start);distFromStart[start]=0;finalCost[start]=nodeDistance(start,end);start.cameFrom=undefined;while(searching.length>0){let current=searching[0];for(let s of searching){if(finalCost[s]<finalCost[current])current=s}if(current==end){drawNodePath(level,current,connectedDoors);return true}searching.splice(searching.indexOf(current),1);searched.push(current);let currentNeighbors=getSurroundingNodes(level,current);for(let n of currentNeighbors){if(searched.includes(n)){continue}else{let estimatedDistFromStart=distFromStart[current]+1;if(!searching.includes(n)){searching.push(n)}else if(estimatedDistFromStart>=distFromStart[n]){continue}n.cameFrom=current;distFromStart[n]=estimatedDistFromStart;finalCost[n]=distFromStart[n]+nodeDistance(start,end)}}}return false}function getAdjacentNode(level,door){if(door[0]%2==1&&door[1]%2==1)return level[door[0]][door[1]];if(door[0]>1&&level[door[0]-1][door[1]]instanceof Node)return level[door[0]-1][door[1]];if(door[1]>1&&level[door[0]][door[1]-1]instanceof Node)return level[door[0]][door[1]-1];if(door[0]<level.length-2&&level[door[0]+1][door[1]]instanceof Node)return level[door[0]+1][door[1]];if(door[1]<level.length-2&&level[door[0]][door[1]+1]instanceof Node)return level[door[0]][door[1]+1]}function nodeDistance(start,end){return abs(start.x-end.x)+abs(start.y-end.y)}function getSurroundingNodes(level,node){let neighbors=[];if(node.x>1&&level[node.x-2][node.y]instanceof Node)neighbors.push(level[node.x-2][node.y]);if(node.y>1&&level[node.x][node.y-2]instanceof Node)neighbors.push(level[node.x][node.y-2]);if(node.x<level.length-2&&level[node.x+2][node.y]instanceof Node)neighbors.push(level[node.x+2][node.y]);if(node.y<level.length-2&&level[node.x][node.y+2]instanceof Node)neighbors.push(level[node.x][node.y+2]);return neighbors}function drawNodePath(level,node){level[node.x][node.y].connected=true;while(node.cameFrom!=undefined){fillBetweenNodes(level,node,node.cameFrom);node=node.cameFrom;level[node.x][node.y].connected=true}}function fillBetweenNodes(level,node1,node2){level[node1.x+(node2.x-node1.x)/2][node1.y+(node2.y-node1.y)/2]=square_floor}function populateRooms(level,rooms,torches){}function finalizeLevel(level,stairUp,stairDown){level[stairUp.x][stairUp.y]=square_level_origin;level[stairDown.x][stairDown.y]=square_stair;for(let i=0;i<level.length;i++){for(let j=0;j<level.length;j++){if(level[i][j]instanceof Node){if(level[i][j].connected){level[i][j]=square_floor}else{level[i][j]=square_wall}}level[i][j]=SquareTemplate(i,j,level[i][j])}}}function Node(x,y,connected){this.x=x;this.y=y;this.connected=connected}
function Room(template,x,y){this.width=template.width;this.height=template.height;this.left=x-floor(this.width/2);this.top=y-floor(this.height/2);this.left+=this.left%2-1;this.top+=this.top%2-1;this.right=this.left+this.width;this.bottom=this.top+this.height;this.x=this.left+floor(this.width/2);this.y=this.top+floor(this.height/2);this.squares=template.squares.slice(0);this.doors=new Array(template.doors.length);for(let i=0;i<this.doors.length;i++){this.doors[i]=[template.doors[i][0]+this.left,template.doors[i][1]+this.top]}}
class AISystem extends GameSystem{constructor(config){super([component_ai]);this.config=config}run(engine){for(let entity of this.entities){if(Utility.distance(entity.position,engine.getPlayer().position)<entity_active_range){if(entity.ai.noticedPlayer){this.handleActiveEntity(engine,entity,engine.getPlayer())}else{this.handleIdleEntity(engine,entity,engine.getPlayer())}}}}handleEvent(engine,eventID,data){switch(eventID){case event_successful_action:let entity=data.entity;if(entity instanceof Mob&&!entity.ai.noticedPlayer&&entity.display.visible){let self=this;setTimeout(function(){entity.ai.noticedPlayer=self.checkNoticePlayer(engine,entity,engine.getPlayer())},this.config.MOB_REACTION_TIME)}break;}}handleActiveEntity(engine,entity,player){if(entity.actions.busy==0){entity.actions.nextAction=this.determineAction(engine,entity,player)}}determineAction(engine,entity,player){return randomInt(11,14)}getAttackAction(entity,player){let dir=Utility.getDirectionToEntity(entity,player);entity.direction.direction=dir;return direction_to_attack[dir]}getMoveCloserAction(engine,entity,player){return direction_to_movement[Utility.getDirectionToEntity(entity,player)]}handleIdleEntity(engine,entity,player){if(entity.ai.idleTimer==0){entity.actions.nextAction=this.determineIdleAction(engine,entity);entity.ai.idleTimer=randomInt(this.config.MIN_IDLE_TIME,this.config.MAX_IDLE_TIME)}else{entity.ai.idleTimer--}}checkNoticePlayer(engine,entity,player){switch(entity.direction.direction){case direction_up:if(entity.collision.top+1>=player.collision.bottom){return VisionSystem.lineOfSight(engine,entity.position,player.position)}break;case direction_right:if(entity.collision.right-1<=player.collision.left){return VisionSystem.lineOfSight(engine,entity.position,player.position)}break;case direction_down:if(entity.collision.bottom-1<=player.collision.top){return VisionSystem.lineOfSight(engine,entity.position,player.position)}break;case direction_left:if(entity.collision.left+1>=player.collision.right){return VisionSystem.lineOfSight(engine,entity.position,player.position)}break;default:console.log("Cannot determine entity direction: "+entity.direction.direction);return false;}return false}determineIdleAction(engine,entity){let randomMoveAction=action_move+randomInt(1,5);if(MovementSystem.validMove(engine,entity,MovementSystem.getDestination(entity,randomMoveAction))){return randomMoveAction}else{if(randomMoveAction==action_move_up){return action_move_down}else if(randomMoveAction==action_move_right){return action_move_left}else if(randomMoveAction==action_move_down){return action_move_up}else if(randomMoveAction==action_move_left){return action_move_right}return action_none}}}
class AbilitySystem extends GameSystem{constructor(){super([component_abilities])}run(engine){for(let entity of this.objects){switch(entity.actions.currentAction){case action_ability_one:this.handleAbility(engine,entity,entity.abilities.abilities[0]);break;case action_ability_two:this.handleAbility(engine,entity,entity.abilities.abilities[1]);break;case action_ability_three:this.handleAbility(engine,entity,entity.abilities.abilities[2]);break;}}}handleEvent(engine,eventID,data){}handleAbility(engine,entity,ability){if(ability!==undefined){switch(ability.abilityType){case ability_type_melee:this.handleMeleeAbility(engine,entity,ability);break;case ability_type_aoe:this.handleAOEAbility(engine,entity,ability);break;case ability_type_aoe_ranged:this.handleAOERangedAbility(engine,entity,ability);break;case ability_type_skillshot:this.handleSkillshotAbility(engine,entity,ability);break;case ability_type_smite:this.handleSmiteAbility(engine,entity,ability);break;}}}handleMeleeAbility(engine,entity,ability){let squares=Utility.getSquaresInFront(engine,entity.position,entity.direction.direction,ability.range);let targets=Utility.getEntitiesInSquares(engine,squares);let dirOffset=0;while(targets.length==0&&dirOffset<4){dirOffset++;squares=Utility.getSquaresInFront(engine,entity.position,(entity.direction.direction+dirOffset)%4,ability.range);targets=Utility.getEntitiesInSquares(engine,squares)}if(targets.length>0){entity.direction.direction=(entity.direction.direction+dirOffset)%4;for(let t of targets){if(t!=entity&&t.components.includes(component_combat)){engine.sendEvent(event_melee_ability,{'entity':entity,'target':t,'ability':ability})}}engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}}handleAOEAbility(engine,entity,ability){let squares=Utility.getSquaresAround(engine,entity.position,ability.range);let targets=Utility.getEntitiesInSquares(engine,squares);for(let t of targets){if(t!=entity&&t.components.includes(component_combat)){engine.sendEvent(event_melee_ability,{'entity':entity,'target':t,'ability':ability})}}if(targets.length>0){engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}}handleAOERangedAbility(engine,entity,ability){console.log('aoe ranged: '+entity);engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}handleSkillshotAbility(engine,entity,ability){console.log('skillshot: '+entity);engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}handleSmiteAbility(engine,entity,ability){console.log('smite: '+entity);engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}}
class ActionSystem extends GameSystem{constructor(){super([component_actions])}init(engine){this.hitstunTimer=0}run(engine){if(this.hitstunTimer==0){for(let entity of this.objects){for(let a in entity.actions.actions){if(entity.actions.actions[a].currentCooldown>0){entity.actions.actions[a].currentCooldown--}}if(entity.actions.busy>0){entity.actions.busy--}else{this.setCurrentAction(entity,engine)}}}else{this.hitstunTimer--}}handleEvent(engine,eventID,data){switch(eventID){case event_successful_action:this.handleSuccessfulAction(engine,data.entity,data.action);break;case event_failed_action:this.handleFailedAction(engine,data.entity);break;case event_hitstun:this.hitstunTimer=data.ticks;break;}}setCurrentAction(entity,engine){entity.actions.currentAction=entity.actions.nextAction;entity.actions.nextAction=action_none}setCooldowns(entity,action){entity.actions.busy=entity.actions.actions[action].time;entity.actions.actions[action].currentCooldown=entity.actions.actions[action].cooldown}handleSuccessfulAction(engine,entity,action){this.setCooldowns(entity,action);if(action_to_animation[action]!==undefined&&entity.animation.animations[action_to_animation[action]]!==undefined){entity.animation.animation=action_to_animation[action];engine.sendEvent(event_new_animation,entity)}entity.actions.lastActionFailed=false;entity.actions.lastAction=action;entity.actions.currentAction=action_none}handleFailedAction(engine,entity){this.setCooldowns(entity,action_none);entity.actions.lastActionFailed=true;entity.actions.lastAction=entity.actions.currentAction;entity.actions.currentAction=action_none}}
class AnimationSystem extends GameSystem{constructor(config){super([component_animation]);this.config=config}init(engine){this.animationCounter=0;this.idleAnimationCounter=0}run(engine){if(this.animationCounter==this.config.ANIMATION_SPEED){this.animationCounter=0;if(this.idleAnimationCounter==this.config.IDLE_ANIMATION_SLOW_FACTOR){this.idleAnimationCounter=0}for(let o of this.objects){if(o.animation.animation==animation_idle){if(this.idleAnimationCounter==0){o.animation.stage++;if(o.animation.stage==o.animation.animations[o.animation.animation].length){this.startIdleAnimation(o)}this.updateAnimation(o)}}else{o.animation.stage++;if(o.animation.stage==o.animation.animations[o.animation.animation].length){this.startIdleAnimation(o)}this.updateAnimation(o)}}this.idleAnimationCounter++}this.animationCounter++}handleEvent(engine,eventID,data){switch(eventID){case event_new_animation:this.startAnimation(data);break;}}startIdleAnimation(entity){entity.animation.animation=animation_idle;entity.animation.stage=0;this.updateAnimation(entity)}updateAnimation(entity){entity.animation.offsetX=entity.animation.animations[entity.animation.animation][entity.animation.stage].ox;entity.animation.offsetY=entity.animation.animations[entity.animation.animation][entity.animation.stage].oy;entity.animation.sprite=entity.animation.animations[entity.animation.animation][entity.animation.stage].sprite}startAnimation(object){object.animation.stage=0;this.updateAnimation(object)}}
function AudioManager(){const mm=new MusicManager;let sounds=[]}
class CombatSystem extends GameSystem{constructor(config){super([component_combat]);this.config=config}init(engine){this.inCombat=false;this.combatTimer=0}run(engine){if(this.combatTimer>0){this.combatTimer--;if(this.combatTimer==0){engine.sendEvent(event_end_combat)}}}handleEvent(engine,eventID,data){switch(eventID){case event_melee_ability:this.meleeAttack(engine,data.entity,data.target,data.ability);this.resetCombatTimer(engine);break;case event_melee_ability:this.meleeAttack(engine,data.entity,data.target,data.ability);this.resetCombatTimer(engine);break;}}resetCombatTimer(engine){if(this.combatTimer==0){engine.sendEvent(event_begin_combat)}this.combatTimer=this.config.COMBAT_TIMER}determineAttackDirection(entity,objects){for(let o of objects){let dir=Utility.entityAdjacent(entity,o);if(dir!==-1){return dir}}return-1}meleeAttack(engine,entity,target,ability){let healthLost=max(0,entity.combat.attackDamage-target.combat.armor);engine.sendEvent(event_entity_take_damage,{'entity':target,'healthLost':healthLost});return}spinAttack(engine,entity,objects){let targets=[];for(let o of objects){if(entity!=o&&this.entityAround(entity,o)){targets.push(o)}}if(targets.length>0){if(entity instanceof Player){engine.sendEvent(event_player_spin_attack)}for(let o of targets){let healthLost=max(0,entity.combat.meleeAttackPower-o.combat.meleeDefensePower);engine.sendEvent(event_entity_attacked,{'attacker':entity,'target':o,'healthLost':healthLost})}engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity});this.beginCombat(engine)}}entityAround(entity,otherEntity){return Utility.collision(new CollisionComponent(entity.position.x-1,entity.position.y-1,3),otherEntity.collision)}static validMeleeAttack(engine,entity){for(let o of engine.getEntities()){if(entity!=o){if(Utility.entityAdjacent(entity,o)!=-1){return true}}}return false}}
class DisplaySystem extends GameSystem{constructor(config,images){super([component_position,component_display]);this.config=config;this.textures=images}init(engine){this.camera={display:true,x:0,y:0,shakeOffsetX:0,shakeOffsetY:0,combat:false,sprinting:false,zoom:this.config.CAMERA_DEFAULT_ZOOM};this.cameraZoomTimer=undefined;this.cameraShakeTimer=undefined;this.cameraMoving=false;this.lightOffset=0;this.lightOffsetScale=.02;this.lightOffsetSpeed=600;this.centerX=floor(width/2);this.centerY=floor(height/2);this.gridSize=this.config.GRID_SIZE;this.halfGridSize=this.gridSize/2}run(engine){background(0);if(this.camera.display){if(this.cameraMoving){let player=engine.getPlayer();if(player.animation.animation==animation_idle){this.cameraMoving=false}this.centerCamera(this.camera,player)}canvas.translate(this.centerX+this.camera.shakeOffsetX,this.centerY+this.camera.shakeOffsetY);canvas.scale(this.camera.zoom,this.camera.zoom);this.drawSquares(engine.getMap());this.drawEntities(engine.getEntities());this.drawLights(this.objects);this.drawMobHealth(this.objects);canvas.setTransform()}}handleEvent(engine,eventID,data){switch(eventID){case event_begin_level:this.determineSquareTextures(engine.getMap());this.cameraMoving=true;this.camera.display=true;break;case event_player_moved:this.cameraMoving=true;this.camera.display=true;break;case event_up_level:case event_down_level:this.camera.display=false;break;case event_window_resized:this.resize();break;case event_player_start_sprinting:this.camera.sprinting=true;this.decideCameraZoomState(this.camera);break;case event_player_stop_sprinting:this.camera.sprinting=false;this.decideCameraZoomState(this.camera);break;case event_entity_take_damage:this.shakeCamera(this.camera,data.healthLost);break;}}static texturesConnect(t1,t2){if(t2===undefined){return false}if(t1 instanceof WallSquare){return t2 instanceof WallSquare}else if(t1 instanceof FloorSquare){return!(t2 instanceof WallSquare)}}static determineTextureType(square,texture,map){let TOP=false,RIGHT=false,BOTTOM=false,LEFT=false;let numNeighbors=0;if(square.position.y>0){TOP=DisplaySystem.texturesConnect(square,map[square.position.x][square.position.y-1]);if(TOP){numNeighbors++}}if(square.position.x<map.length-1){RIGHT=DisplaySystem.texturesConnect(square,map[square.position.x+1][square.position.y]);if(RIGHT){numNeighbors++}}if(square.position.y<map.length-1){BOTTOM=DisplaySystem.texturesConnect(square,map[square.position.x][square.position.y+1]);if(BOTTOM){numNeighbors++}}if(square.position.x>0){LEFT=DisplaySystem.texturesConnect(square,map[square.position.x-1][square.position.y]);if(LEFT){numNeighbors++}}switch(numNeighbors){case 0:texture.textureElements.push(new TextureElementComponent(texture_cross,0,0));break;case 1:if(TOP){texture.textureElements.push(new TextureElementComponent(texture_U_top,0,0))}else if(RIGHT){texture.textureElements.push(new TextureElementComponent(texture_U_right,0,0))}else if(BOTTOM){texture.textureElements.push(new TextureElementComponent(texture_U_bottom,0,0))}else if(LEFT){texture.textureElements.push(new TextureElementComponent(texture_U_left,0,0))}break;case 2:if(LEFT&&RIGHT){texture.textureElements.push(new TextureElementComponent(texture_side_top,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_bottom,0,0))}else if(TOP&&BOTTOM){texture.textureElements.push(new TextureElementComponent(texture_side_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_left,0,0))}else if(TOP&&RIGHT){texture.textureElements.push(new TextureElementComponent(texture_in_corner_bottom_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_right,0,0))}else if(BOTTOM&&RIGHT){texture.textureElements.push(new TextureElementComponent(texture_in_corner_top_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_right,0,0))}else if(BOTTOM&&LEFT){texture.textureElements.push(new TextureElementComponent(texture_in_corner_top_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_left,0,0))}else if(LEFT&&TOP){texture.textureElements.push(new TextureElementComponent(texture_in_corner_bottom_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_left,0,0))}break;case 3:if(!TOP){texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_top,0,0))}else if(!RIGHT){texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_right,0,0))}else if(!BOTTOM){texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_bottom,0,0))}else if(!LEFT){texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_left,0,0))}break;case 4:texture.textureElements.push(new TextureElementComponent(texture_default,0,0));break;default:texture.textureElements.push(new TextureElementComponent(texture_default,0,0));break;}}determineSquareTextures(map){for(let i=0;i<map.length;i++){for(let j=0;j<map.length;j++){let square=map[i][j];for(let texture of square.textures){switch(texture.textureType){case texture_wall:case texture_floor:DisplaySystem.determineTextureType(square,texture,map);break;default:texture.textureElements.push(new TextureElementComponent(texture_default,0,0));break;}if(texture.textureElements.length==1&&texture.textureElements[0].element==texture_default){this.setTextureAlt(texture)}}}}}setTextureAlt(texture){if(this.textures[texture.textureType][texture_num_alts]>0){let rand=random(texture_probability_distribution[this.textures[texture.textureType][texture_num_alts]+1]);for(let i=0;i<this.textures[texture.textureType][texture_num_alts]+1;i++){if(rand<texture_probability_distribution[i]){texture.textureElements[0].element=texture_default+i;return}}}}drawSquares(map){for(let r of map){for(let s of r){if(s.display.discovered){let bounds=this.getDrawBounds(s);if(this.onScreen(bounds,this.camera.zoom)){this.drawTexture(s,bounds)}}}}}drawTexture(object,bounds){let x=bounds.x,y=bounds.y,w=bounds.w,h=bounds.h;for(let texture of object.textures){for(let textureElement of texture.textureElements){if(this.textures[texture.textureType][textureElement.element]==undefined){image(this.textures[texture.textureType][texture_default],x+this.gridSize*textureElement.xOff,y+this.gridSize*textureElement.yOff,w,h)}else{image(this.textures[texture.textureType][textureElement.element],x+this.gridSize*textureElement.xOff,y+this.gridSize*textureElement.yOff,w,h)}}}}drawEntities(entities){for(let e of entities){if(e.display.visible){let bounds=this.getDrawBounds(e);if(this.onScreen(bounds,this.camera.zoom)){if(e.components.indexOf(component_animation)!==-1){this.drawAnimation(e,bounds)}else if(e.components.indexOf(component_texture)!==-1){this.drawAnimation(e,bounds)}else{let x=bounds.x,y=bounds.y,w=bounds.w,h=bounds.h;if(e instanceof Torch){fill(255,220,130,.75);switch(e.direction.direction){case direction_up:arc(x,y,w,Math.PI,2*Math.PI);break;case direction_right:arc(x,y,h,Math.PI/2,1.5*Math.PI,true);break;case direction_down:arc(x,y,w,0,Math.PI);break;case direction_left:arc(x,y,h,Math.PI/2,1.5*Math.PI);break;}}else{fill(255,100,100);rect(x,y,w,h)}}}}}}drawAnimation(object,bounds){let x=bounds.x,y=bounds.y,w=bounds.w,h=bounds.h;x+=this.gridSize*object.animation.offsetX;y+=this.gridSize*object.animation.offsetY;let s=object.animation.sprite;if(s==undefined){fill(20);rect(x+this.gridSize/8-2,y+this.gridSize/8-2,w-this.gridSize/4+4,h-this.gridSize/4+4);if(object instanceof Player){fill(0,200,230)}else{fill(200,20,40)}rect(x+this.gridSize/8,y+this.gridSize/8,w-this.gridSize/4,h-this.gridSize/4);if(object instanceof Player){fill(255,255,0);switch(object.direction.direction){case direction_up:ellipse(x+this.gridSize/2,y+this.gridSize/2-this.gridSize/3,this.gridSize/6,this.gridSize/6);break;case direction_right:ellipse(x+this.gridSize/2+this.gridSize/3,y+this.gridSize/2,this.gridSize/6,this.gridSize/6);break;case direction_down:ellipse(x+this.gridSize/2,y+this.gridSize/2+this.gridSize/3,this.gridSize/6,this.gridSize/6);break;case direction_left:ellipse(x+this.gridSize/2-this.gridSize/3,y+this.gridSize/2,this.gridSize/6,this.gridSize/6);break;}}}else{image(a,x,y,w,h)}}drawLights(objects){for(let o of objects){if(o.display.discovered&&o.components.includes(component_light)){this.lightSquare(o)}}}lightSquare(o){let bounds=this.getDrawBounds(o);if(o.display.visible){if(o instanceof WallSquare||o instanceof DoorSquare){canvas.fillStyle=light_level_to_light[2];rect(bounds.x,bounds.y,bounds.w,bounds.h);canvas.fillStyle=light_level_to_shadow[2];rect(bounds.x,bounds.y,bounds.w,bounds.h)}else{canvas.fillStyle=light_level_to_light[o.light.level];rect(bounds.x,bounds.y,bounds.w,bounds.h);canvas.fillStyle=light_level_to_shadow[o.light.level];rect(bounds.x,bounds.y,bounds.w,bounds.h)}}else{canvas.fillStyle=light_level_to_light[0];rect(bounds.x,bounds.y,bounds.w,bounds.h);canvas.fillStyle=light_level_to_shadow[0];rect(bounds.x,bounds.y,bounds.w,bounds.h);fill(0,0,0,.25);rect(bounds.x,bounds.y,bounds.w,bounds.h)}}drawMobHealth(objects){const HEALTH_BAR_OFFSET=3;const HEALTH_BAR_HEIGHT=4;for(let mob of objects){if(mob instanceof Mob&&mob.components.includes(component_health)&&mob.display.visible){let bounds=this.getDrawBounds(mob);let x=bounds.x;let y=bounds.y;let xoff=this.gridSize*mob.animation.offsetX;let yoff=this.gridSize*mob.animation.offsetY;let healthBarWidth=mob.display.width*this.gridSize-this.gridSize/4;fill(40,0,0);rect(xoff+x+this.gridSize/8,yoff+y-HEALTH_BAR_OFFSET,healthBarWidth,HEALTH_BAR_HEIGHT);healthBarWidth=healthBarWidth*HealthSystem.getHealthPercent(mob);fill(50,220,120);rect(xoff+x+this.gridSize/8,yoff+y-HEALTH_BAR_OFFSET,healthBarWidth,HEALTH_BAR_HEIGHT)}}}getDrawBounds(object){return{'x':this.gridSize*(object.position.x+object.display.offsetX-this.camera.x),'y':this.gridSize*(object.position.y+object.display.offsetY-this.camera.y),'w':object.display.width*this.gridSize,'h':object.display.height*this.gridSize}}onScreen(bounds,scale){const border=max(bounds.w,bounds.h)+10;const t=-(height/scale/2)-border;const r=width/scale/2+border;const b=height/scale/2+border;const l=-(width/scale/2)-border;return bounds.y>t&&bounds.x+bounds.w<r&&bounds.y+bounds.h<b&&bounds.x>l}centerCamera(camera,player){if(player.animation.animation==animation_idle){camera.x=player.position.x;camera.y=player.position.y}else{camera.x=player.position.x+player.animation.offsetX;camera.y=player.position.y+player.animation.offsetY}}decideCameraZoomState(camera){if(camera.combat){if(camera.sprinting){this.changeZoom(camera,this.config.CAMERA_ZOOM_STEPS_SLOW,this.config.CAMERA_COMBAT_ZOOM)}else{this.changeZoom(camera,this.config.CAMERA_ZOOM_STEPS_MEDIUM,this.config.CAMERA_COMBAT_ZOOM)}}else if(camera.sprinting){this.changeZoom(camera,this.config.CAMERA_ZOOM_STEPS_MEDIUM,this.config.CAMERA_SPRINT_ZOOM)}else{this.changeZoom(camera,this.config.CAMERA_ZOOM_STEPS_MEDIUM,this.config.CAMERA_DEFAULT_ZOOM)}}changeZoom(camera,steps,zoom){if(camera.zoom!=zoom){clearTimeout(this.cameraZoomTimer);this.recursiveZoom(camera,this.config.CAMERA_ZOOM_SPEED,zoom,(zoom-camera.zoom)/steps)}}recursiveZoom(camera,speed,zoom,dif){let self=this;if(dif<=0&&zoom-camera.zoom>=0){camera.zoom=zoom;return}else if(dif>0&&zoom-camera.zoom<=0){camera.zoom=zoom;return}else{camera.zoom+=dif;this.cameraZoomTimer=setTimeout(function(){self.recursiveZoom(camera,speed,zoom,dif)},speed)}}shakeCamera(camera,shakeAmount){clearTimeout(this.cameraShakeTimer);this.shakeCameraHelper(camera,random(2*Math.PI),shakeAmount)}shakeCameraHelper(camera,angle,shakeAmount){let self=this;if(shakeAmount>2){camera.shakeOffsetX=shakeAmount*Math.cos(angle);camera.shakeOffsetY=shakeAmount*Math.sin(angle);angle+=random(Math.PI*.8,Math.PI*1.2);if(angle>2*Math.PI){angle=angle-2*Math.PI}this.cameraShakeTimer=setTimeout(function(){self.shakeCameraHelper(camera,angle,shakeAmount*.8)},this.config.CAMERA_SHAKE_SPEED)}else{camera.shakeOffsetX=0;camera.shakeOffsetY=0;this.cameraShakeTimer=undefined}}resize(){let w=document.documentElement.clientWidth;let h=document.documentElement.clientHeight;resizeCanvas(w,h);width=w;height=h;this.centerX=floor(w/2);this.centerY=floor(h/2)}}
class EntitySystem extends GameSystem{constructor(config,player_data,entity_data,boss_data){super([component_actions]);this.config=config;this.playerData=player_data;this.entityData=entity_data;this.bossData=boss_data}handleEvent(engine,eventID,data){switch(eventID){case event_new_player:this.generatePlayer(engine);break;case event_level_generated:for(let ID in this.entities){if(component_controller in this.entities[ID]){this.entities[ID].position.x=data.levelOrigin.x;this.entities[ID].position.y=data.levelOrigin.y}}break;case event_spawn_enemy_close:this.generateEnemy(engine,engine.getPlayer().position.x-randomInt(-4,4),engine.getPlayer().position.y-randomInt(2,4),engine.getDepth(),this.entityData[random(Object.keys(this.entityData))]);break;}}generatePlayer(engine){let playerClass=class_warrior;let config=this.playerData[playerClass];let animations=Utility.convertAnimationsFromConfig(config.animations);let player=PlayerTemplate(-1,-1,0,1,config.health,config.attackDamage,config.magicDamage,config.armor,config.abilities,animations);engine.createEntity(player);engine.sendEvent(event_player_generated,{},1)}generateEntities(engine,level,depth){let config,entityPosition;let numEntities=floor(random(level.rooms.length*.75,level.rooms.length*1.5));let entities=[];while(numEntities>0){config=this.entityData[random(Object.keys(this.entityData))];entityPosition=this.findSafeSpawnLocation(config.size,entities[depth],level.stairUp,level.map.map);if(entityPosition!=undefined){this.generateEnemy(engine,entityPosition.x,entityPosition.y,depth,config)}numEntities--}}generateEnemy(engine,x,y,depth,config){let animations=Utility.convertAnimationsFromConfig(config.animations);if(this.safeSpawnLocation(x,y,config.size,engine.getEntities(),engine.getMap())){let mob=new Mob(x,y,depth,config,config.actions,animations);engine.createEntity(mob)}}findSafeSpawnLocation(size,entities,stairUp,map){let validSquares=[];for(let i=0;i<map.length;i++){for(let j=0;j<map[0].length;j++){if(abs(stairUp.x-i)+abs(stairUp.y-j)>this.config.SAFE_DISTANCE_FROM_PLAYER&&this.safeSpawnLocation(i,j,size,entities,map)){validSquares.push(map[i][j].position)}}}return random(validSquares)}safeSpawnLocation(x,y,size,entities,map){for(let i=x;i<x+size;i++){for(let j=y;j<y+size;j++){if(map[i][j].components.includes(component_collision)){return false}}}let col=new CollisionComponent(x,y,size);if(entities!==undefined){for(let e of entities){if(Utility.collision(col,e.collision)){return false}}}return true}generateBosses(engine,entities,levels,bossData,depth,player){let config,entityPosition;let numBosses=1;entities.push([]);while(numBosses>0){config=bossData[random(Object.keys(bossData))];entityPosition=this.findSafeSpawnLocation(config.size,entities[depth],player,levels[depth].map.map);if(entityPosition!=undefined){this.generateEnemy(engine,entityPosition.x,entityPosition.y,depth,config)}numEntities--}}updateEntities(engine){}}
class HealthSystem extends GameSystem{constructor(config){super([component_health]);this.config=config}init(engine){this.healthRegenCounter=0;this.healthRegen=true}run(engine){if(this.healthRegen){if(this.healthRegenCounter%this.config.HEALTH_REGEN_TIMER==0){for(let o of this.objects){if(o.health.health<o.health.maxHealth){o.health.health+=2}}this.healthRegenCounter=1}this.healthRegenCounter++}}handleEvent(engine,eventID,data){switch(eventID){case event_entity_take_damage:this.applyDamage(engine,data.entity,data.healthLost);if(data.entity instanceof Player){engine.sendEvent(event_player_take_damage)}break;case event_begin_combat:this.healthRegen=false;break;case event_end_combat:this.healthRegen=true;break;}}applyDamage(engine,object,healthLost){object.health.health-=healthLost;this.checkDead(engine,object)}checkDead(engine,object){if(object.health.health<=0){engine.removeObject(object);if(object instanceof Player){engine.sendEvent(event_game_over)}}}}
class InputSystem extends GameSystem{constructor(){super([component_controller])}init(engine){this.mobSpawnCooldown=0;this.inputs=[];let self=this;document.addEventListener("keydown",function(e){self.keyDown(e)});document.addEventListener("keyup",function(e){self.keyUp(e)})}run(engine){if(keys.includes("n")&&this.mobSpawnCooldown<=0){this.mobSpawnCooldown=10;engine.sendEvent(event_spawn_enemy_close,engine.getPlayer())}if(this.mobSpawnCooldown>0){this.mobSpawnCooldown--}this.setPlayerAction(engine,this.inputs)}addObject(object){}keyDown(event){if(!this.inputs.includes(event.keyCode)){this.inputs.unshift(event.keyCode)}}keyUp(event){if(this.inputs.includes(event.keyCode)){this.inputs.splice(this.inputs.indexOf(event.keyCode),1)}}setPlayerAction(engine,inputs){let player=engine.getPlayer();if(inputs.length>0){let highestPriority=0;let playerAction=action_none;for(let key of inputs){let action=keyCode_to_action[key];let priority=action_to_priority[action];priority=this.fixPriority(engine,player,action,priority);if(priority>highestPriority&&player.actions.actions[action].currentCooldown==0){playerAction=action;highestPriority=priority}}player.actions.nextAction=playerAction}else{player.actions.nextAction=action_none}}fixPriority(engine,player,action,priority){if(player.actions.lastAction==action){if(player.actions.lastActionFailed){return 0}else{return priority-.1}}return priority}actionEqualsLastAction(player,a){return k}}
class LevelSystem extends GameSystem{constructor(config,room_pool,stair_room_pool){super([]);this.config=config;this.roomPool=room_pool;this.stairRoomPool=stair_room_pool}handleEvent(engine,eventID,data){switch(eventID){case event_new_level:let levelOrigin=this.generateLevel(engine,data.depth);engine.sendEvent(event_level_generated,{levelOrigin:levelOrigin},1);break;}}generateLevel(engine,depth){let level=generateLevel(this.config,depth,this.roomPool,this.stairRoomPool);for(let row of level.squares){for(let square of row){engine.createEntity(square)}}return level.level_origin}}
class LightSystem extends GameSystem{constructor(config){super([component_light_emitter]);this.config=config}run(engine){}handleEvent(engine,eventID,data){switch(eventID){case event_spawn_enemy_close:this.light(engine.getMap());break;case event_player_moved:setTimeout(function(){this.light(engine.getMap())}.bind(this),50);break;case event_begin_level:this.light(engine.getMap());break;}}generateTorches(engine,level,rooms){if(DO_LEVEL_GEN){for(let room of rooms){if(room.width>=5&&room.height>=5){let torchChance=this.config.ROOM_TORCH_CHANCE;let fullWalls=[];while(random()<torchChance&&fullWalls.length<3){let dir=randomInt(4);while(fullWalls.includes(dir)){dir=randomInt(4)}fullWalls.push(dir);let x=0,y=0;switch(dir){case direction_up:x=room.left+randomInt(2,room.width-2);y=room.top;dir=direction_down;if(level[x][room.top-1]instanceof DoorSquare){continue}break;case direction_right:x=room.right-1;y=room.top+randomInt(2,room.height-2);dir=direction_left;if(level[room.right][y]instanceof DoorSquare){continue}break;case direction_down:x=room.left+randomInt(2,room.width-2);y=room.bottom-1;dir=direction_up;if(level[x][room.bottom]instanceof DoorSquare){continue}break;case direction_left:x=room.left;y=room.top+randomInt(2,room.height-2);dir=direction_right;if(level[room.left-1][y]instanceof DoorSquare){continue}break;}engine.addObject(new Torch(x,y,dir,engine.getDepth()));torchChance-=this.config.CHANCE_ADDITIONAL_TORCH}}}}}light(map){for(let r of map){for(let s of r){s.light.level=0}}for(let l of this.objects){this.setLightLevel(map[l.position.x][l.position.y],l.lightEmitter.level);for(let octant=0;octant<8;octant++){this.lightTriangle(map,octant,l.position.x,l.position.y,l.lightEmitter.level)}}}setLightLevel(object,range,x,y){let l=x===undefined?range:range-x-floor(y*.4);if(object.light.level<l){object.light.level=l}}lightTriangle(map,octant,sx,sy,range){let x=1;let shadows=[];let squaresVisible=true;while(x<=range&&squaresVisible){squaresVisible=false;let y=0;let curslope=0;while(curslope<=1){if(!VisionSystem.inShadow(x,y,shadows)){squaresVisible=true;let cur=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);if(cur===undefined){break}this.setLightLevel(cur,range,x,y);if(cur.display.opaque){let firstBlocked=this.getFirstBlockedLight(map,octant,x,y,sx,sy,shadows,range);let lastBlocked=this.getBlockedLight(map,octant,x,y,sx,sy,shadows,range);let shadowStart=VisionSystem.slope(firstBlocked.x,firstBlocked.y,BOTTOM_RIGHT);let shadowEnd=VisionSystem.slope(lastBlocked.x,lastBlocked.y,TOP_LEFT);shadows.push([shadowStart,shadowEnd])}else{let above=VisionSystem.getTranslatedSquare(map,octant,x,y+1,sx,sy);if(above!==undefined){}}}y++;curslope=VisionSystem.slope(x,y,CENTER_SQUARE)}x++}}getFirstBlockedLight(map,octant,x,y,sx,sy,shadows,range){let firstBlocked={x:x,y:y};let currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);while(currentBlocked!==undefined&&currentBlocked.display.opaque&&VisionSystem.slope(x,y,CENTER_SQUARE)>0){firstBlocked={x:x,y:y};if(!VisionSystem.inShadow(x,y,shadows)){this.setLightLevel(currentBlocked,range,x,y)}y--;currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy)}return firstBlocked}getBlockedLight(map,octant,x,y,sx,sy,shadows,range){let lastBlocked={x:x,y:y};let currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);while(currentBlocked!==undefined&&currentBlocked.display.opaque&&VisionSystem.slope(x,y,BOTTOM_RIGHT)<1){lastBlocked={x:x,y:y};if(!VisionSystem.inShadow(x,y,shadows)){this.setLightLevel(currentBlocked,range,x,y)}y++;currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy)}return lastBlocked}}
class MovementSystem extends GameSystem{constructor(){super([component_position,component_collision,component_actions])}init(){this.movementFrozen=true}run(engine){if(!this.movementFrozen){for(let entity of this.objects){switch(entity.actions.currentAction){case action_move_up:case action_move_right:case action_move_down:case action_move_left:this.moveFromAction(engine,entity,this.objects);break;}}}}handleEvent(engine,eventID,data){switch(eventID){case event_level_loaded:let player=engine.getPlayer();if(player.depth.depth<=engine.getDepth()){this.fixPlayerPosition(player,data.stairUp)}else if(player.depth.depth>engine.getDepth()){this.fixPlayerPosition(player,data.stairDown)}player.depth.depth=engine.getDepth();break;case event_up_level:case event_down_level:this.movementFrozen=true;break;case event_begin_level:this.movementFrozen=false;break;}}fixPlayerPosition(player,stair){player.position.x=stair.x;player.position.y=stair.y;player.collision.top=stair.y;player.collision.right=stair.x+player.collision.width;player.collision.bottom=stair.y+player.collision.height;player.collision.left=stair.x}move(engine,entity,objects,destination){if(destination!=undefined&&MovementSystem.validMove(engine,entity,destination)){entity.direction.direction=action_to_direction[entity.actions.currentAction];entity.position.x=destination.x;entity.position.y=destination.y;entity.collision.top=destination.y;entity.collision.right=destination.x+entity.collision.width;entity.collision.bottom=destination.y+entity.collision.height;entity.collision.left=destination.x;engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity});return true}else{entity.direction.direction=action_to_direction[entity.actions.currentAction];entity.actions.lastAction=entity.actions.currentAction;entity.actions.currentAction=action_none;return false}}moveFromAction(engine,entity,objects){let destination=MovementSystem.getDestination(entity,entity.actions.currentAction);if(this.move(engine,entity,objects,destination)){if(entity instanceof Player){this.playerWalkEvents(engine,entity)}else if(entity instanceof Mob){engine.sendEvent(event_entity_moved)}}}playerWalkEvents(engine,player){let square=engine.getMap()[player.position.x][player.position.y];if(square instanceof StairUpSquare&&engine.getDepth()>0){engine.sendEvent(event_up_level)}else if(square instanceof StairDownSquare){engine.sendEvent(event_down_level)}else{if(square instanceof DoorSquare){square.open()}engine.sendEvent(event_player_moved)}}static getDestination(entity,movement){switch(movement){case action_move_up:return new PositionComponent(entity.position.x,entity.position.y-1);case action_move_right:return new PositionComponent(entity.position.x+1,entity.position.y);case action_move_down:return new PositionComponent(entity.position.x,entity.position.y+1);case action_move_left:return new PositionComponent(entity.position.x-1,entity.position.y);default:console.log('No direction');return undefined;}}static validMove(engine,entity,destination){let validMove=true;for(let i=destination.x;i<destination.x+entity.collision.width;i++){for(let j=destination.y;j<destination.y+entity.collision.height;j++){if(!Utility.walkable(i,j,engine.getMap(),entity,engine.getEntities())){validMove=false}}}return validMove}}
function MusicManager(){let music=MUSIC;MUSIC=null;let currentLoop=music[0];let loop=function(){currentLoop.ended=function(){currentLoop=playSound(music[randomInt(music.length)]);loop()}};let init=function(){}()}
class SprintSystem extends GameSystem{constructor(config){super([component_sprint]);this.config=config}init(engine){for(let entity of this.objects){this.resetSprintCounter(entity)}}run(engine){for(let entity of this.objects){if(entity.sprint.sprinting){if(this.sprintTimerExpired(entity,this.config.SPRINT_RESET_TIME_SPRINTING)){this.stopSprinting(engine,entity)}}else{if(this.sprintTimerExpired(entity,this.config.SPRINT_RESET_TIME_WALKING)){this.resetSprintCounter(entity)}}}}handleEvent(engine,eventID,data){switch(eventID){case event_successful_action:if(data.entity.components.includes(component_sprint)){if(Utility.isMovementAction(data.action)){if(data.entity.sprint.sprinting){this.handleSprinting(engine,data.entity)}else{this.decrementSprintCounter(engine,data.entity,data.action)}}else{if(data.entity.sprint.sprinting){this.stopSprinting(engine,data.entity)}else{this.resetSprintCounter(data.entity)}}}break;case event_up_level:case event_down_level:this.stopAllSprinting(engine);break;}}handleSprinting(engine,entity){if(this.sprintTimerExpired(entity,this.config.SPRINT_RESET_TIME_SPRINTING)){this.stopSprinting(engine,entity)}else{if(entity.actions.busy>entity.sprint.sprintSpeed){entity.actions.busy=entity.sprint.sprintSpeed}for(let a in entity.actions.actions){if(entity.actions.actions[a].currentCooldown>entity.sprint.sprintSpeed){entity.actions.actions[a].currentCooldown=entity.sprint.sprintSpeed+1}}entity.sprint.lastMoveTime=millis()}}startSprinting(engine,entity){if(entity instanceof Player){engine.sendEvent(event_player_start_sprinting)}entity.sprint.sprinting=true;this.resetSprintCounter(entity)}stopSprinting(engine,entity){if(entity instanceof Player){engine.sendEvent(event_player_stop_sprinting)}entity.sprint.sprinting=false;this.resetSprintCounter(entity)}decrementSprintCounter(engine,entity){if(entity.sprint.sprinting){entity.sprint.lastMoveTime=millis()}else if(entity.sprint.sprintCounter>0){if(this.sprintTimerExpired(entity,this.config.SPRINT_RESET_TIME_WALKING)){this.resetSprintCounter(entity)}else{entity.sprint.sprintCounter--;entity.sprint.lastMoveTime=millis()}}else{this.startSprinting(engine,entity)}}resetSprintCounter(entity){entity.sprint.sprintCounter=entity.sprint.movesBeforeSprinting;entity.sprint.lastMoveTime=millis()}sprintTimerExpired(entity,time){return millis()-entity.sprint.lastMoveTime>time}stopAllSprinting(engine){for(let entity of this.objects){this.stopSprinting(engine,entity)}}}
class UISystem extends GameSystem{constructor(config,images){super([component_controller]);this.config=config;this.images=images}init(engine){this.gameCanvas=document.getElementById('game');this.titleScreen=document.getElementById('titleScreen');this.helpScreen=document.getElementById('helpScreen');this.levelChangeScreen=document.getElementById('levelChangeScreen');this.levelChangeText=document.getElementById('levelChangeText');this.gameOverScreen=document.getElementById('gameOverScreen');this.resetScreen(this.titleScreen);this.resetScreen(this.helpScreen);this.resetScreen(this.levelChangeScreen);this.resetScreen(this.gameOverScreen);this.drawHearts=false;this.heartCanvas=document.getElementById('heartCanvas').getContext('2d');document.getElementById('heartCanvas').style.left=''+this.config.HEART_OFFSET+'px';document.getElementById('heartCanvas').style.top=''+this.config.HEART_OFFSET+'px'}run(engine){this.drawPlayerHealth(this.heartCanvas,this.entities[0])}handleEvent(engine,eventID,data){switch(eventID){case event_new_game:this.showLevelChangeScreen(0);break;case event_title_screen:this.showTitleScreen(engine);break;case event_down_level:this.showLevelChangeScreen(data.depth);break;case event_begin_level:this.hideLevelChangeScreen(engine);break;case event_player_generated:console.log(this.entities);this.fixHeartCanvasSize(this.entities[Object.keys(this.entities)[0]]);break;case event_game_over:this.showGameOverScreen(engine);break;}}addObject(object){super.addObject(object)}showTitleScreen(engine){this.fadeScreenIn(this.titleScreen,this.config.TITLE_FADE_IN_TIME);let self=this;document.getElementById('playButton').addEventListener('click',function(){self.fadeScreenOut(self.titleScreen,self.config.TITLE_FADE_OUT_TIME);engine.sendEvent(event_new_game)});document.getElementById('helpButton').addEventListener('click',function(){self.blurScreen(self.titleScreen,self.config.TITLE_BLUR_AMOUNT,self.config.TITLE_FADE_OUT_TIME);self.fadeScreenIn(self.helpScreen,self.config.TITLE_FADE_IN_TIME);document.getElementById('returnToTitleScreenButton').addEventListener('click',function(){self.unblurScreen(self.titleScreen,self.config.TITLE_FADE_IN_TIME);self.fadeScreenOut(self.helpScreen,self.config.TITLE_FADE_OUT_TIME)})})}showLevelChangeScreen(depth){this.levelChangeText.innerHTML='Entering Level '+(depth+1);this.fadeScreenIn(this.levelChangeScreen,this.config.LEVEL_CHANGE_FADE_IN_TIME);this.drawHearts=false}hideLevelChangeScreen(engine){this.fadeScreenOut(this.levelChangeScreen,this.config.LEVEL_CHANGE_FADE_OUT_TIME);this.drawHearts=true}showGameOverScreen(engine){this.fadeScreenIn(this.gameOverScreen,this.config.GAME_OVER_FADE_IN_TIME);this.blurScreen(this.gameCanvas,this.config.GAME_BLUR_AMOUNT,this.config.GAME_OVER_FADE_IN_TIME);this.hideHearts();let self=this;document.getElementById('playAgainButton').addEventListener('click',function(){self.fadeScreenOut(self.gameOverScreen,self.config.GAME_OVER_FADE_OUT_TIME);self.unblurScreen(self.gameCanvas,self.config.GAME_OVER_FADE_OUT_TIME);engine.sendEvent(event_reset_game);engine.sendEvent(event_new_game,undefined,20)})}fadeScreenIn(screen,milliseconds){screen.style.transitionDuration=milliseconds+'ms';screen.style.opacity='1';screen.style.visibility='visible'}fadeScreenOut(screen,milliseconds){screen.style.transitionDuration=milliseconds+'ms';screen.style.opacity='0';setTimeout(function(){screen.style.visibility='hidden'},milliseconds)}blurScreen(screen,blurAmount,milliseconds){screen.style.transitionDuration=milliseconds+'ms';screen.style.filter='blur('+blurAmount+'px)'}unblurScreen(screen,milliseconds){screen.style.transitionDuration=milliseconds+'ms';screen.style.filter='blur(0)'}resetScreen(screen){screen.style.opacity='0';screen.style.visibility='hidden'}hideHearts(){this.heartCanvas.clearRect(0,0,heartCanvas.width,heartCanvas.height);this.drawHearts=false}drawPlayerHealth(heartCanvas,player){if(this.drawHearts){let x=0,y=0;for(let i=1;i<=Utility.getMaxHeartAmount(player);i++){if(i<=Utility.getCurrentHeartAmount(player)){heartCanvas.drawImage(this.images[ui_heart],x*this.config.HEART_SIZE+x*this.config.HEART_SPACING,y*this.config.HEART_SIZE,this.config.HEART_SIZE,this.config.HEART_SIZE)}else{heartCanvas.drawImage(this.images[ui_empty_heart],x*this.config.HEART_SIZE+x*this.config.HEART_SPACING,y*this.config.HEART_SIZE,this.config.HEART_SIZE,this.config.HEART_SIZE)}x++;if(i%this.config.HEARTS_PER_ROW==0){y++;x=0}}}}fixHeartCanvasSize(player){let heartCanvas=document.getElementById('heartCanvas');let heartAmount=Utility.getMaxHeartAmount(player);let w=(this.config.HEART_SPACING+this.config.HEART_SIZE)*this.config.HEARTS_PER_ROW;let h=(this.config.HEART_SPACING+this.config.HEART_SIZE)*ceil(heartAmount/this.config.HEARTS_PER_ROW);heartCanvas.width=w;heartCanvas.height=h}}
class VisionSystem extends GameSystem{constructor(config){super([component_display,component_position]);this.config=config}init(engine){}run(engine){}handleEvent(engine,eventID,data){switch(eventID){case event_player_moved:case event_entity_moved:case event_begin_level:case event_spawn_enemy_close:this.vision(engine.getMap(),engine.getPlayer());break;}}vision(map,player){for(let r of map){for(let s of r){s.display.visible=false}}player.display.visible=true;map[player.position.x][player.position.y].display.visible=true;map[player.position.x][player.position.y].display.discovered=true;for(let octant=0;octant<8;octant++){this.playerSightTriangle(map,octant,player.position.x,player.position.y,this.config.PLAYER_VISION_RANGE)}for(let e of this.objects){if(map[e.position.x][e.position.y].display.visible){e.display.visible=true;e.display.discovered=true}else{e.display.visible=false}}}playerSightTriangle(map,octant,sx,sy,range){let x=1;let shadows=[];let squaresVisible=true;while(x<=range&&squaresVisible){squaresVisible=false;let y=0;let curslope=0;while(curslope<=1){if(!VisionSystem.inShadow(x,y,shadows)){squaresVisible=true;let cur=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);if(cur===undefined){break}cur.display.visible=true;cur.display.discovered=true;if(cur.display.opaque){let firstBlocked=this.getFirstBlocked(map,octant,x,y,sx,sy,shadows);let lastBlocked=this.getBlocked(map,octant,x,y,sx,sy,shadows);let shadowStart=VisionSystem.slope(firstBlocked.x,firstBlocked.y,BOTTOM_RIGHT);let shadowEnd=VisionSystem.slope(lastBlocked.x,lastBlocked.y,TOP_LEFT);shadows.push([shadowStart,shadowEnd])}else{let above=VisionSystem.getTranslatedSquare(map,octant,x,y+1,sx,sy);if(above!==undefined){above.display.discovered=true}}}y++;curslope=VisionSystem.slope(x,y,CENTER_SQUARE)}x++}}getFirstBlocked(map,octant,x,y,sx,sy,shadows){let firstBlocked={x:x,y:y};let currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);while(currentBlocked!==undefined&&currentBlocked.display.opaque&&VisionSystem.slope(x,y,CENTER_SQUARE)>0){firstBlocked={x:x,y:y};if(!VisionSystem.inShadow(x,y,shadows)){currentBlocked.display.visible=true;currentBlocked.display.discovered=true}y--;currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy)}return firstBlocked}getBlocked(map,octant,x,y,sx,sy,shadows){let lastBlocked={x:x,y:y};let currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);while(currentBlocked!==undefined&&currentBlocked.display.opaque&&VisionSystem.slope(x,y,BOTTOM_RIGHT)<1){lastBlocked={x:x,y:y};if(!VisionSystem.inShadow(x,y,shadows)){currentBlocked.display.visible=true;currentBlocked.display.discovered=true}y++;currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy)}return lastBlocked}static slope(x,y,CORNER){switch(CORNER){case CENTER_SQUARE:return y/x;case TOP_LEFT:if(x==0){return 1}return(y+.5)/(x-.5);case BOTTOM_RIGHT:return max(0,(y-.5)/(x+.5));case UPPER_BOUND:return(y+PERM)/(x-PERM);case LOWER_BOUND:return(y-PERM)/(x+PERM);}return 1}static inShadow(x,y,shadows){let BR=VisionSystem.slope(x,y,BOTTOM_RIGHT),TL=VisionSystem.slope(x,y,TOP_LEFT);for(let s of shadows){if(BR>=s[0]&&TL<=s[1])return true;else if(BR>=s[0]&&BR<=s[1]&&TL>=s[1]){BR=s[1]}else if(BR<=s[0]&&TL>=s[0]&&TL<=s[1]){TL=s[0]}}return false}static startSquare(x,slopeStart){if(slopeStart==0)return 0;return ceil(x*slopeStart)}static getTranslatedSquare(map,octant,x,y,sx,sy){let uc=VisionSystem.translate(octant,x,y);let fx=sx+uc[0];let fy=sy-uc[1];if(Utility.positionInBounds(new PositionComponent(fx,fy),map.length)){return map[fx][fy]}return undefined}static translate(octant,x,y){return[x*xxcomp[octant]+y*xycomp[octant],x*yxcomp[octant]+y*yycomp[octant]]}static isOpaque(square){return square.display.opaque}static lineOfSight(engine,p1,p2){const LOS_PERM=.5;let map=engine.getMap();if(p1==p2){return true}else if(p1.y==p2.y){let start=p1.x<p2.x?p1:p2;let end=start==p1?p2:p1;let curSquare=map[start.x][start.y];for(let x=start.x;x<=end.x;x++){if(VisionSystem.isOpaque(map[x][start.y])){return false}}}else if(p1.x==p2.x){let start=p1.y<p2.y?p1:p2;let end=start==p1?p2:p1;let curSquare=map[start.x][start.y];for(let y=start.y;y<=end.y;y++){if(VisionSystem.isOpaque(map[start.x][y])){return false}}}else{let start,end,x,y,slope,curSquare,direction;let difX=abs(p1.x-p2.x);let difY=abs(p1.y-p2.y);if(difX<=difY){start=p1.x<=p2.x?p1:p2;end=start==p1?p2:p1;slope=abs(end.x-start.x)/abs(end.y-start.y);direction=start.y<end.y?1:-1;x=start.x;y=start.y;let error=0;while(x<=end.x){if(VisionSystem.isOpaque(map[x][y])){return false}if(y==end.y){break}y+=direction;error+=slope;if(error>.5){x++;error-=1}}}else{start=p1.y<=p2.y?p1:p2;end=start==p1?p2:p1;slope=abs(end.y-start.y)/abs(end.x-start.x);direction=start.x<end.x?1:-1;x=start.x;y=start.y;let error=0;while(y<=end.y){if(VisionSystem.isOpaque(map[x][y])){return false}if(x==end.x){break}x+=direction;error+=slope;if(error>.5){y++;error-=1}}}}return true}}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,