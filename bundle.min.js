const TITLE_SCREEN=false;const LOADING_SCREEN_TIME=20;const DO_LEVEL_GEN=true;const DEBUG_MODE=true;const UP=0,RIGHT=1,DOWN=2,LEFT=3;const OPEN=0,CLOSED=1;const entity_player=0,entity_mob=1;const physical_solid=true,physical_non_solid=false;const display_opaque=true,display_transparent=false;const entity_active_range=20;const CENTER_SQUARE=0,TOP_LEFT=1,BOTTOM_RIGHT=2,UPPER_BOUND=3,LOWER_BOUND=4;const PERM=.5;const xxcomp=[1,0,0,-1,-1,0,0,1];const xycomp=[0,1,-1,0,0,-1,1,0];const yxcomp=[0,1,1,0,0,-1,-1,0];const yycomp=[1,0,0,1,-1,0,0,-1];const light_range=10,light_max=light_range-1;const light_intensity=.25,light_red=255,light_green=190,light_blue=0;const shadow_intensity=0.4,shadow_stop=4,shadow_red=10,shadow_green=0,shadow_blue=40;const light_fill_string='rgba('+light_red+','+light_green+','+light_blue+','+light_intensity+')';const light_level_to_light=[];const light_level_to_shadow=[];for(let i=0;i<light_range;i++){light_level_to_light.unshift('rgba('+floor(light_red-light_red/(light_range-1)*i)+','+floor(light_green-light_green/(light_range-1)*i)+','+floor(light_blue-light_blue/(light_range-1)*i)+','+floor(100*(light_intensity-light_intensity/(light_range-1)*i))/100+')');if(i>shadow_stop){light_level_to_shadow.push('rgba(0,0,0,0)')}else{light_level_to_shadow.push('rgba('+floor(shadow_red-shadow_red/shadow_stop*i)+','+floor(shadow_green-shadow_green/shadow_stop*i)+','+floor(shadow_blue-shadow_blue/shadow_stop*i)+','+floor(100*(shadow_intensity-shadow_intensity/shadow_stop*i))/100+')')}}light_level_to_light[light_level_to_light.length-1]=light_level_to_light[light_level_to_light.length-2];const light_level_player=3,light_level_torch=light_max-2;const direction_up=0,direction_right=1,direction_down=2,direction_left=3;const square_floor=0,square_wall=1,square_door=2,square_stair=3,square_level_origin=4;const interactable_door=0,interactable_stair=1;const texture_floor=0,texture_wall=1,texture_door_closed=2,texture_door_open=3,texture_stair=6,texture_level_origin=7;const texture_default=0,texture_alt1=1,texture_alt2=2,texture_alt3=3,texture_alt4=4,texture_alt5=5,texture_alt6=6,texture_alt7=7,texture_alt8=8,texture_alt9=9,texture_side_top=10,texture_side_right=11,texture_side_bottom=12,texture_side_left=13,texture_in_corner_top_right=14,texture_in_corner_bottom_right=15,texture_in_corner_bottom_left=16,texture_in_corner_top_left=17,texture_out_corner_top_right=18,texture_out_corner_bottom_right=19,texture_out_corner_bottom_left=20,texture_out_corner_top_left=21,texture_U_top=22,texture_U_right=23,texture_U_bottom=24,texture_U_left=25,texture_cross=26,texture_num_alts=27;const texture_probability_distribution=[];texture_probability_distribution[0]=55;texture_probability_distribution[1]=texture_probability_distribution[0]+34;texture_probability_distribution[2]=texture_probability_distribution[1]+21;texture_probability_distribution[3]=texture_probability_distribution[2]+13;texture_probability_distribution[4]=texture_probability_distribution[3]+8;texture_probability_distribution[5]=texture_probability_distribution[4]+5;texture_probability_distribution[6]=texture_probability_distribution[5]+3;texture_probability_distribution[7]=texture_probability_distribution[6]+2;texture_probability_distribution[8]=texture_probability_distribution[7]+1;texture_probability_distribution[9]=texture_probability_distribution[8]+1;const texture_probability_max=texture_probability_distribution[texture_probability_distribution.length-1];const ui_heart=0,ui_empty_heart=1;const component_position=0,component_movement=1,component_display=2,component_texture=3,component_animation=4,component_actions=5,component_sprint=6,component_direction=7,component_map=8,component_health=9,component_light=10,component_strength=11,component_dexterity=12,component_magic=13,component_level=14,component_depth=15,component_stair=16,component_combat=17,component_ai=18,component_light_emitter=19,component_collision=20,component_abilities=21,component_controller=22,component_interactable=23,component_camera=24;const event_new_game=0,event_reset_game=1,event_window_resized=2,event_level_generated=3,event_player_generated=4,event_down_level=5,event_new_level=6,event_new_player=7,event_entities_loaded=8,event_begin_level=9,event_player_moved=10,event_entity_moved=11,event_player_start_sprinting=12,event_player_stop_sprinting=13,event_open_door=14,event_successful_action=20,event_failed_action=21,event_new_animation=30,event_hitstun=31,event_begin_combat=40,event_end_combat=41,event_melee_ability=42,event_aoe_ability=43,event_aoe_ranged_ability=44,event_skillshot_ability=45,event_smite_ability=46,event_entity_spawned=50,event_spawn_enemy_close=51,event_entity_take_damage=60,event_player_take_damage=61,event_camera_updated=70,event_title_screen=999,event_game_over=1000;const event_to_string=[];event_to_string[0]='event_new_game';event_to_string[1]='event_reset_game';event_to_string[2]='event_window_resized';event_to_string[3]='event_level_generated';event_to_string[4]='event_player_generated';event_to_string[5]='event_down_level';event_to_string[6]='event_new_level';event_to_string[7]='event_new_player';event_to_string[8]='event_entities_loaded';event_to_string[9]='event_begin_level';event_to_string[10]='event_player_moved';event_to_string[11]='event_entity_moved';event_to_string[12]='event_player_start_sprinting';event_to_string[13]='event_player_stop_sprinting';event_to_string[14]='event_open_door';event_to_string[20]='event_successful_action';event_to_string[21]='event_failed_action';event_to_string[30]='event_new_animation';event_to_string[31]='event_hitstun';event_to_string[40]='event_begin_combat';event_to_string[41]='event_end_combat';event_to_string[42]='event_melee_ability';event_to_string[43]='event_aoe_ability';event_to_string[44]='event_aoe_ranged_ability';event_to_string[45]='event_skillshot_ability';event_to_string[46]='event_smite_ability';event_to_string[50]='event_entity_spawned';event_to_string[51]='event_spawn_enemy_close';event_to_string[60]='event_entity_take_damage';event_to_string[70]='event_camera_updated';event_to_string[61]='event_player_take_damage';event_to_string[999]='event_title_screen';event_to_string[1000]='event_game_over';const action_none=0,action_move=10,action_move_up=11,action_move_right=12,action_move_down=13,action_move_left=14,action_ability_primary=20,action_ability_secondary=21,action_ability_special=22;const class_warrior=0,class_mage=1,class_rogue=2,entity_skeleton=3,boss_blob=4;const DEFAULT_PLAYER_SIZE=1;const DEFAULT_PLAYER_HEALTH=100;const DEFAULT_PLAYER_ATTACK_DAMAGE=10;const DEFAULT_PLAYER_MAGIC_DAMAGE=10;const DEFAULT_PLAYER_ARMOR=10;const DEFAULT_PLAYER_ACTIONS=[action_move_up,action_move_right,action_move_down,action_move_left,action_ability_primary,action_ability_secondary,action_ability_special];const DEFAULT_CONTROLLER_LAYOUT={};DEFAULT_CONTROLLER_LAYOUT[87]=action_move_up;DEFAULT_CONTROLLER_LAYOUT[68]=action_move_right;DEFAULT_CONTROLLER_LAYOUT[83]=action_move_down;DEFAULT_CONTROLLER_LAYOUT[65]=action_move_left;DEFAULT_CONTROLLER_LAYOUT;DEFAULT_CONTROLLER_LAYOUT[38]=action_move_up;DEFAULT_CONTROLLER_LAYOUT[39]=action_move_right;DEFAULT_CONTROLLER_LAYOUT[40]=action_move_down;DEFAULT_CONTROLLER_LAYOUT[37]=action_move_left;DEFAULT_CONTROLLER_LAYOUT;DEFAULT_CONTROLLER_LAYOUT[49]=action_ability_primary;DEFAULT_CONTROLLER_LAYOUT[50]=action_ability_secondary;DEFAULT_CONTROLLER_LAYOUT[51]=action_ability_special;const DEFAULT_ENEMY_SIZE=1;const DEFAULT_ENEMY_HEALTH=50;const DEFAULT_ENEMY_ATTACK_DAMAGE=10;const DEFAULT_ENEMY_MAGIC_DAMAGE=10;const DEFAULT_ENEMY_ARMOR=10;const DEFAULT_ENEMY_ACTIONS=[action_move_up,action_move_right,action_move_down,action_move_left];const entity_string_to_constant=[];entity_string_to_constant['warrior']=class_warrior;entity_string_to_constant['mage']=class_mage;entity_string_to_constant['rogue']=class_rogue;entity_string_to_constant['skeleton']=entity_skeleton;entity_string_to_constant['blob']=boss_blob;const animation_idle=0,animation_move_up=1,animation_move_right=2,animation_move_down=3,animation_move_left=4,animation_no_animations_yet=1000;const animation_strings_to_constants=[];animation_strings_to_constants['animation_idle']=animation_idle;animation_strings_to_constants['animation_move_up']=animation_move_up;animation_strings_to_constants['animation_move_right']=animation_move_right;animation_strings_to_constants['animation_move_down']=animation_move_down;animation_strings_to_constants['animation_move_left']=animation_move_left;const keyCode_to_action=[];keyCode_to_action[87]=action_move_up;keyCode_to_action[68]=action_move_right;keyCode_to_action[83]=action_move_down;keyCode_to_action[65]=action_move_left;keyCode_to_action[38]=action_move_up;keyCode_to_action[39]=action_move_right;keyCode_to_action[40]=action_move_down;keyCode_to_action[37]=action_move_left;keyCode_to_action[49]=action_ability_primary;keyCode_to_action[50]=action_ability_secondary;keyCode_to_action[51]=action_ability_special;const action_to_priority=[];action_to_priority[action_none]=0;action_to_priority[action_move_up]=3;action_to_priority[action_move_left]=3;action_to_priority[action_move_down]=3;action_to_priority[action_move_right]=3;action_to_priority[action_ability_primary]=4;action_to_priority[action_ability_secondary]=4;action_to_priority[action_ability_special]=4;const action_to_direction=[];action_to_direction[action_move_up]=direction_up;action_to_direction[action_move_right]=direction_right;action_to_direction[action_move_down]=direction_down;action_to_direction[action_move_left]=direction_left;const action_to_animation=[];action_to_animation[action_none]=animation_idle;action_to_animation[action_move_up]=animation_move_up;action_to_animation[action_move_right]=animation_move_right;action_to_animation[action_move_down]=animation_move_down;action_to_animation[action_move_left]=animation_move_left;const ability_type_melee=0,ability_type_aoe=1,ability_type_aoe_ranged=2,ability_type_skillshot=3,ability_type_smite=4;const ability_type_string_to_constant=[];ability_type_string_to_constant['melee']=ability_type_melee;ability_type_string_to_constant['aoe']=ability_type_aoe;ability_type_string_to_constant['aoe_ranged']=ability_type_aoe_ranged;ability_type_string_to_constant['skillshot']=ability_type_skillshot;ability_type_string_to_constant['smite']=ability_type_smite;const ability_slash=0,ability_spin_attack=1,ability_judgement_day=2;const ability_string_to_constant=[];ability_string_to_constant['Slash']=ability_slash;ability_string_to_constant['Spin Attack']=ability_spin_attack;ability_string_to_constant['Judgement Day']=ability_judgement_day;
class GameSystem{constructor(componentSignature){this.entities={};this.componentSignature=componentSignature}init(engine){}run(engine){}addEntity(entity){if(this.componentSignature.length>0&&!(entity.ID in this.entities)&&Utility.checkComponents(entity.components,this.componentSignature)){this.entities[entity.ID]=entity.components}}destroyEntity(ID){if(ID in this.entities){delete this.entities[ID]}}handleEvent(engine,eventID,data){}}
class PoppsEngine{constructor(data){const config=data.config;const room_pool=data.room_pool;const stair_room_pool=data.stair_room_pool;const images=data.images.textures;const ui=data.images.ui;const player_config=data.player_config;const enemy_config=data.enemy_config;const boss_config=data.boss_config;this.systems=[];this.LevelSystem=new LevelSystem(config.level,room_pool,stair_room_pool);this.EntitySystem=new EntitySystem(config.entities,player_config,enemy_config,boss_config);this.DisplaySystem=new DisplaySystem(config.display,images);this.CameraSystem=new CameraSystem(config.camera);this.InputSystem=new InputSystem;this.systems.push(this.LevelSystem);this.systems.push(this.EntitySystem);this.systems.push(this.DisplaySystem);this.systems.push(this.CameraSystem);this.systems.push(this.InputSystem);this.UISystem=new UISystem(config.ui,data.images.ui);this.systems.push(this.UISystem);this.init();if(TITLE_SCREEN){this.sendEvent(event_title_screen)}else{this.sendEvent(event_new_game)}}init(){Utility.debugLog("Initializing PoppsEngine");this.entities={};this.events=[];this.depth=0;this.UIOnly=false;this.FOCUSED=true;for(let system of this.systems){system.init(this)}window.addEventListener("resize",this.sendEvent(event_window_resized));let self=this;window.addEventListener("focus",function(){self.tick()});window.addEventListener("blur",function(){window.cancelAnimationFrame(self.requestID)});this.tick()}pause(){this.UIOnly=true}resume(){this.UIOnly=false}tick(){if(this.UIOnly){this.UISystem.run(this)}else{this.handleEvents(this.events);for(let s of this.systems){s.run(this)}}this.requestID=window.requestAnimationFrame(()=>this.tick())}sendEvent(e,data=undefined,ticks=0){if(ticks==0){this.runEvent([e,data])}else{this.events.push([e,data,ticks])}}handleEvents(events){for(let i=events.length-1;i>=0;i--){if(events[i][2]>0){events[i][2]--}else{this.runEvent(events[i]);events.splice(i,1)}}}runEvent(e){Utility.debugLog(event_to_string[e[0]]);this.handleEvent(e[0],e[1]);for(let s of this.systems){s.handleEvent(this,e[0],e[1])}}handleEvent(event,data){switch(event){case event_new_game:this.clearEntities();this.sendEvent(event_new_player);this.sendEvent(event_new_level,{depth:this.depth});break;case event_level_generated:this.sendEvent(event_begin_level,{depth:this.depth},LOADING_SCREEN_TIME);break;case event_reset_game:this.init();break;case event_game_over:this.pause();break;case event_down_level:this.depth++;if(this.depth==this.Dungeon.levels.length){this.Dungeon.entities.push([]);this.LevelSystem.generateLevel(this,this.depth);this.EntitySystem.generateEntities(this,this.Dungeon.levels[this.depth],this.depth);this.LightSystem.generateTorches(this,this.Dungeon.levels[this.depth].map.map,this.Dungeon.levels[this.depth].rooms)}this.clearEntities();this.sendEvent(event_begin_level,this.Dungeon.levels[this.depth],LOADING_SCREEN_TIME);break;}}createEntity(components){this.addEntity(new GameEntity(this.getFreeID(),components))}getFreeID(){let ID=1;while(ID in this.entities){ID++}return ID}addEntity(entity){this.entities[entity.ID]=entity.components;for(let s of this.systems){s.addEntity(entity)}}destroyEntity(ID){if(ID in this.entities){delete this.entities[ID]}for(let s of this.systems){s.destroyEntity(ID)}}clearEntities(){for(let ID in this.entities){if(!Utility.entityHasDepth(this.entities[ID])){this.destroyEntity(ID)}}}saveLevel(){let level_data={};if(sessionStorage.length>0){level_data=JSON.parse(sessionStorage.LEVEL_DATA)}level_data[this.depth]=[];for(let entityID in this.entities){if(!Utility.entityHasDepth(this.entities[entityID])){level_data[this.depth].push(this.entities[entitiyID])}}}loadLevel(levelDepth){this.clearEntities();let level_data={};if(sessionStorage.length>0){level_data=JSON.parse(sessionStorage.LEVEL_DATA)}else{alert("Error loading level, sessionStorage has no data")}for(let entityWithoutDepth of level_data[levelDepth]){this.addEntity(entityWithoutDepth)}this.depth=levelDepth;this.sendEvent(event_level_loaded,this.depth)}}
class Utility{static debugLog(message){if(DEBUG_MODE){if(message!=undefined){console.log(message)}else{console.log('No event string found')}}}static collision(o1,o2){return!(o1.top>=o2.bottom||o1.right<=o2.left||o1.bottom<=o2.top||o1.left>=o2.right)}static checkComponents(entityComponents,systemComponents){for(let component of systemComponents){if(!(component in entityComponents))return false}return true}static entityHasComponent(entity,component){return component in entity}static entityHasDepth(entity){for(let component of entity.components){if(component instanceof DepthComponent)return true}return false}static getHealthPercent(entity){return entity[component_health].currentHealth/entity[component_health].maxHealth}static getCurrentHeartAmount(entity){return floor(entity[component_health].currentHealth/10)}static getMaxHeartAmount(entity){return floor(entity[component_health].maxHealth/10)}static entityActionSuccessful(entity){entity.actions.busy=action_length[entity.actions.currentAction];entity.animation.newAnimation=true;entity.animation.animation=action_to_animation[entity.actions.currentAction];entity.actions.failedAction=action_none;entity.actions.lastAction=entity.actions.currentAction;entity.actions.currentAction=action_none}static entityActionFailed(entity){entity.actions.lastAction=action_none;entity.actions.failedAction=entity.actions.currentAction;entity.actions.currentAction=action_none}static getSquaresInFront(engine,position,direction,range){let squares=[];let map=engine.getMap();switch(direction){case direction_up:for(let i=0;i<range;i++){for(let j=0;j<range-i;j++){if(position.y-(i+1)>=0){if(position.x-j>=0){squares.push(map[position.x-j][position.y-(i+1)])}if(j!=0&&position.x+j<map.length){squares.push(map[position.x+j][position.y-(i+1)])}}}}break;case direction_right:for(let i=0;i<range;i++){for(let j=0;j<range-i;j++){if(position.x+(i+1)<map.length){if(position.y-j>=0){squares.push(map[position.x+(i+1)][position.y-j])}if(j!=0&&position.y+j<map.length){squares.push(map[position.x+(i+1)][position.y+j])}}}}break;case direction_down:for(let i=0;i<range;i++){for(let j=0;j<range-i;j++){if(position.y+(i+1)<map.length){if(position.x-j>=0){squares.push(map[position.x-j][position.y+(i+1)])}if(j!=0&&position.x+j<map.length){squares.push(map[position.x+j][position.y+(i+1)])}}}}break;case direction_left:for(let i=0;i<range;i++){for(let j=0;j<range-i;j++){if(position.x-(i+1)>=0){if(position.y-j>=0){squares.push(map[position.x-(i+1)][position.y-j])}if(j!=0&&position.y+j<map.length){squares.push(map[position.x-(i+1)][position.y+j])}}}}break;}return squares}static getSquaresAround(engine,position,range){let squares=[];let map=engine.getMap();for(let i=position.x-range;i<=position.x+range;i++){for(let j=position.y-range;j<=position.y+range;j++){if(Utility.positionInBounds(new PositionComponent(i,j),engine.getMap().length)){squares.push(map[i][j])}}}return squares}static getEntitiesInSquares(engine,squares){let entities=[];let elist=engine.getEntities();for(let s of squares){for(let e of elist){if(e.components.includes(component_position)&&e.position.x==s.position.x&&e.position.y==s.position.y){entities.push(e)}else if(e.components.includes(component_collision)&&Utility.collision(e.collision,new CollisionComponent(s.position.x,s.position.y,1))){entities.push(e)}}}return entities}static entityWithinRange(e1,e2,dist){return abs(e1.position.x-e2.position.x)<dist&&abs(e1.position.y-e2.position.y)<dist}static positionInRange(p1,p2,dist){return abs(p1.x-p2.x)<dist&&abs(p1.y-p2.y)<dist}static entityDistance(e1,e2){if(e1.collision.width==1&&e1.collision.height==1&&e2.collision.width==1&&e2.collision.height==1){return Utility.distance(e1.position,e2.position)}else{let xDist=0;if(e1.collision.left>=e2.collision.right){xDist=abs(e1.collision.left-(e2.collision.right-1))}else if(e1.collision.right<=e2.collision.left){xDist=abs(e1.collision.right-1-e2.collision.left)}let yDist=0;if(e1.collision.top>=e2.collision.bottom){yDist=abs(e1.collision.top-(e2.collision.bottom-1))}else if(e1.collision.bottom<=e2.collision.top){yDist=abs(e1.collision.bottom-1-e2.collision.top)}return xDist+yDist}}static distance(p1,p2){return abs(p1.x-p2.x)+abs(p1.y-p2.y)}static getDirectionToEntity(e1,e2){if(e1.position.y>e2.position.y){return direction_up}if(e1.position.x<e2.position.x){return direction_right}if(e1.position.y<e2.position.y){return direction_down}if(e1.position.x>e2.position.x){return direction_left}}static shortestPath(map,startPosition,endPosition){}static convertMapToNodes(map){let nodeMap=new Array(map.length);for(let i=0;i<map.length;i++){nodeMap[i]=new Array(map.length);for(let j=0;j<map.length;j++){nodeMap[i][j]={'searched':false,'cameFrom':undefined,'distFromStart':10000,'finalCost':10000}}}return nodeMap}static getCollisionInFrontOf(entity){return Utility.getCollisionInDirection(entity,entity.direction.direction)}static getCollisionInDirection(entity,direction){switch(direction){case direction_up:return new CollisionComponent(entity.collision.left,entity.collision.top-1,entity.collision.width,1);case direction_right:return new CollisionComponent(entity.collision.right,entity.collision.top,1,entity.collision.height);case direction_down:return new CollisionComponent(entity.collision.left,entity.collision.bottom,entity.collision.width,1);case direction_left:return new CollisionComponent(entity.collision.left-1,entity.collision.top,1,entity.collision.height);default:console.log('Cannot determine direction');return;}}static entityAdjacent(entity,otherEntity){let c1=entity.collision,c2=otherEntity.collision;if(Utility.collision(Utility.getCollisionInDirection(entity,direction_up),c2)){return direction_up}else if(Utility.collision(Utility.getCollisionInDirection(entity,direction_right),c2)){return direction_right}else if(Utility.collision(Utility.getCollisionInDirection(entity,direction_down),c2)){return direction_down}else if(Utility.collision(Utility.getCollisionInDirection(entity,direction_left),c2)){return direction_left}else{return-1}}static getSquareNeighbors(x,y,map){neighbors=[];if(x>0){neighbors.push(map[x-1][y])}if(y>0){neighbors.push(map[x][y-1])}if(x<map.length-1){neighbors.push(map[x+1][y])}if(y<map.length-1){neighbors.push(map[x][y+1])}return neighbors}static findMobPath(board,mob,player){return findPath(board,board[mob.position.x][mob.position.y],board[player.position.x][player.position.y])}static walkable(x,y,map,entity,objects){return Utility.positionInBounds(new PositionComponent(x,y),map.length)&&Utility.squareIsWalkable(map[x][y],entity)&&!Utility.squareIsOccupied(x,y,entity,objects)}static positionOnScreen(x,y,w,h){return x>-w&&x<width+w&&y>-h&&y<height+h}static positionInBounds(position,size){return position.x>=0&&position.x<size&&position.y>=0&&position.y<size}static squareInBounds(square,size){return square.position.x>=0&&square.position.x<size&&square.position.y>=0&&square.position.y<size}static getNeighbors(square,map){let neighbors=new Array(4);if(Utility.positionInBounds(new PositionComponent(square.position.x,square.position.y-1),map.length)){neighbors[0]=map[square.position.x][square.position.y-1]}if(Utility.positionInBounds(new PositionComponent(square.position.x+1,square.position.y),map.length)){neighbors[1]=map[square.position.x+1][square.position.y]}if(Utility.positionInBounds(new PositionComponent(square.position.x,square.position.y+1),map.length)){neighbors[2]=map[square.position.x][square.position.y+1]}if(Utility.positionInBounds(new PositionComponent(square.position.x-1,square.position.y),map.length)){neighbors[3]=map[square.position.x-1][square.position.y]}return neighbors}static getCornerNeighbors(square,map){let neighbors=new Array(4);if(Utility.positionInBounds(new PositionComponent(square.position.x-1,square.position.y-1),map.length)){neighbors[0]=map[square.position.x-1][square.position.y-1]}if(Utility.positionInBounds(new PositionComponent(square.position.x+1,square.position.y-1),map.length)){neighbors[1]=map[square.position.x+1][square.position.y-1]}if(Utility.positionInBounds(new PositionComponent(square.position.x-1,square.position.y+1),map.length)){neighbors[2]=map[square.position.x-1][square.position.y+1]}if(Utility.positionInBounds(new PositionComponent(square.position.x-1,square.position.y+1),map.length)){neighbors[3]=map[square.position.x+1][square.position.y+1]}return neighbors}static squareIsWalkable(square,entity){return entity instanceof Player?Utility.playerWalkable(square):Utility.mobWalkable(square)}static playerWalkable(square){return!square.components.includes(component_collision)||square instanceof DoorSquare||square instanceof StairUpSquare||square instanceof StairDownSquare}static mobWalkable(square){return!square.components.includes(component_collision)}static squareIsOccupied(x,y,entity,objects){for(let o of objects){if(entity!=o&&o.components.includes(component_collision)){if(Utility.collision(new CollisionComponent(x,y,1),o.collision)){return true}}}return false}static directionToPosition(direction){switch(direction){case direction_up:return new PositionComponent(0,-1);case direction_right:return new PositionComponent(1,0);case direction_down:return new PositionComponent(0,1);case direction_left:return new PositionComponent(-1,0);}}static isMovementAction(action){return action>action_move&&action<=action_move_left}static convertMovementToSprint(action){switch(action){case action_move_up:return action_sprint_up;case action_move_right:return action_sprint_right;case action_move_down:return action_sprint_down;case action_move_left:return action_sprint_left;}}static convertSprintToMovement(action){switch(action){case action_sprint_up:return action_move_up;case action_sprint_right:return action_move_right;case action_sprint_down:return action_move_down;case action_sprint_left:return action_move_left;}}static convertAnimationsFromConfig(animations){let animationsArray=[];for(let a in animations){animationsArray[animation_strings_to_constants[a]]=animations[a]}return animationsArray}static convertActionsFromConfig(actions){let actionsArray=[];for(let i=0;i<actions.length;i++){actionsArray[i]=action_strings_to_constants[actions[i]]}return actionsArray}static getSquareCode(x,y,size){return x+y*size}static getSquareFromCode(map,code){return map[code%map.length][floor(code/map.length)]}}const LARGE_VALUE=10000;function findPath(board,start,end){let searched=[];let searching=[];let cameFrom={};let distFromStart={};let finalCost={};for(let i=0;i<board.length;i++){for(let j=0;j<board[0].length;j++){distFromStart[board[i][j]]=LARGE_VALUE;finalCost[board[i][j]]=LARGE_VALUE}}searching.push(start);distFromStart[start]=0;finalCost[start]=squareDistance(start,end);cameFrom[Utility.getSquareCode(start.position.x,start.position.y)]=-1;while(searching.length>0){let current=searching[0];for(let s of searching){if(finalCost[s]<finalCost[current])current=s}if(current==end){return makePath(board,cameFrom,current)}searching.splice(searching.indexOf(current),1);searched.push(current);let currentNeighbors=getNeighbors(board,current);for(let n of currentNeighbors){if(searched.includes(n)){continue}else{let estimatedDistFromStart=distFromStart[current]+1;if(!searching.includes(n)){searching.push(n)}else if(estimatedDistFromStart>=distFromStart[n]){continue}cameFrom[Utility.getSquareCode(n.position.x,n.position.y)]=Utility.getSquareCode(current.position.x,current.position.y);distFromStart[n]=estimatedDistFromStart;finalCost[n]=distFromStart[n]+squareDistance(start,end)}}}return false}function squareDistance(start,end){return abs(start.position.x-end.position.x)+abs(start.position.y-end.position.y)}function makePath(board,cameFrom,last){let path=[];let current=Utility.getSquareCode(last.position.x,last.position.y);while(cameFrom[current]>0){path.unshift(Utility.getSquareFromCode(board,current));current=cameFrom[current]}path.unshift(Utility.getSquareFromCode(board,current));return path}function getNeighbors(board,square){neighbors=[];if(square.position.x>0&&walkable(entity_mob,board[square.position.x-1][square.position.y])){neighbors.push(board[square.position.x-1][square.position.y])}if(square.position.y>0&&walkable(entity_mob,board[square.position.x][square.position.y-1])){neighbors.push(board[square.position.x][square.position.y-1])}if(square.position.x<board.length-1&&walkable(entity_mob,board[square.position.x+1][square.position.y])){neighbors.push(board[square.position.x+1][square.position.y])}if(square.position.y<board.length-1&&walkable(entity_mob,board[square.position.x][square.position.y+1])){neighbors.push(board[square.position.x][square.position.y+1])}return neighbors}
function setup(){createCanvas(windowWidth,windowHeight,'game');load()}function load(){let config=loadConfig();let images=loadImages(config.textures);let room_pool=loadRoomPools();let player_config=processEntityData(loadJSON('/data/player_config.json'));let enemy_config=processEntityData(loadJSON('/data/enemy_config.json'));let boss_config=processEntityData(loadJSON('/data/boss_config.json'));let data={'config':config,'room_pool':room_pool[0],'stair_room_pool':room_pool[1],'images':images,'player_config':player_config,'enemy_config':enemy_config,'boss_config':boss_config};new PoppsEngine(data)}function processEntityData(entityData){let newEntityData=[];for(let e in entityData){let entityConstant=entity_string_to_constant[e];newEntityData[entityConstant]=entityData[e];let processedAbilities=[];let i=0;for(let ability of entityData[e].abilities){let a=ability_type_string_to_constant[ability.abilityType];processedAbilities[i]=ability;processedAbilities[i].abilityType=a;i++}newEntityData[entityConstant].abilities=processedAbilities}return newEntityData}function loadConfig(){return loadJSON('/config/config.json')}function loadRoomPools(){return loadJSON('/config/roompool.json')}function loadImages(textureConfig){let images={};images.textures=loadTextures(textureConfig);images.ui=loadUI();return images}function loadTextures(textureConfig){let textures=[];textures[texture_floor]=[];textures[texture_floor][texture_default]=loadImage('/img/textures/floor/floor_default.jpg');textures[texture_floor][texture_num_alts]=textureConfig.NUM_FLOOR_ALTS;for(let i=0;i<textures[texture_floor][texture_num_alts];i++){textures[texture_floor][texture_alt1+i]=loadImage('/img/textures/floor/floor_alt_'+(1+i)+'.png')}textures[texture_wall]=[];textures[texture_wall][texture_default]=loadImage('/img/textures/wall/wall_default.png');textures[texture_wall][texture_num_alts]=textureConfig.NUM_WALL_ALTS;for(let i=0;i<textures[texture_wall][texture_num_alts];i++){textures[texture_wall][texture_alt1+i]=loadImage('/img/textures/wall/wall_alt_'+(1+i)+'.png')}textures[texture_wall][texture_side_top]=loadImage('/img/textures/wall/wall_side_top.png');textures[texture_wall][texture_side_right]=loadImage('/img/textures/wall/wall_side_right.png');textures[texture_wall][texture_side_bottom]=loadImage('/img/textures/wall/wall_side_bottom.png');textures[texture_wall][texture_side_left]=loadImage('/img/textures/wall/wall_side_left.png');textures[texture_wall][texture_in_corner_top_right]=loadImage('/img/textures/wall/wall_corner_in_top_right.png');textures[texture_wall][texture_in_corner_bottom_right]=loadImage('/img/textures/wall/wall_corner_in_bottom_right.png');textures[texture_wall][texture_in_corner_bottom_left]=loadImage('/img/textures/wall/wall_corner_in_bottom_left.png');textures[texture_wall][texture_in_corner_top_left]=loadImage('/img/textures/wall/wall_corner_in_top_left.png');textures[texture_wall][texture_out_corner_top_right]=loadImage('/img/textures/wall/wall_corner_out_top_right.png');textures[texture_wall][texture_out_corner_bottom_right]=loadImage('/img/textures/wall/wall_corner_out_bottom_right.png');textures[texture_wall][texture_out_corner_bottom_left]=loadImage('/img/textures/wall/wall_corner_out_bottom_left.png');textures[texture_wall][texture_out_corner_top_left]=loadImage('/img/textures/wall/wall_corner_out_top_left.png');textures[texture_door_closed]=[];textures[texture_door_closed][texture_default]=loadImage('/img/textures/old/doorClosedTexture.png');textures[texture_door_closed][texture_num_alts]=0;textures[texture_door_open]=[];textures[texture_door_open][texture_default]=loadImage('/img/textures/old/doorOpenedTexture.png');textures[texture_door_open][texture_num_alts]=0;textures[texture_stair]=[];textures[texture_stair][texture_default]=loadImage('/img/textures/stairUp.png');textures[texture_stair][texture_num_alts]=0;textures[texture_level_origin]=[];textures[texture_level_origin][texture_default]=loadImage('/img/textures/stairDown.png');textures[texture_level_origin][texture_num_alts]=0;return textures}function loadUI(){let ui=[];ui[ui_heart]=loadImage('/img/icons/heart.png');ui[ui_empty_heart]=loadImage('/img/icons/emptyHeart.png');return ui}function loadMusic(){let music=[];music.push(loadAudio('/audio/music/001_0100.wav'));music.push(loadAudio('/audio/music/002_0001.wav'));music.push(loadAudio('/audio/music/003_0101.wav'));music.push(loadAudio('/audio/music/004_1101.wav'));music.push(loadAudio('/audio/music/005_1121.wav'));music.push(loadAudio('/audio/music/006_2121.wav'));music.push(loadAudio('/audio/music/007_0200.wav'));music.push(loadAudio('/audio/music/008_0201.wav'));music.push(loadAudio('/audio/music/009_1201.wav'));music.push(loadAudio('/audio/music/010_1221.wav'));return music}function loadSounds(){}function keyDown(){}function keyUp(){}
function PositionComponent(x,y){this.x=x;this.y=y}function HealthComponent(initialHealth){this.maxHealth=initialHealth;this.currentHealth=initialHealth}function StrengthComponent(initialStrength){this.strength=initialStrength}function IntelligenceComponent(initialIntelligence){this.intelligence=initialIntelligence}function DexterityComponent(initialDexterity){this.dexterity=initialDexterity}function CombatComponent(attackDamage,magicDamage,armor){this.attackDamage=attackDamage;this.magicDamage=magicDamage;this.armor=armor}function DirectionComponent(direction){this.direction=direction}function PhysicalComponent(solid,size){this.solid=solid;this.size=size}function CollisionComponent(x,y,w,h){if(h===undefined){h=w}this.top=y;this.right=x+w;this.bottom=y+h;this.left=x;this.width=w;this.height=h}function MovementComponent(speed){this.speed=speed;this.currentCooldown=0}function DisplayComponent(width,height,offsetX=0,offsetY=0,z=0){this.width=width;this.height=height;this.offsetX=offsetX;this.offsetY=offsetY;this.z=z;this.lightLevel=0}function SquareComponent(type){this.type=type;this.visible=false;this.discovered=false;this.discoveredCounter=0;this.opaque=opaque}function AnimationComponent(animations){if(animations==-1){this.animation=animation_no_animations_yet}else{this.offsetX=0;this.offsetY=0;this.stage=0;this.sprite=undefined;this.animation=animation_idle;this.animations=animations}}function TextureComponent(type,subtype=texture_default){this.type=type;this.subtype=texture_default}function TextureElementComponent(element=texture_default,xOff=0,yOff=0){this.element=element;this.xOff=xOff;this.yOff=yOff}function LightComponent(){this.level=0}function LightEmitterComponent(emitterLevel){this.level=emitterLevel}function ActionsComponent(actions){this.busy=0;this.actions=actions;for(let a in actions){this.actions[a]=new ActionComponent(actions[a].action,actions[a].cooldown,actions[a].time)}this.nextAction=action_none;this.currentAction=action_none;this.lastAction=action_none;this.lastActionFailed=false}function ActionComponent(actionID,actionCooldown,actionTime){this.action=actionID;this.cooldown=actionCooldown;this.time=actionTime;this.currentCooldown=0}function SprintComponent(movesBeforeSprinting,sprintSpeed){this.movesBeforeSprinting=movesBeforeSprinting;this.lastMoveTime=0;this.sprintCounter=0;this.sprinting=false;this.sprintSpeed=sprintSpeed}function MapComponent(map){this.map=map}function DepthComponent(depth){this.depth=depth}function AIComponent(attackRange){this.attackRange=attackRange;this.noticedPlayer=false;this.idleTimer=0}function AbilitiesComponent(abilities){this.abilities=[];for(let a of abilities){this.abilities.push(new AbilityComponent(a))}}function AbilityComponent(ability){for(let prop in ability){this[prop]=ability[prop]}this.currentCooldown=0}function ControllerComponent(controls){this.inputs=controls}function CameraComponent(position){this.ready=false;this.smoothFrames=4;this.cameraX=position.x;this.cameraY=position.y;this.shakeOffsetX=0;this.shakeOffsetY=0;this.zoom=1}function InteractableComponent(type){this.type=type}
function PlayerTemplate(x=0,y=0,depth=0,size=DEFAULT_PLAYER_SIZE,health=DEFAULT_PLAYER_HEALTH,attackDamage=DEFAULT_PLAYER_ATTACK_DAMAGE,magicDamage=DEFAULT_PLAYER_MAGIC_DAMAGE,armor=DEFAULT_PLAYER_ARMOR,abilities,animations=-1){let components=[];components[component_position]=new PositionComponent(x,y);components[component_depth]=new DepthComponent(depth);components[component_display]=new DisplayComponent(size,size);components[component_camera]=new CameraComponent(x,y);components[component_collision]=new CollisionComponent(x,y,size,size);components[component_direction]=new DirectionComponent(direction_down);components[component_health]=new HealthComponent(health);components[component_combat]=new CombatComponent(attackDamage,magicDamage,armor);components[component_actions]=new ActionsComponent(DEFAULT_PLAYER_ACTIONS);components[component_controller]=new ControllerComponent(DEFAULT_CONTROLLER_LAYOUT);components[component_abilities]=new AbilitiesComponent(abilities);components[component_animation]=new AnimationComponent(animations);return components}function EnemyTemplate(x=0,y=0,size=DEFAULT_ENEMY_SIZE,direction=randomInt(0,3),health=DEFAULT_ENEMY_HEALTH,attackDamage=DEFAULT_ENEMY_ATTACK_DAMAGE,magicDamage=DEFAULT_ENEMY_MAGIC_DAMAGE,armor=DEFAULT_ENEMY_ARMOR,actions=DEFAULT_ENEMY_ACTIONS,abilities,animations=-1){let components=[];components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(size,size);components[component_collision]=new CollisionComponent(x,y,size,size);components[component_direction]=new DirectionComponent(direction);components[component_health]=new HealthComponent(health);components[component_combat]=new CombatComponent(attackDamage,magicDamage,armor);components[component_actions]=new ActionsComponent(actions);components[component_abilities]=new AbilitiesComponent(abilities);components[component_animation]=new AnimationComponent(animations);return components}function SquareTemplate(x,y,type){let components=[];if(type==square_wall){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_wall);components[component_collision]=new CollisionComponent(x,y,1,1)}else if(type==square_floor){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_floor)}else if(type==square_door){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_door_closed);components[component_collision]=new CollisionComponent(x,y,1,1);components[component_interactable]=new InteractableComponent(interactable_door)}else if(type==square_stair){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_stair);components[component_interactable]=new InteractableComponent(interactable_stair)}else if(type==square_level_origin){components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(1,1);components[component_texture]=new TextureComponent(texture_level_origin)}return components}function TorchTemplate(x=0,y=0,size=1,direction=randomInt(0,3)){let components=[];components[component_position]=new PositionComponent(x,y);components[component_display]=new DisplayComponent(size,size);components[component_direction]=new DirectionComponent(direction);components[component_texture]=new TextureComponent(texture_torch);return components}
function GameEntity(ID,components){this.ID=ID;this.components=components}
function Item(){}
function generateLevel(CONFIG,depth,ROOM_POOL,STAIR_ROOM_POOL){if(DO_LEVEL_GEN){let startTime=millis();let level;let rooms=[];let torches=[];let stairUp={x:0,y:0,sector:0};let stairDown={x:0,y:0,sector:0};level=initLevel(CONFIG.DUNGEON_SIZE,square_wall);rooms.push(generateStairUpRoom(stairUp,CONFIG.DUNGEON_SIZE,STAIR_ROOM_POOL));stairUp.x=rooms[0].x;stairUp.y=rooms[0].y;rooms.push(generateStairDownRoom(stairUp,stairDown,CONFIG.DUNGEON_SIZE,STAIR_ROOM_POOL));stairDown.x=rooms[1].x;stairDown.y=rooms[1].y;generateOtherRooms(level,rooms,CONFIG.DUNGEON_SIZE,CONFIG.ROOM_TRIES,ROOM_POOL);placeRoomsOnLevel(level,rooms);markNodeSquares(level);connectRooms(level,rooms,CONFIG.DUNGEON_SIZE);populateRooms(level,rooms,torches);finalizeLevel(level,stairUp,stairDown);return{"level_origin":stairUp,"squares":level}}else{let level=initLevel(CONFIG.DUNGEON_SIZE,square_floor);let torches=[];let stairUp={x:randomInt(CONFIG.DUNGEON_SIZE),y:randomInt(CONFIG.DUNGEON_SIZE)};let stairDown={x:randomInt(CONFIG.DUNGEON_SIZE),y:randomInt(CONFIG.DUNGEON_SIZE)};finalizeLevel(level,stairUp,stairDown);return new Level(level,stairUp,stairDown,depth,torches)}}function initLevel(size,defaultValue){let level=new Array(size);for(let i=0;i<size;i++){level[i]=new Array(size);for(let j=0;j<size;j++){level[i][j]=defaultValue}}return level}function generateStairUpRoom(stairUp,size,STAIR_ROOM_POOL){stairUp.sector=randomInt(8);sectorToCoordinates(stairUp,size);return new Room(random(STAIR_ROOM_POOL),stairUp.x,stairUp.y)}function generateStairDownRoom(stairUp,stairDown,size,STAIR_ROOM_POOL){stairDown.sector=(stairUp.sector+4)%8;sectorToCoordinates(stairDown,size);return new Room(random(STAIR_ROOM_POOL),stairDown.x,stairDown.y)}function sectorToCoordinates(stair,size){switch(stair.sector){case 0:stair.x=floor(size/4);stair.y=floor(size/4);break;case 1:stair.x=2*floor(size/4);stair.y=floor(size/4);break;case 2:stair.x=3*floor(size/4);stair.y=floor(size/4);break;case 3:stair.x=3*floor(size/4);stair.y=2*floor(size/4);break;case 4:stair.x=3*floor(size/4);stair.y=3*floor(size/4);break;case 5:stair.x=2*floor(size/4);stair.y=3*floor(size/4);break;case 6:stair.x=floor(size/4);stair.y=3*floor(size/4);break;case 7:stair.x=floor(size/4);stair.y=2*floor(size/4);break;}}function generateOtherRooms(level,rooms,size,ROOM_TRIES,ROOM_POOL){for(let i=0;i<ROOM_TRIES;i++){tryRoom(level,rooms,size,ROOM_POOL)}}function tryRoom(level,rooms,size,ROOM_POOL){let newRoom=new Room(random(ROOM_POOL),randomInt(size),randomInt(size));if(isValidRoom(rooms,newRoom,size))rooms.push(newRoom)}function isValidRoom(rooms,newRoom,size){if(newRoom.left<0||newRoom.top<0||newRoom.right>size||newRoom.bottom>size)return false;for(let r of rooms){if(roomsCollide(r,newRoom))return false}return true}function roomsCollide(r1,r2){return!(r1.left>r2.right||r1.top>r2.bottom||r1.right<r2.left||r1.bottom<r2.top)}function placeRoomsOnLevel(level,rooms){for(let r of rooms){for(let i=0;i<r.width;i++){for(let j=0;j<r.height;j++){level[i+r.left][j+r.top]=r.squares[i][j]}}}}function markNodeSquares(level){for(let i=1;i<level.length-1;i+=2){for(let j=1;j<level.length-1;j+=2){if(level[i][j]==square_wall)level[i][j]=new Node(i,j,false)}}}function connectRooms(level,rooms,size){let connected=[rooms[0]];let connectedDoors=rooms[0].doors;while(connected.length<rooms.length){let closestRoom;let closestDistance;for(let r of rooms){if(!connected.includes(r)){closestRoom=r;closestDistance=10000}}for(let c of connected){for(let r of rooms){if(connected.includes(r))continue;else{let currentDistance=roomDistance(c,r);if(currentDistance<closestDistance){closestRoom=r;closestDistance=currentDistance}}}}connectRoom(level,connected,closestRoom,connectedDoors)}}function roomDistance(r1,r2){return abs(r1.x-r2.x)+abs(r1.y-r2.y)}function connectRoom(level,connected,room,connectedDoors){let roomDoors=room.doors;let closestDoors=[connectedDoors[0],roomDoors[0]];let closestDistance=10000;let adjacent=false;let success=false;for(let rd of roomDoors){if(includesDoor(connectedDoors,rd)){closestDoors[0]=rd;adjacent=true;success=true;break}else{for(let cd of connectedDoors){let currentDistance=doorDistance(rd,cd);if(currentDistance<closestDistance){closestDoors=[cd,rd];closestDistance=currentDistance}}}}if(!adjacent){success=makePathBetweenDoors(level,closestDoors[0],closestDoors[1],connectedDoors)}if(success){if(adjacent){level[closestDoors[0][0]][closestDoors[0][1]]=square_door}else{level[closestDoors[0][0]][closestDoors[0][1]]=square_door;level[closestDoors[1][0]][closestDoors[1][1]]=square_door}for(let rd of roomDoors){if(!includesDoor(connectedDoors,rd)){connectedDoors.push(rd)}}connected.push(room)}else{connectedDoors.splice(connectedDoors.indexOf(closestDoors[0]),1);room.doors.splice(room.doors.indexOf(closestDoors[1]),1);connectRoom(level,connected,room,connectedDoors)}}function includesDoor(doorArray,door){for(let d of doorArray){if(door[0]==d[0]&&door[1]==d[1])return true}return false}function doorDistance(d1,d2){return(d1[0]-d2[0])*(d1[0]-d2[0])+(d1[1]-d2[1])*(d1[1]-d2[1])}function makePathBetweenDoors(level,door1,door2,connectedDoors){let searched=[];let searching=[];let distFromStart={};let finalCost={};for(let i=0;i<level.length;i++){for(let j=0;j<level[0].length;j++){distFromStart[level[i][j]]=LARGE_VALUE;finalCost[level[i][j]]=LARGE_VALUE}}let start=getAdjacentNode(level,door1);let end=getAdjacentNode(level,door2);if(start==undefined||end==undefined)return false;searching.push(start);distFromStart[start]=0;finalCost[start]=nodeDistance(start,end);start.cameFrom=undefined;while(searching.length>0){let current=searching[0];for(let s of searching){if(finalCost[s]<finalCost[current])current=s}if(current==end){drawNodePath(level,current,connectedDoors);return true}searching.splice(searching.indexOf(current),1);searched.push(current);let currentNeighbors=getSurroundingNodes(level,current);for(let n of currentNeighbors){if(searched.includes(n)){continue}else{let estimatedDistFromStart=distFromStart[current]+1;if(!searching.includes(n)){searching.push(n)}else if(estimatedDistFromStart>=distFromStart[n]){continue}n.cameFrom=current;distFromStart[n]=estimatedDistFromStart;finalCost[n]=distFromStart[n]+nodeDistance(start,end)}}}return false}function getAdjacentNode(level,door){if(door[0]%2==1&&door[1]%2==1)return level[door[0]][door[1]];if(door[0]>1&&level[door[0]-1][door[1]]instanceof Node)return level[door[0]-1][door[1]];if(door[1]>1&&level[door[0]][door[1]-1]instanceof Node)return level[door[0]][door[1]-1];if(door[0]<level.length-2&&level[door[0]+1][door[1]]instanceof Node)return level[door[0]+1][door[1]];if(door[1]<level.length-2&&level[door[0]][door[1]+1]instanceof Node)return level[door[0]][door[1]+1]}function nodeDistance(start,end){return abs(start.x-end.x)+abs(start.y-end.y)}function getSurroundingNodes(level,node){let neighbors=[];if(node.x>1&&level[node.x-2][node.y]instanceof Node)neighbors.push(level[node.x-2][node.y]);if(node.y>1&&level[node.x][node.y-2]instanceof Node)neighbors.push(level[node.x][node.y-2]);if(node.x<level.length-2&&level[node.x+2][node.y]instanceof Node)neighbors.push(level[node.x+2][node.y]);if(node.y<level.length-2&&level[node.x][node.y+2]instanceof Node)neighbors.push(level[node.x][node.y+2]);return neighbors}function drawNodePath(level,node){level[node.x][node.y].connected=true;while(node.cameFrom!=undefined){fillBetweenNodes(level,node,node.cameFrom);node=node.cameFrom;level[node.x][node.y].connected=true}}function fillBetweenNodes(level,node1,node2){level[node1.x+(node2.x-node1.x)/2][node1.y+(node2.y-node1.y)/2]=square_floor}function populateRooms(level,rooms,torches){}function finalizeLevel(level,stairUp,stairDown){level[stairUp.x][stairUp.y]=square_level_origin;level[stairDown.x][stairDown.y]=square_stair;for(let i=0;i<level.length;i++){for(let j=0;j<level.length;j++){if(level[i][j]instanceof Node){if(level[i][j].connected){level[i][j]=square_floor}else{level[i][j]=square_wall}}level[i][j]=SquareTemplate(i,j,level[i][j])}}}function Node(x,y,connected){this.x=x;this.y=y;this.connected=connected}
function Room(template,x,y){this.width=template.width;this.height=template.height;this.left=x-floor(this.width/2);this.top=y-floor(this.height/2);this.left+=this.left%2-1;this.top+=this.top%2-1;this.right=this.left+this.width;this.bottom=this.top+this.height;this.x=this.left+floor(this.width/2);this.y=this.top+floor(this.height/2);this.squares=template.squares.slice(0);this.doors=new Array(template.doors.length);for(let i=0;i<this.doors.length;i++){this.doors[i]=[template.doors[i][0]+this.left,template.doors[i][1]+this.top]}}
class AISystem extends GameSystem{constructor(config){super([component_ai]);this.config=config}run(engine){for(let entity of this.entities){if(Utility.distance(entity.position,engine.getPlayer().position)<entity_active_range){if(entity.ai.noticedPlayer){this.handleActiveEntity(engine,entity,engine.getPlayer())}else{this.handleIdleEntity(engine,entity,engine.getPlayer())}}}}handleEvent(engine,eventID,data){switch(eventID){case event_successful_action:let entity=data.entity;if(entity instanceof Mob&&!entity.ai.noticedPlayer&&entity.display.visible){let self=this;setTimeout(function(){entity.ai.noticedPlayer=self.checkNoticePlayer(engine,entity,engine.getPlayer())},this.config.MOB_REACTION_TIME)}break;}}handleActiveEntity(engine,entity,player){if(entity.actions.busy==0){entity.actions.nextAction=this.determineAction(engine,entity,player)}}determineAction(engine,entity,player){return randomInt(11,14)}getAttackAction(entity,player){let dir=Utility.getDirectionToEntity(entity,player);entity.direction.direction=dir;return direction_to_attack[dir]}getMoveCloserAction(engine,entity,player){return direction_to_movement[Utility.getDirectionToEntity(entity,player)]}handleIdleEntity(engine,entity,player){if(entity.ai.idleTimer==0){entity.actions.nextAction=this.determineIdleAction(engine,entity);entity.ai.idleTimer=randomInt(this.config.MIN_IDLE_TIME,this.config.MAX_IDLE_TIME)}else{entity.ai.idleTimer--}}checkNoticePlayer(engine,entity,player){switch(entity.direction.direction){case direction_up:if(entity.collision.top+1>=player.collision.bottom){return VisionSystem.lineOfSight(engine,entity.position,player.position)}break;case direction_right:if(entity.collision.right-1<=player.collision.left){return VisionSystem.lineOfSight(engine,entity.position,player.position)}break;case direction_down:if(entity.collision.bottom-1<=player.collision.top){return VisionSystem.lineOfSight(engine,entity.position,player.position)}break;case direction_left:if(entity.collision.left+1>=player.collision.right){return VisionSystem.lineOfSight(engine,entity.position,player.position)}break;default:console.log("Cannot determine entity direction: "+entity.direction.direction);return false;}return false}determineIdleAction(engine,entity){let randomMoveAction=action_move+randomInt(1,5);if(MovementSystem.validMove(engine,entity,MovementSystem.getDestination(entity,randomMoveAction))){return randomMoveAction}else{if(randomMoveAction==action_move_up){return action_move_down}else if(randomMoveAction==action_move_right){return action_move_left}else if(randomMoveAction==action_move_down){return action_move_up}else if(randomMoveAction==action_move_left){return action_move_right}return action_none}}}
class AbilitySystem extends GameSystem{constructor(){super([component_abilities])}run(engine){for(let entity of this.objects){switch(entity.actions.currentAction){case action_ability_one:this.handleAbility(engine,entity,entity.abilities.abilities[0]);break;case action_ability_two:this.handleAbility(engine,entity,entity.abilities.abilities[1]);break;case action_ability_three:this.handleAbility(engine,entity,entity.abilities.abilities[2]);break;}}}handleEvent(engine,eventID,data){}handleAbility(engine,entity,ability){if(ability!==undefined){switch(ability.abilityType){case ability_type_melee:this.handleMeleeAbility(engine,entity,ability);break;case ability_type_aoe:this.handleAOEAbility(engine,entity,ability);break;case ability_type_aoe_ranged:this.handleAOERangedAbility(engine,entity,ability);break;case ability_type_skillshot:this.handleSkillshotAbility(engine,entity,ability);break;case ability_type_smite:this.handleSmiteAbility(engine,entity,ability);break;}}}handleMeleeAbility(engine,entity,ability){let squares=Utility.getSquaresInFront(engine,entity.position,entity.direction.direction,ability.range);let targets=Utility.getEntitiesInSquares(engine,squares);let dirOffset=0;while(targets.length==0&&dirOffset<4){dirOffset++;squares=Utility.getSquaresInFront(engine,entity.position,(entity.direction.direction+dirOffset)%4,ability.range);targets=Utility.getEntitiesInSquares(engine,squares)}if(targets.length>0){entity.direction.direction=(entity.direction.direction+dirOffset)%4;for(let t of targets){if(t!=entity&&t.components.includes(component_combat)){engine.sendEvent(event_melee_ability,{'entity':entity,'target':t,'ability':ability})}}engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}}handleAOEAbility(engine,entity,ability){let squares=Utility.getSquaresAround(engine,entity.position,ability.range);let targets=Utility.getEntitiesInSquares(engine,squares);for(let t of targets){if(t!=entity&&t.components.includes(component_combat)){engine.sendEvent(event_melee_ability,{'entity':entity,'target':t,'ability':ability})}}if(targets.length>0){engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}}handleAOERangedAbility(engine,entity,ability){console.log('aoe ranged: '+entity);engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}handleSkillshotAbility(engine,entity,ability){console.log('skillshot: '+entity);engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}handleSmiteAbility(engine,entity,ability){console.log('smite: '+entity);engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity})}}
class ActionSystem extends GameSystem{constructor(){super([component_actions])}init(engine){this.hitstunTimer=0}run(engine){if(this.hitstunTimer==0){for(let entity of this.objects){for(let a in entity.actions.actions){if(entity.actions.actions[a].currentCooldown>0){entity.actions.actions[a].currentCooldown--}}if(entity.actions.busy>0){entity.actions.busy--}else{this.setCurrentAction(entity,engine)}}}else{this.hitstunTimer--}}handleEvent(engine,eventID,data){switch(eventID){case event_successful_action:this.handleSuccessfulAction(engine,data.entity,data.action);break;case event_failed_action:this.handleFailedAction(engine,data.entity);break;case event_hitstun:this.hitstunTimer=data.ticks;break;}}setCurrentAction(entity,engine){entity.actions.currentAction=entity.actions.nextAction;entity.actions.nextAction=action_none}setCooldowns(entity,action){entity.actions.busy=entity.actions.actions[action].time;entity.actions.actions[action].currentCooldown=entity.actions.actions[action].cooldown}handleSuccessfulAction(engine,entity,action){this.setCooldowns(entity,action);if(action_to_animation[action]!==undefined&&entity.animation.animations[action_to_animation[action]]!==undefined){entity.animation.animation=action_to_animation[action];engine.sendEvent(event_new_animation,entity)}entity.actions.lastActionFailed=false;entity.actions.lastAction=action;entity.actions.currentAction=action_none}handleFailedAction(engine,entity){this.setCooldowns(entity,action_none);entity.actions.lastActionFailed=true;entity.actions.lastAction=entity.actions.currentAction;entity.actions.currentAction=action_none}}
class AnimationSystem extends GameSystem{constructor(config){super([component_display,component_animation]);this.config=config}init(engine){this.animationCounter=0;this.idleAnimationCounter=0}run(engine){if(this.animationCounter==this.config.ANIMATION_SPEED){this.animationCounter=0;if(this.idleAnimationCounter==this.config.IDLE_ANIMATION_SLOW_FACTOR){this.idleAnimationCounter=0}for(let o of this.objects){if(o.animation.animation==animation_idle){if(this.idleAnimationCounter==0){o.animation.stage++;if(o.animation.stage==o.animation.animations[o.animation.animation].length){this.startIdleAnimation(o)}this.updateAnimation(o)}}else{o.animation.stage++;if(o.animation.stage==o.animation.animations[o.animation.animation].length){this.startIdleAnimation(o)}this.updateAnimation(o)}}this.idleAnimationCounter++}this.animationCounter++}handleEvent(engine,eventID,data){switch(eventID){case event_new_animation:this.startAnimation(data);break;}}startIdleAnimation(entity){entity.animation.animation=animation_idle;entity.animation.stage=0;this.updateAnimation(entity)}updateAnimation(entity){entity.animation.offsetX=entity.animation.animations[entity.animation.animation][entity.animation.stage].ox;entity.animation.offsetY=entity.animation.animations[entity.animation.animation][entity.animation.stage].oy;entity.animation.sprite=entity.animation.animations[entity.animation.animation][entity.animation.stage].sprite}startAnimation(object){object.animation.stage=0;this.updateAnimation(object)}}
function AudioManager(){const mm=new MusicManager;let sounds=[]}
class CameraSystem extends GameSystem{constructor(config){super([component_position,component_camera]);this.config=config}init(engine){this.cameraZoomTimer=undefined;this.cameraShakeTimer=undefined;this.cameraMoving=false}run(engine){for(let ID in this.entities){this.updateCamera(engine,this.entities[ID])}}handleEvent(engine,eventID,data){switch(eventID){case event_begin_level:for(let ID in this.entities){this.snapCamera(engine,this.entities[ID]);engine.sendEvent(event_camera_updated,{camera:this.entities[ID][component_camera]})}break;case event_player_moved:for(let ID in this.entities){this.entities[ID][camera_component].smoothFrames=this.config.CAMERA_MOVE_SPEED}break;}}panCamera(engine){this.camera.x+=(this.camera.targetX-this.camera.x)/5;this.camera.y+=(this.camera.targetY-this.camera.y)/5;if(this.camera.targetX-this.camera.x<.1){this.camera.x=this.camera.targetX}if(this.camera.targetY-this.camera.y<.1){this.camera.y=this.camera.targetY}engine.sendEvent(event_camera_moved,{camera:this.camera})}updateCamera(engine,entity){if(entity[component_camera].smoothFrame>0){let difX=entity[component_position].x-entity[component_camera].cameraX;let difY=entity[component_position].y-entity[component_camera].cameraY;difX=difX/this.config.CAMERA_MOVE_SPEED*entity[component_camera].smoothFrame;difY=difY/this.config.CAMERA_MOVE_SPEED*entity[component_camera].smoothFrame;entity[component_camera].cameraX+=difX;entity[component_camera].cameraY+=difY;entity[component_camera].smoothFrame--;engine.sendEvent(event_camera_updated,{camera:this.entities[ID][component_camera]})}}snapCamera(engine,entity){entity[component_camera].cameraX=entity[component_position].x;entity[component_camera].cameraY=entity[component_position].y;entity[component_camera].smoothFrame=0}}
class CombatSystem extends GameSystem{constructor(config){super([component_combat]);this.config=config}init(engine){this.inCombat=false;this.combatTimer=0}run(engine){if(this.combatTimer>0){this.combatTimer--;if(this.combatTimer==0){engine.sendEvent(event_end_combat)}}}handleEvent(engine,eventID,data){switch(eventID){case event_melee_ability:this.meleeAttack(engine,data.entity,data.target,data.ability);this.resetCombatTimer(engine);break;case event_melee_ability:this.meleeAttack(engine,data.entity,data.target,data.ability);this.resetCombatTimer(engine);break;}}resetCombatTimer(engine){if(this.combatTimer==0){engine.sendEvent(event_begin_combat)}this.combatTimer=this.config.COMBAT_TIMER}determineAttackDirection(entity,objects){for(let o of objects){let dir=Utility.entityAdjacent(entity,o);if(dir!==-1){return dir}}return-1}meleeAttack(engine,entity,target,ability){let healthLost=max(0,entity.combat.attackDamage-target.combat.armor);engine.sendEvent(event_entity_take_damage,{'entity':target,'healthLost':healthLost});return}spinAttack(engine,entity,objects){let targets=[];for(let o of objects){if(entity!=o&&this.entityAround(entity,o)){targets.push(o)}}if(targets.length>0){if(entity instanceof Player){engine.sendEvent(event_player_spin_attack)}for(let o of targets){let healthLost=max(0,entity.combat.meleeAttackPower-o.combat.meleeDefensePower);engine.sendEvent(event_entity_attacked,{'attacker':entity,'target':o,'healthLost':healthLost})}engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity});this.beginCombat(engine)}}entityAround(entity,otherEntity){return Utility.collision(new CollisionComponent(entity.position.x-1,entity.position.y-1,3),otherEntity.collision)}static validMeleeAttack(engine,entity){for(let o of engine.getEntities()){if(entity!=o){if(Utility.entityAdjacent(entity,o)!=-1){return true}}}return false}}
class DisplaySystem extends GameSystem{constructor(config,images){super([component_position,component_display]);this.config=config;this.textures=images}init(engine){this.cameraZoomTimer=undefined;this.cameraShakeTimer=undefined;this.cameraMoving=false;this.lightOffset=0;this.lightOffsetScale=.02;this.lightOffsetSpeed=600;this.centerX=floor(width/2);this.centerY=floor(height/2);this.canvas={ready:false,centerX:this.centerX,centerY:this.centerY,zoom:1};this.gridSize=this.config.GRID_SIZE;this.halfGridSize=this.gridSize/2}run(engine){background(0);canvas.translate(this.centerX-this.gridSize*this.canvas.centerX,this.centerY-this.gridSize*this.canvas.centerY);canvas.scale(this.canvas.zoom,this.canvas.zoom);for(let ID in this.entities){if(!Utility.entityHasComponent(this.entities[ID],component_animation)){this.drawEntityWithoutAnimation(this.entities[ID])}}for(let ID in this.entities){if(Utility.entityHasComponent(this.entities[ID],component_animation)){this.drawEntityWithAnimation(this.entities[ID])}}canvas.setTransform()}handleEvent(engine,eventID,data){switch(eventID){case event_begin_level:break;case event_camera_updated:this.canvas.centerX=data.camera.cameraX;this.canvas.centerY=data.camera.cameraY;this.canvas.zoom=data.camera.zoom;break;case event_down_level:this.camera.display=false;break;case event_window_resized:this.resize();break;case event_player_start_sprinting:this.camera.sprinting=true;this.decideCameraZoomState(this.camera);break;case event_player_stop_sprinting:this.camera.sprinting=false;this.decideCameraZoomState(this.camera);break;case event_entity_take_damage:this.shakeCamera(this.camera,data.healthLost);break;}}getDrawBounds(entity){let bounds={};bounds.x=this.gridSize*(entity[component_position].x+entity[component_display].offsetX)-this.canvas.centerX;bounds.y=this.gridSize*(entity[component_position].y+entity[component_display].offsetY)-this.canvas.centerY;bounds.w=entity[component_display].width*this.gridSize;bounds.h=entity[component_display].height*this.gridSize;return bounds}onScreen(bounds,scale){const border=max(bounds.w,bounds.h)+10;const t=-(height/scale/2)-border;const r=width/scale/2+border;const b=height/scale/2+border;const l=-(width/scale/2)-border;return bounds.y>t&&bounds.x+bounds.w<r&&bounds.y+bounds.h<b&&bounds.x>l}drawEntityWithAnimation(entity){let bounds=this.getDrawBounds(entity);let x=bounds.x,y=bounds.y,w=bounds.w,h=bounds.h;fill(255,0,0);rect(x,y,w,h)}drawEntityWithoutAnimation(entity){let bounds=this.getDrawBounds(entity);this.drawTexture(entity,bounds)}drawTexture(entity,bounds){let x=bounds.x,y=bounds.y,w=bounds.w,h=bounds.h;let texture=entity[component_texture];if(this.textures[texture.type][texture.subtype]==undefined){console.log("undefined");image(this.textures[texture.type][texture_default],x,y,w,h)}else{image(this.textures[texture.type][texture.subtype],x,y,w,h)}}static texturesConnect(t1,t2){if(t2===undefined){return false}if(t1 instanceof WallSquare){return t2 instanceof WallSquare}else if(t1 instanceof FloorSquare){return!(t2 instanceof WallSquare)}}static determineTextureType(square,texture,map){let TOP=false,RIGHT=false,BOTTOM=false,LEFT=false;let numNeighbors=0;if(square.position.y>0){TOP=DisplaySystem.texturesConnect(square,map[square.position.x][square.position.y-1]);if(TOP){numNeighbors++}}if(square.position.x<map.length-1){RIGHT=DisplaySystem.texturesConnect(square,map[square.position.x+1][square.position.y]);if(RIGHT){numNeighbors++}}if(square.position.y<map.length-1){BOTTOM=DisplaySystem.texturesConnect(square,map[square.position.x][square.position.y+1]);if(BOTTOM){numNeighbors++}}if(square.position.x>0){LEFT=DisplaySystem.texturesConnect(square,map[square.position.x-1][square.position.y]);if(LEFT){numNeighbors++}}switch(numNeighbors){case 0:texture.textureElements.push(new TextureElementComponent(texture_cross,0,0));break;case 1:if(TOP){texture.textureElements.push(new TextureElementComponent(texture_U_top,0,0))}else if(RIGHT){texture.textureElements.push(new TextureElementComponent(texture_U_right,0,0))}else if(BOTTOM){texture.textureElements.push(new TextureElementComponent(texture_U_bottom,0,0))}else if(LEFT){texture.textureElements.push(new TextureElementComponent(texture_U_left,0,0))}break;case 2:if(LEFT&&RIGHT){texture.textureElements.push(new TextureElementComponent(texture_side_top,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_bottom,0,0))}else if(TOP&&BOTTOM){texture.textureElements.push(new TextureElementComponent(texture_side_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_left,0,0))}else if(TOP&&RIGHT){texture.textureElements.push(new TextureElementComponent(texture_in_corner_bottom_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_right,0,0))}else if(BOTTOM&&RIGHT){texture.textureElements.push(new TextureElementComponent(texture_in_corner_top_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_right,0,0))}else if(BOTTOM&&LEFT){texture.textureElements.push(new TextureElementComponent(texture_in_corner_top_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_left,0,0))}else if(LEFT&&TOP){texture.textureElements.push(new TextureElementComponent(texture_in_corner_bottom_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_left,0,0))}break;case 3:if(!TOP){texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_top,0,0))}else if(!RIGHT){texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_right,0,0))}else if(!BOTTOM){texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_left,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_bottom,0,0))}else if(!LEFT){texture.textureElements.push(new TextureElementComponent(texture_out_corner_bottom_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_out_corner_top_right,0,0));texture.textureElements.push(new TextureElementComponent(texture_side_left,0,0))}break;case 4:texture.textureElements.push(new TextureElementComponent(texture_default,0,0));break;default:texture.textureElements.push(new TextureElementComponent(texture_default,0,0));break;}}determineSquareTextures(map){for(let i=0;i<map.length;i++){for(let j=0;j<map.length;j++){let square=map[i][j];for(let texture of square.textures){switch(texture.type){case texture_wall:case texture_floor:DisplaySystem.determineTextureType(square,texture,map);break;default:texture.textureElements.push(new TextureElementComponent(texture_default,0,0));break;}if(texture.textureElements.length==1&&texture.textureElements[0].element==texture_default){this.setTextureAlt(texture)}}}}}setTextureAlt(texture){if(this.textures[texture.type][texture_num_alts]>0){let rand=random(texture_probability_distribution[this.textures[texture.type][texture_num_alts]+1]);for(let i=0;i<this.textures[texture.type][texture_num_alts]+1;i++){if(rand<texture_probability_distribution[i]){texture.textureElements[0].element=texture_default+i;return}}}}drawSquare(squareEntity){if(squareEntity[component_display].discovered){let bounds=this.getDrawBounds(s);if(this.onScreen(bounds,this.camera.zoom)){this.drawTexture(s,bounds)}}}drawEntities(entities){for(let e of entities){if(e.display.visible){let bounds=this.getDrawBounds(e);if(this.onScreen(bounds,this.camera.zoom)){if(e.components.indexOf(component_animation)!==-1){this.drawAnimation(e,bounds)}else if(e.components.indexOf(component_texture)!==-1){this.drawAnimation(e,bounds)}else{let x=bounds.x,y=bounds.y,w=bounds.w,h=bounds.h;if(e instanceof Torch){fill(255,220,130,.75);switch(e.direction.direction){case direction_up:arc(x,y,w,Math.PI,2*Math.PI);break;case direction_right:arc(x,y,h,Math.PI/2,1.5*Math.PI,true);break;case direction_down:arc(x,y,w,0,Math.PI);break;case direction_left:arc(x,y,h,Math.PI/2,1.5*Math.PI);break;}}else{fill(255,100,100);rect(x,y,w,h)}}}}}}drawAnimation(object,bounds){let x=bounds.x,y=bounds.y,w=bounds.w,h=bounds.h;x+=this.gridSize*object.animation.offsetX;y+=this.gridSize*object.animation.offsetY;let s=object.animation.sprite;if(s==undefined){fill(20);rect(x+this.gridSize/8-2,y+this.gridSize/8-2,w-this.gridSize/4+4,h-this.gridSize/4+4);if(object instanceof Player){fill(0,200,230)}else{fill(200,20,40)}rect(x+this.gridSize/8,y+this.gridSize/8,w-this.gridSize/4,h-this.gridSize/4);if(object instanceof Player){fill(255,255,0);switch(object.direction.direction){case direction_up:ellipse(x+this.gridSize/2,y+this.gridSize/2-this.gridSize/3,this.gridSize/6,this.gridSize/6);break;case direction_right:ellipse(x+this.gridSize/2+this.gridSize/3,y+this.gridSize/2,this.gridSize/6,this.gridSize/6);break;case direction_down:ellipse(x+this.gridSize/2,y+this.gridSize/2+this.gridSize/3,this.gridSize/6,this.gridSize/6);break;case direction_left:ellipse(x+this.gridSize/2-this.gridSize/3,y+this.gridSize/2,this.gridSize/6,this.gridSize/6);break;}}}else{image(a,x,y,w,h)}}drawLights(objects){for(let o of objects){if(o.display.discovered&&o.components.includes(component_light)){this.lightSquare(o)}}}lightSquare(o){let bounds=this.getDrawBounds(o);if(o.display.visible){if(o instanceof WallSquare||o instanceof DoorSquare){canvas.fillStyle=light_level_to_light[2];rect(bounds.x,bounds.y,bounds.w,bounds.h);canvas.fillStyle=light_level_to_shadow[2];rect(bounds.x,bounds.y,bounds.w,bounds.h)}else{canvas.fillStyle=light_level_to_light[o.light.level];rect(bounds.x,bounds.y,bounds.w,bounds.h);canvas.fillStyle=light_level_to_shadow[o.light.level];rect(bounds.x,bounds.y,bounds.w,bounds.h)}}else{canvas.fillStyle=light_level_to_light[0];rect(bounds.x,bounds.y,bounds.w,bounds.h);canvas.fillStyle=light_level_to_shadow[0];rect(bounds.x,bounds.y,bounds.w,bounds.h);fill(0,0,0,.25);rect(bounds.x,bounds.y,bounds.w,bounds.h)}}drawMobHealth(objects){const HEALTH_BAR_OFFSET=3;const HEALTH_BAR_HEIGHT=4;for(let mob of objects){if(mob instanceof Mob&&mob.components.includes(component_health)&&mob.display.visible){let bounds=this.getDrawBounds(mob);let x=bounds.x;let y=bounds.y;let xoff=this.gridSize*mob.animation.offsetX;let yoff=this.gridSize*mob.animation.offsetY;let healthBarWidth=mob.display.width*this.gridSize-this.gridSize/4;fill(40,0,0);rect(xoff+x+this.gridSize/8,yoff+y-HEALTH_BAR_OFFSET,healthBarWidth,HEALTH_BAR_HEIGHT);healthBarWidth=healthBarWidth*HealthSystem.getHealthPercent(mob);fill(50,220,120);rect(xoff+x+this.gridSize/8,yoff+y-HEALTH_BAR_OFFSET,healthBarWidth,HEALTH_BAR_HEIGHT)}}}decideCameraZoomState(camera){if(camera.combat){if(camera.sprinting){this.changeZoom(camera,this.config.CAMERA_ZOOM_STEPS_SLOW,this.config.CAMERA_COMBAT_ZOOM)}else{this.changeZoom(camera,this.config.CAMERA_ZOOM_STEPS_MEDIUM,this.config.CAMERA_COMBAT_ZOOM)}}else if(camera.sprinting){this.changeZoom(camera,this.config.CAMERA_ZOOM_STEPS_MEDIUM,this.config.CAMERA_SPRINT_ZOOM)}else{this.changeZoom(camera,this.config.CAMERA_ZOOM_STEPS_MEDIUM,this.config.CAMERA_DEFAULT_ZOOM)}}changeZoom(camera,steps,zoom){if(camera.zoom!=zoom){clearTimeout(this.cameraZoomTimer);this.recursiveZoom(camera,this.config.CAMERA_ZOOM_SPEED,zoom,(zoom-camera.zoom)/steps)}}recursiveZoom(camera,speed,zoom,dif){let self=this;if(dif<=0&&zoom-camera.zoom>=0){camera.zoom=zoom;return}else if(dif>0&&zoom-camera.zoom<=0){camera.zoom=zoom;return}else{camera.zoom+=dif;this.cameraZoomTimer=setTimeout(function(){self.recursiveZoom(camera,speed,zoom,dif)},speed)}}shakeCamera(camera,shakeAmount){clearTimeout(this.cameraShakeTimer);this.shakeCameraHelper(camera,random(2*Math.PI),shakeAmount)}shakeCameraHelper(camera,angle,shakeAmount){let self=this;if(shakeAmount>2){camera.shakeOffsetX=shakeAmount*Math.cos(angle);camera.shakeOffsetY=shakeAmount*Math.sin(angle);angle+=random(Math.PI*.8,Math.PI*1.2);if(angle>2*Math.PI){angle=angle-2*Math.PI}this.cameraShakeTimer=setTimeout(function(){self.shakeCameraHelper(camera,angle,shakeAmount*.8)},this.config.CAMERA_SHAKE_SPEED)}else{camera.shakeOffsetX=0;camera.shakeOffsetY=0;this.cameraShakeTimer=undefined}}resize(){let w=document.documentElement.clientWidth;let h=document.documentElement.clientHeight;resizeCanvas(w,h);width=w;height=h;this.centerX=floor(w/2);this.centerY=floor(h/2)}}
class EntitySystem extends GameSystem{constructor(config,player_data,entity_data,boss_data){super([component_actions]);this.config=config;this.playerData=player_data;this.entityData=entity_data;this.bossData=boss_data}handleEvent(engine,eventID,data){switch(eventID){case event_new_player:this.generatePlayer(engine);break;case event_level_generated:for(let ID in this.entities){if(component_controller in this.entities[ID]){this.entities[ID][component_position].x=data.levelOrigin.x;this.entities[ID][component_position].y=data.levelOrigin.y}}break;case event_spawn_enemy_close:this.generateEnemy(engine,engine.getPlayer().position.x-randomInt(-4,4),engine.getPlayer().position.y-randomInt(2,4),engine.getDepth(),this.entityData[random(Object.keys(this.entityData))]);break;}}generatePlayer(engine){let playerClass=class_warrior;let config=this.playerData[playerClass];let animations=Utility.convertAnimationsFromConfig(config.animations);let player=PlayerTemplate(-1,-1,0,1,config.health,config.attackDamage,config.magicDamage,config.armor,config.abilities,animations);engine.createEntity(player);engine.sendEvent(event_player_generated,{},1)}generateEntities(engine,level,depth){let config,entityPosition;let numEntities=floor(random(level.rooms.length*.75,level.rooms.length*1.5));let entities=[];while(numEntities>0){config=this.entityData[random(Object.keys(this.entityData))];entityPosition=this.findSafeSpawnLocation(config.size,entities[depth],level.stairUp,level.map.map);if(entityPosition!=undefined){this.generateEnemy(engine,entityPosition.x,entityPosition.y,depth,config)}numEntities--}}generateEnemy(engine,x,y,depth,config){let animations=Utility.convertAnimationsFromConfig(config.animations);if(this.safeSpawnLocation(x,y,config.size,engine.getEntities(),engine.getMap())){let mob=new Mob(x,y,depth,config,config.actions,animations);engine.createEntity(mob)}}findSafeSpawnLocation(size,entities,stairUp,map){let validSquares=[];for(let i=0;i<map.length;i++){for(let j=0;j<map[0].length;j++){if(abs(stairUp.x-i)+abs(stairUp.y-j)>this.config.SAFE_DISTANCE_FROM_PLAYER&&this.safeSpawnLocation(i,j,size,entities,map)){validSquares.push(map[i][j].position)}}}return random(validSquares)}safeSpawnLocation(x,y,size,entities,map){for(let i=x;i<x+size;i++){for(let j=y;j<y+size;j++){if(map[i][j].components.includes(component_collision)){return false}}}let col=new CollisionComponent(x,y,size);if(entities!==undefined){for(let e of entities){if(Utility.collision(col,e.collision)){return false}}}return true}generateBosses(engine,entities,levels,bossData,depth,player){let config,entityPosition;let numBosses=1;entities.push([]);while(numBosses>0){config=bossData[random(Object.keys(bossData))];entityPosition=this.findSafeSpawnLocation(config.size,entities[depth],player,levels[depth].map.map);if(entityPosition!=undefined){this.generateEnemy(engine,entityPosition.x,entityPosition.y,depth,config)}numEntities--}}updateEntities(engine){}}
class HealthSystem extends GameSystem{constructor(config){super([component_health]);this.config=config}init(engine){this.healthRegenCounter=0;this.healthRegen=true}run(engine){if(this.healthRegen){if(this.healthRegenCounter%this.config.HEALTH_REGEN_TIMER==0){for(let o of this.objects){if(o.health.health<o.health.maxHealth){o.health.health+=2}}this.healthRegenCounter=1}this.healthRegenCounter++}}handleEvent(engine,eventID,data){switch(eventID){case event_entity_take_damage:this.applyDamage(engine,data.entity,data.healthLost);if(data.entity instanceof Player){engine.sendEvent(event_player_take_damage)}break;case event_begin_combat:this.healthRegen=false;break;case event_end_combat:this.healthRegen=true;break;}}applyDamage(engine,object,healthLost){object.health.health-=healthLost;this.checkDead(engine,object)}checkDead(engine,object){if(object.health.health<=0){engine.removeObject(object);if(object instanceof Player){engine.sendEvent(event_game_over)}}}}
class InputSystem extends GameSystem{constructor(){super([component_controller])}init(engine){this.mobSpawnCooldown=0;this.inputs=[];let self=this;document.addEventListener("keydown",function(e){self.keyDown(e)});document.addEventListener("keyup",function(e){self.keyUp(e)})}run(engine){for(let ID in this.entities){console.log(this.entities[ID]);this.setAction(engine,this.entities[ID],this.inputs)}}addObject(object){}keyDown(event){if(!this.inputs.includes(event.keyCode)){this.inputs.unshift(event.keyCode)}}keyUp(event){if(this.inputs.includes(event.keyCode)){this.inputs.splice(this.inputs.indexOf(event.keyCode),1)}}setAction(engine,entity,inputs){if(inputs.length>0){let highestPriority=0;let playerAction=action_none;for(let key of inputs){let action=keyCode_to_action[key];let priority=action_to_priority[action];priority=this.fixPriority(engine,entity,action,priority);if(priority>highestPriority&&entity[component_actions].actions[action].currentCooldown==0){playerAction=action;highestPriority=priority}}entity[component_actions].nextAction=playerAction}else{entity[component_actions].nextAction=action_none}}fixPriority(engine,entity,action,priority){if(entity[component_actions].lastAction==action){if(entity[component_actions].lastActionFailed){return 0}else{return priority-.1}}return priority}actionEqualsLastAction(player,a){return k}}
class LevelSystem extends GameSystem{constructor(config,room_pool,stair_room_pool){super([]);this.config=config;this.roomPool=room_pool;this.stairRoomPool=stair_room_pool}handleEvent(engine,eventID,data){switch(eventID){case event_new_level:let levelOrigin=this.generateLevel(engine,data.depth);engine.sendEvent(event_level_generated,{levelOrigin:levelOrigin},1);break;}}generateLevel(engine,depth){let level=generateLevel(this.config,depth,this.roomPool,this.stairRoomPool);for(let row of level.squares){for(let square of row){engine.createEntity(square)}}return level.level_origin}}
class LightSystem extends GameSystem{constructor(config){super([component_light_emitter]);this.config=config}run(engine){}handleEvent(engine,eventID,data){switch(eventID){case event_spawn_enemy_close:this.light(engine.getMap());break;case event_player_moved:setTimeout(function(){this.light(engine.getMap())}.bind(this),50);break;case event_begin_level:this.light(engine.getMap());break;}}generateTorches(engine,level,rooms){if(DO_LEVEL_GEN){for(let room of rooms){if(room.width>=5&&room.height>=5){let torchChance=this.config.ROOM_TORCH_CHANCE;let fullWalls=[];while(random()<torchChance&&fullWalls.length<3){let dir=randomInt(4);while(fullWalls.includes(dir)){dir=randomInt(4)}fullWalls.push(dir);let x=0,y=0;switch(dir){case direction_up:x=room.left+randomInt(2,room.width-2);y=room.top;dir=direction_down;if(level[x][room.top-1]instanceof DoorSquare){continue}break;case direction_right:x=room.right-1;y=room.top+randomInt(2,room.height-2);dir=direction_left;if(level[room.right][y]instanceof DoorSquare){continue}break;case direction_down:x=room.left+randomInt(2,room.width-2);y=room.bottom-1;dir=direction_up;if(level[x][room.bottom]instanceof DoorSquare){continue}break;case direction_left:x=room.left;y=room.top+randomInt(2,room.height-2);dir=direction_right;if(level[room.left-1][y]instanceof DoorSquare){continue}break;}engine.addObject(new Torch(x,y,dir,engine.getDepth()));torchChance-=this.config.CHANCE_ADDITIONAL_TORCH}}}}}light(map){for(let r of map){for(let s of r){s.light.level=0}}for(let l of this.objects){this.setLightLevel(map[l.position.x][l.position.y],l.lightEmitter.level);for(let octant=0;octant<8;octant++){this.lightTriangle(map,octant,l.position.x,l.position.y,l.lightEmitter.level)}}}setLightLevel(object,range,x,y){let l=x===undefined?range:range-x-floor(y*.4);if(object.light.level<l){object.light.level=l}}lightTriangle(map,octant,sx,sy,range){let x=1;let shadows=[];let squaresVisible=true;while(x<=range&&squaresVisible){squaresVisible=false;let y=0;let curslope=0;while(curslope<=1){if(!VisionSystem.inShadow(x,y,shadows)){squaresVisible=true;let cur=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);if(cur===undefined){break}this.setLightLevel(cur,range,x,y);if(cur.display.opaque){let firstBlocked=this.getFirstBlockedLight(map,octant,x,y,sx,sy,shadows,range);let lastBlocked=this.getBlockedLight(map,octant,x,y,sx,sy,shadows,range);let shadowStart=VisionSystem.slope(firstBlocked.x,firstBlocked.y,BOTTOM_RIGHT);let shadowEnd=VisionSystem.slope(lastBlocked.x,lastBlocked.y,TOP_LEFT);shadows.push([shadowStart,shadowEnd])}else{let above=VisionSystem.getTranslatedSquare(map,octant,x,y+1,sx,sy);if(above!==undefined){}}}y++;curslope=VisionSystem.slope(x,y,CENTER_SQUARE)}x++}}getFirstBlockedLight(map,octant,x,y,sx,sy,shadows,range){let firstBlocked={x:x,y:y};let currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);while(currentBlocked!==undefined&&currentBlocked.display.opaque&&VisionSystem.slope(x,y,CENTER_SQUARE)>0){firstBlocked={x:x,y:y};if(!VisionSystem.inShadow(x,y,shadows)){this.setLightLevel(currentBlocked,range,x,y)}y--;currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy)}return firstBlocked}getBlockedLight(map,octant,x,y,sx,sy,shadows,range){let lastBlocked={x:x,y:y};let currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);while(currentBlocked!==undefined&&currentBlocked.display.opaque&&VisionSystem.slope(x,y,BOTTOM_RIGHT)<1){lastBlocked={x:x,y:y};if(!VisionSystem.inShadow(x,y,shadows)){this.setLightLevel(currentBlocked,range,x,y)}y++;currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy)}return lastBlocked}}
class MovementSystem extends GameSystem{constructor(){super([component_position,component_collision,component_actions])}init(){this.movementFrozen=true}run(engine){if(!this.movementFrozen){for(let entity of this.objects){switch(entity.actions.currentAction){case action_move_up:case action_move_right:case action_move_down:case action_move_left:this.moveFromAction(engine,entity,this.objects);break;}}}}handleEvent(engine,eventID,data){switch(eventID){case event_level_loaded:let player=engine.getPlayer();if(player.depth.depth<=engine.getDepth()){this.fixPlayerPosition(player,data.stairUp)}else if(player.depth.depth>engine.getDepth()){this.fixPlayerPosition(player,data.stairDown)}player.depth.depth=engine.getDepth();break;case event_up_level:case event_down_level:this.movementFrozen=true;break;case event_begin_level:this.movementFrozen=false;break;}}fixPlayerPosition(player,stair){player.position.x=stair.x;player.position.y=stair.y;player.collision.top=stair.y;player.collision.right=stair.x+player.collision.width;player.collision.bottom=stair.y+player.collision.height;player.collision.left=stair.x}move(engine,entity,objects,destination){if(destination!=undefined&&MovementSystem.validMove(engine,entity,destination)){entity.direction.direction=action_to_direction[entity.actions.currentAction];entity.position.x=destination.x;entity.position.y=destination.y;entity.collision.top=destination.y;entity.collision.right=destination.x+entity.collision.width;entity.collision.bottom=destination.y+entity.collision.height;entity.collision.left=destination.x;engine.sendEvent(event_successful_action,{'action':entity.actions.currentAction,'entity':entity});return true}else{entity.direction.direction=action_to_direction[entity.actions.currentAction];entity.actions.lastAction=entity.actions.currentAction;entity.actions.currentAction=action_none;return false}}moveFromAction(engine,entity,objects){let destination=MovementSystem.getDestination(entity,entity.actions.currentAction);if(this.move(engine,entity,objects,destination)){if(entity instanceof Player){this.playerWalkEvents(engine,entity)}else if(entity instanceof Mob){engine.sendEvent(event_entity_moved)}}}playerWalkEvents(engine,player){let square=engine.getMap()[player.position.x][player.position.y];if(square instanceof StairUpSquare&&engine.getDepth()>0){engine.sendEvent(event_up_level)}else if(square instanceof StairDownSquare){engine.sendEvent(event_down_level)}else{if(square instanceof DoorSquare){square.open()}engine.sendEvent(event_player_moved)}}static getDestination(entity,movement){switch(movement){case action_move_up:return new PositionComponent(entity.position.x,entity.position.y-1);case action_move_right:return new PositionComponent(entity.position.x+1,entity.position.y);case action_move_down:return new PositionComponent(entity.position.x,entity.position.y+1);case action_move_left:return new PositionComponent(entity.position.x-1,entity.position.y);default:console.log('No direction');return undefined;}}static validMove(engine,entity,destination){let validMove=true;for(let i=destination.x;i<destination.x+entity.collision.width;i++){for(let j=destination.y;j<destination.y+entity.collision.height;j++){if(!Utility.walkable(i,j,engine.getMap(),entity,engine.getEntities())){validMove=false}}}return validMove}}
function MusicManager(){let music=MUSIC;MUSIC=null;let currentLoop=music[0];let loop=function(){currentLoop.ended=function(){currentLoop=playSound(music[randomInt(music.length)]);loop()}};let init=function(){}()}
class SprintSystem extends GameSystem{constructor(config){super([component_sprint]);this.config=config}init(engine){for(let entity of this.objects){this.resetSprintCounter(entity)}}run(engine){for(let entity of this.objects){if(entity.sprint.sprinting){if(this.sprintTimerExpired(entity,this.config.SPRINT_RESET_TIME_SPRINTING)){this.stopSprinting(engine,entity)}}else{if(this.sprintTimerExpired(entity,this.config.SPRINT_RESET_TIME_WALKING)){this.resetSprintCounter(entity)}}}}handleEvent(engine,eventID,data){switch(eventID){case event_successful_action:if(data.entity.components.includes(component_sprint)){if(Utility.isMovementAction(data.action)){if(data.entity.sprint.sprinting){this.handleSprinting(engine,data.entity)}else{this.decrementSprintCounter(engine,data.entity,data.action)}}else{if(data.entity.sprint.sprinting){this.stopSprinting(engine,data.entity)}else{this.resetSprintCounter(data.entity)}}}break;case event_up_level:case event_down_level:this.stopAllSprinting(engine);break;}}handleSprinting(engine,entity){if(this.sprintTimerExpired(entity,this.config.SPRINT_RESET_TIME_SPRINTING)){this.stopSprinting(engine,entity)}else{if(entity.actions.busy>entity.sprint.sprintSpeed){entity.actions.busy=entity.sprint.sprintSpeed}for(let a in entity.actions.actions){if(entity.actions.actions[a].currentCooldown>entity.sprint.sprintSpeed){entity.actions.actions[a].currentCooldown=entity.sprint.sprintSpeed+1}}entity.sprint.lastMoveTime=millis()}}startSprinting(engine,entity){if(entity instanceof Player){engine.sendEvent(event_player_start_sprinting)}entity.sprint.sprinting=true;this.resetSprintCounter(entity)}stopSprinting(engine,entity){if(entity instanceof Player){engine.sendEvent(event_player_stop_sprinting)}entity.sprint.sprinting=false;this.resetSprintCounter(entity)}decrementSprintCounter(engine,entity){if(entity.sprint.sprinting){entity.sprint.lastMoveTime=millis()}else if(entity.sprint.sprintCounter>0){if(this.sprintTimerExpired(entity,this.config.SPRINT_RESET_TIME_WALKING)){this.resetSprintCounter(entity)}else{entity.sprint.sprintCounter--;entity.sprint.lastMoveTime=millis()}}else{this.startSprinting(engine,entity)}}resetSprintCounter(entity){entity.sprint.sprintCounter=entity.sprint.movesBeforeSprinting;entity.sprint.lastMoveTime=millis()}sprintTimerExpired(entity,time){return millis()-entity.sprint.lastMoveTime>time}stopAllSprinting(engine){for(let entity of this.objects){this.stopSprinting(engine,entity)}}}
class UISystem extends GameSystem{constructor(config,images){super([component_controller]);this.config=config;this.images=images}init(engine){this.gameCanvas=document.getElementById('game');this.titleScreen=document.getElementById('titleScreen');this.helpScreen=document.getElementById('helpScreen');this.levelChangeScreen=document.getElementById('levelChangeScreen');this.levelChangeText=document.getElementById('levelChangeText');this.gameOverScreen=document.getElementById('gameOverScreen');this.resetScreen(this.titleScreen);this.resetScreen(this.helpScreen);this.resetScreen(this.levelChangeScreen);this.resetScreen(this.gameOverScreen);this.drawHearts=false;this.heartCanvas=document.getElementById('heartCanvas').getContext('2d');document.getElementById('heartCanvas').style.left=''+this.config.HEART_OFFSET+'px';document.getElementById('heartCanvas').style.top=''+this.config.HEART_OFFSET+'px'}run(engine){this.drawPlayerHealth(this.heartCanvas,this.entities[Object.keys(this.entities)[0]])}handleEvent(engine,eventID,data){switch(eventID){case event_new_game:this.showLevelChangeScreen(0);break;case event_title_screen:this.showTitleScreen(engine);break;case event_down_level:this.showLevelChangeScreen(data.depth);break;case event_begin_level:this.hideLevelChangeScreen(engine);break;case event_player_generated:this.fixHeartCanvasSize(this.entities[Object.keys(this.entities)[0]]);break;case event_game_over:this.showGameOverScreen(engine);break;}}addObject(object){super.addObject(object)}showTitleScreen(engine){this.fadeScreenIn(this.titleScreen,this.config.TITLE_FADE_IN_TIME);let self=this;document.getElementById('playButton').addEventListener('click',function(){self.fadeScreenOut(self.titleScreen,self.config.TITLE_FADE_OUT_TIME);engine.sendEvent(event_new_game)});document.getElementById('helpButton').addEventListener('click',function(){self.blurScreen(self.titleScreen,self.config.TITLE_BLUR_AMOUNT,self.config.TITLE_FADE_OUT_TIME);self.fadeScreenIn(self.helpScreen,self.config.TITLE_FADE_IN_TIME);document.getElementById('returnToTitleScreenButton').addEventListener('click',function(){self.unblurScreen(self.titleScreen,self.config.TITLE_FADE_IN_TIME);self.fadeScreenOut(self.helpScreen,self.config.TITLE_FADE_OUT_TIME)})})}showLevelChangeScreen(depth){this.levelChangeText.innerHTML='Entering Level '+(depth+1);this.fadeScreenIn(this.levelChangeScreen,this.config.LEVEL_CHANGE_FADE_IN_TIME);this.drawHearts=false}hideLevelChangeScreen(engine){this.fadeScreenOut(this.levelChangeScreen,this.config.LEVEL_CHANGE_FADE_OUT_TIME);this.drawHearts=true}showGameOverScreen(engine){this.fadeScreenIn(this.gameOverScreen,this.config.GAME_OVER_FADE_IN_TIME);this.blurScreen(this.gameCanvas,this.config.GAME_BLUR_AMOUNT,this.config.GAME_OVER_FADE_IN_TIME);this.hideHearts();let self=this;document.getElementById('playAgainButton').addEventListener('click',function(){self.fadeScreenOut(self.gameOverScreen,self.config.GAME_OVER_FADE_OUT_TIME);self.unblurScreen(self.gameCanvas,self.config.GAME_OVER_FADE_OUT_TIME);engine.sendEvent(event_reset_game);engine.sendEvent(event_new_game,undefined,20)})}fadeScreenIn(screen,milliseconds){screen.style.transitionDuration=milliseconds+'ms';screen.style.opacity='1';screen.style.visibility='visible'}fadeScreenOut(screen,milliseconds){screen.style.transitionDuration=milliseconds+'ms';screen.style.opacity='0';setTimeout(function(){screen.style.visibility='hidden'},milliseconds)}blurScreen(screen,blurAmount,milliseconds){screen.style.transitionDuration=milliseconds+'ms';screen.style.filter='blur('+blurAmount+'px)'}unblurScreen(screen,milliseconds){screen.style.transitionDuration=milliseconds+'ms';screen.style.filter='blur(0)'}resetScreen(screen){screen.style.opacity='0';screen.style.visibility='hidden'}hideHearts(){this.heartCanvas.clearRect(0,0,heartCanvas.width,heartCanvas.height);this.drawHearts=false}drawPlayerHealth(heartCanvas,player){if(this.drawHearts){let x=0,y=0;for(let i=1;i<=Utility.getMaxHeartAmount(player);i++){if(i<=Utility.getCurrentHeartAmount(player)){heartCanvas.drawImage(this.images[ui_heart],x*this.config.HEART_SIZE+x*this.config.HEART_SPACING,y*this.config.HEART_SIZE,this.config.HEART_SIZE,this.config.HEART_SIZE)}else{heartCanvas.drawImage(this.images[ui_empty_heart],x*this.config.HEART_SIZE+x*this.config.HEART_SPACING,y*this.config.HEART_SIZE,this.config.HEART_SIZE,this.config.HEART_SIZE)}x++;if(i%this.config.HEARTS_PER_ROW==0){y++;x=0}}}}fixHeartCanvasSize(player){let heartCanvas=document.getElementById('heartCanvas');let heartAmount=Utility.getMaxHeartAmount(player);let w=(this.config.HEART_SPACING+this.config.HEART_SIZE)*this.config.HEARTS_PER_ROW;let h=(this.config.HEART_SPACING+this.config.HEART_SIZE)*ceil(heartAmount/this.config.HEARTS_PER_ROW);heartCanvas.width=w;heartCanvas.height=h}}
class VisionSystem extends GameSystem{constructor(config){super([component_display,component_position]);this.config=config}init(engine){}run(engine){}handleEvent(engine,eventID,data){switch(eventID){case event_player_moved:case event_entity_moved:case event_begin_level:case event_spawn_enemy_close:this.vision(engine.getMap(),engine.getPlayer());break;}}vision(map,player){for(let r of map){for(let s of r){s.display.visible=false}}player.display.visible=true;map[player.position.x][player.position.y].display.visible=true;map[player.position.x][player.position.y].display.discovered=true;for(let octant=0;octant<8;octant++){this.playerSightTriangle(map,octant,player.position.x,player.position.y,this.config.PLAYER_VISION_RANGE)}for(let e of this.objects){if(map[e.position.x][e.position.y].display.visible){e.display.visible=true;e.display.discovered=true}else{e.display.visible=false}}}playerSightTriangle(map,octant,sx,sy,range){let x=1;let shadows=[];let squaresVisible=true;while(x<=range&&squaresVisible){squaresVisible=false;let y=0;let curslope=0;while(curslope<=1){if(!VisionSystem.inShadow(x,y,shadows)){squaresVisible=true;let cur=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);if(cur===undefined){break}cur.display.visible=true;cur.display.discovered=true;if(cur.display.opaque){let firstBlocked=this.getFirstBlocked(map,octant,x,y,sx,sy,shadows);let lastBlocked=this.getBlocked(map,octant,x,y,sx,sy,shadows);let shadowStart=VisionSystem.slope(firstBlocked.x,firstBlocked.y,BOTTOM_RIGHT);let shadowEnd=VisionSystem.slope(lastBlocked.x,lastBlocked.y,TOP_LEFT);shadows.push([shadowStart,shadowEnd])}else{let above=VisionSystem.getTranslatedSquare(map,octant,x,y+1,sx,sy);if(above!==undefined){above.display.discovered=true}}}y++;curslope=VisionSystem.slope(x,y,CENTER_SQUARE)}x++}}getFirstBlocked(map,octant,x,y,sx,sy,shadows){let firstBlocked={x:x,y:y};let currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);while(currentBlocked!==undefined&&currentBlocked.display.opaque&&VisionSystem.slope(x,y,CENTER_SQUARE)>0){firstBlocked={x:x,y:y};if(!VisionSystem.inShadow(x,y,shadows)){currentBlocked.display.visible=true;currentBlocked.display.discovered=true}y--;currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy)}return firstBlocked}getBlocked(map,octant,x,y,sx,sy,shadows){let lastBlocked={x:x,y:y};let currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy);while(currentBlocked!==undefined&&currentBlocked.display.opaque&&VisionSystem.slope(x,y,BOTTOM_RIGHT)<1){lastBlocked={x:x,y:y};if(!VisionSystem.inShadow(x,y,shadows)){currentBlocked.display.visible=true;currentBlocked.display.discovered=true}y++;currentBlocked=VisionSystem.getTranslatedSquare(map,octant,x,y,sx,sy)}return lastBlocked}static slope(x,y,CORNER){switch(CORNER){case CENTER_SQUARE:return y/x;case TOP_LEFT:if(x==0){return 1}return(y+.5)/(x-.5);case BOTTOM_RIGHT:return max(0,(y-.5)/(x+.5));case UPPER_BOUND:return(y+PERM)/(x-PERM);case LOWER_BOUND:return(y-PERM)/(x+PERM);}return 1}static inShadow(x,y,shadows){let BR=VisionSystem.slope(x,y,BOTTOM_RIGHT),TL=VisionSystem.slope(x,y,TOP_LEFT);for(let s of shadows){if(BR>=s[0]&&TL<=s[1])return true;else if(BR>=s[0]&&BR<=s[1]&&TL>=s[1]){BR=s[1]}else if(BR<=s[0]&&TL>=s[0]&&TL<=s[1]){TL=s[0]}}return false}static startSquare(x,slopeStart){if(slopeStart==0)return 0;return ceil(x*slopeStart)}static getTranslatedSquare(map,octant,x,y,sx,sy){let uc=VisionSystem.translate(octant,x,y);let fx=sx+uc[0];let fy=sy-uc[1];if(Utility.positionInBounds(new PositionComponent(fx,fy),map.length)){return map[fx][fy]}return undefined}static translate(octant,x,y){return[x*xxcomp[octant]+y*xycomp[octant],x*yxcomp[octant]+y*yycomp[octant]]}static isOpaque(square){return square.display.opaque}static lineOfSight(engine,p1,p2){const LOS_PERM=.5;let map=engine.getMap();if(p1==p2){return true}else if(p1.y==p2.y){let start=p1.x<p2.x?p1:p2;let end=start==p1?p2:p1;let curSquare=map[start.x][start.y];for(let x=start.x;x<=end.x;x++){if(VisionSystem.isOpaque(map[x][start.y])){return false}}}else if(p1.x==p2.x){let start=p1.y<p2.y?p1:p2;let end=start==p1?p2:p1;let curSquare=map[start.x][start.y];for(let y=start.y;y<=end.y;y++){if(VisionSystem.isOpaque(map[start.x][y])){return false}}}else{let start,end,x,y,slope,curSquare,direction;let difX=abs(p1.x-p2.x);let difY=abs(p1.y-p2.y);if(difX<=difY){start=p1.x<=p2.x?p1:p2;end=start==p1?p2:p1;slope=abs(end.x-start.x)/abs(end.y-start.y);direction=start.y<end.y?1:-1;x=start.x;y=start.y;let error=0;while(x<=end.x){if(VisionSystem.isOpaque(map[x][y])){return false}if(y==end.y){break}y+=direction;error+=slope;if(error>.5){x++;error-=1}}}else{start=p1.y<=p2.y?p1:p2;end=start==p1?p2:p1;slope=abs(end.y-start.y)/abs(end.x-start.x);direction=start.x<end.x?1:-1;x=start.x;y=start.y;let error=0;while(y<=end.y){if(VisionSystem.isOpaque(map[x][y])){return false}if(x==end.x){break}x+=direction;error+=slope;if(error>.5){y++;error-=1}}}}return true}}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy9jb25zdGFudHMuanMiLCJqcy9HYW1lU3lzdGVtLmpzIiwianMvUG9wcHNFbmdpbmUuanMiLCJqcy9VdGlsaXR5LmpzIiwianMvYXBwLmpzIiwianMvY29tcG9uZW50cy9Db21wb25lbnRzLmpzIiwianMvZW50aXRpZXMvRW50aXRpdHlUZW1wbGF0ZXMuanMiLCJqcy9lbnRpdGllcy9HYW1lRW50aXR5LmpzIiwianMvaXRlbXMvSXRlbS5qcyIsImpzL2xldmVsZ2VuL0xldmVsR2VuZXJhdG9yLmpzIiwianMvbGV2ZWxnZW4vUm9vbS5qcyIsImpzL3N5c3RlbXMvQUlTeXN0ZW0uanMiLCJqcy9zeXN0ZW1zL0FiaWxpdHlTeXN0ZW0uanMiLCJqcy9zeXN0ZW1zL0FjdGlvblN5c3RlbS5qcyIsImpzL3N5c3RlbXMvQW5pbWF0aW9uU3lzdGVtLmpzIiwianMvc3lzdGVtcy9BdWRpb1N5c3RlbS5qcyIsImpzL3N5c3RlbXMvQ2FtZXJhU3lzdGVtLmpzIiwianMvc3lzdGVtcy9Db21iYXRTeXN0ZW0uanMiLCJqcy9zeXN0ZW1zL0Rpc3BsYXlTeXN0ZW0uanMiLCJqcy9zeXN0ZW1zL0VudGl0eVN5c3RlbS5qcyIsImpzL3N5c3RlbXMvSGVhbHRoU3lzdGVtLmpzIiwianMvc3lzdGVtcy9JbnB1dFN5c3RlbS5qcyIsImpzL3N5c3RlbXMvTGV2ZWxTeXN0ZW0uanMiLCJqcy9zeXN0ZW1zL0xpZ2h0U3lzdGVtLmpzIiwianMvc3lzdGVtcy9Nb3ZlbWVudFN5c3RlbS5qcyIsImpzL3N5c3RlbXMvTXVzaWNTeXN0ZW0uanMiLCJqcy9zeXN0ZW1zL1NwcmludFN5c3RlbS5qcyIsImpzL3N5c3RlbXMvVUlTeXN0ZW0uanMiLCJqcy9zeXN0ZW1zL1Zpc2lvblN5c3RlbS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxLQUFNLGNBQWUsS0FBckIsQ0FDQSxLQUFNLHFCQUFzQixFQUE1QixDQUNBLEtBQU0sY0FBZSxJQUFyQixDQUNBLEtBQU0sWUFBYSxJ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VCxDQUFrQyxVQUFVLENBQTVDLENBQStDLFVBQVUsQ0FBekQsQ0FDUCxDQUVELFFBQVMsb0JBQVQsQ0FBNkIsS0FBN0IsQ0FBb0MsSUFBcEMsQ0FBMEMsQ0FJekMsT0FBTyxNQUFNLE1BQWIsRUFDQyxJQUFLLEVBQUwsQ0FDQyxNQUFNLENBQU4sQ0FBVSxNQUFNLEtBQUssQ0FBWCxDQUFWLENBQ0EsTUFBTSxDQUFOLENBQVUsTUFBTSxLQUFLLENBQVgsQ0FBVixDQUNBLE1BQ0QsSUFBSyxFQUFMLENBQ0MsTUFBTSxDQUFOLENBQVUsRUFBSSxNQUFNLEtBQUssQ0FBWCxDQUFkLENBQ0EsTUFBTSxDQUFOLENBQVUsTUFBTSxLQUFLLENBQVgsQ0FBVixDQUNBLE1BQ0QsSUFBSyxFQUFMLENBQ0MsTUFBTSxDQUFOLENBQVUsRUFBSSxNQUFNLEtBQUssQ0FBWCxDQUFkLENBQ0EsTUFBTSxDQUFOLENBQVUsTUFBTSxLQUFLLENBQVgsQ0FBVixDQUNBLE1BQ0QsSUFBSyxFQUFMLENBQ0MsTUFBTSxDQUFOLENBQVUsRUFBSSxNQUFNLEtBQUssQ0FBWCxDQUFkLENBQ0EsTUFBTSxDQUFOLENBQVUsRUFBSSxNQUFNLEtBQUssQ0FBWCxDQUFkLENBQ0EsTUFDRCxJQUFLLEVBQUwsQ0FDQyxNQUFNLENBQU4sQ0FBVSxFQUFJLE1BQU0sS0FBSyxDQUFYLENBQWQsQ0FDQSxNQUFNLENBQU4sQ0FBVSxFQUFJLE1BQU0sS0FBSyxDQUFYLENBQWQsQ0FDQSxNQUNELElBQUssRUFBTCxDQUNDLE1BQU0sQ0FBTixDQUFVLEVBQUksTUFBTSxLQUFLLENBQVgsQ0FBZCxDQUNBLE1BQU0sQ0FBTixDQUFVLEVBQUksTUFBTSxLQUFLLENBQVgsQ0FBZCxDQUNBLE1BQ0QsSUFBSyxFQUFMLENBQ0MsTUFBTSxDQUFOLENBQVUsTUFBTSxLQUFLLENBQVgsQ0FBVixDQUNBLE1BQU0sQ0FBTixDQUFVLEVBQUksTUFBTSxLQUFLLENBQVgsQ0FBZCxDQUNBLE1BQ0QsSUFBSyxFQUFMLENBQ0MsTUFBTSxDQUFOLENBQVUsTUFBTSxLQUFLLENB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QUFRLElBQUksSUFBSSxDQUFKLENBQVEsTUFBTSxDQUFsQixFQUF1QixJQUFJLElBQUksQ0FBSixDQUFRLE1BQU0sQ0FBbEIsQ0FBL0IsQ0FDQSxVQUFhLE1BQU0sQ0FBTixDQUFVLElBQUksQ0FBZixDQUFvQixDQUFwQixDQUF3QixDQUFDLENBQXJDLENBQ0EsRUFBSSxNQUFNLENBQVYsQ0FDQSxFQUFJLE1BQU0sQ0FBVixDQUVBLEdBQUksT0FBUSxDQUFaLENBRUEsTUFBTSxHQUFLLElBQUksQ0FBZixDQUFrQixDQUNqQixHQUFHLGFBQWEsUUFBYixDQUFzQixJQUFJLENBQUosRUFBTyxDQUFQLENBQXRCLENBQUgsQ0FBcUMsQ0FDcEMsTUFBTyxNQUNQLENBQ0QsR0FBRyxHQUFLLElBQUksQ0FBWixDQUFlLENBQ2QsS0FDQSxDQUNELEdBQUssU0FBTCxDQUNBLE9BQVMsS0FBVCxDQUNBLEdBQUcsTUFBUSxFQUFYLENBQWUsQ0FDZCxJQUNBLE9BQVMsQ0FDVCxDQUNELENBQ0QsQ0FDRCxDQUNELE1BQU8sS0FDUCxDQTNQb0MiLCJmaWxlIjoiYnVuZGxlLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vY29uc3RhbnRzXG5jb25zdCBUSVRMRV9TQ1JFRU4gPSBmYWxzZTtcbmNvbnN0IExPQURJTkdfU0NSRUVOX1RJTUUgPSAyMDtcbmNvbnN0IERPX0xFVkVMX0dFTiA9IHRydWU7XG5jb25zdCBERUJVR19NT0RFID0gdHJ1ZTtcbmNvbnN0IFVQID0gMCwgUklHSFQgPSAxLCBET1dOID0gMiwgTEVGVCA9IDM7XG5jb25zdCBPUEVOID0gMCwgQ0xPU0VEID0gMTtcbmNvbnN0IGVudGl0eV9wbGF5ZXIgPSAwLCBlbnRpdHlfbW9iID0gMTtcbmNvbnN0IHBoeXNpY2FsX3NvbGlkID0gdHJ1ZSwgcGh5c2ljYWxfbm9uX3NvbGlkID0gZmFsc2U7XG5jb25zdCBkaXNwbGF5X29wYXF1ZSA9IHRydWUsIGRpc3BsYXlfdHJhbnNwYXJlbnQgPSBmYWxzZTtcbmNvbnN0IGVudGl0eV9hY3RpdmVfcmFuZ2UgPSAyMDtcblxuLy92aXNpb25cbmNvbnN0IENFTlRFUl9TUVVBUkUgPSAwLCBUT1BfTEVGVCA9IDEsIEJPVFRPTV9SSUdIVCA9IDIsIFVQUEVSX0JPVU5EID0gMywgTE9XRVJfQk9VTkQgPSA0O1xuY29uc3QgUEVSTSA9IC41O1xuXG5jb25zdCB4eGNvbXAgPSBbIDEsIDAsIDAsIC0xLCAtMSwgMCwgMCwgMSBdO1xuY29uc3QgeHljb21wID0gWyAwLCAxLCAtMSwgMCwgMCwgLTEsIDEsIDAgXTtcbmNvbnN0IHl4Y29tcCA9IFsgMCwgMSwgMSwgMCwgMCwgLTEsIC0xLCAwIF07XG5jb25zdCB5eWNvbXAgPSBbIDEsIDAsIDAsIDEsIC0xLCAwLCAwLCAtMSBdO1xuXG4vLyBsaWdodHNcbmNvbnN0IGxpZ2h0X3JhbmdlID0gMTAsIGxpZ2h0X21heCA9IGxpZ2h0X3JhbmdlIC0gMTtcbmNvbnN0IGxpZ2h0X2ludGVuc2l0eSA9IC4yNSwgbGlnaHRfcmVkID0gMjU1LCBsaWdodF9ncmVlbiA9IDE5MCwgbGlnaHRfYmx1ZSA9IDA7XG5jb25zdCBzaGFkb3dfaW50ZW5zaXR5ID0gLjQwLCBzaGFkb3dfc3RvcCA9IDQsIHNoYWRvd19yZWQgPSAxMCwgc2hhZG93X2dyZWVuID0gMCwgc2hhZG93X2JsdWUgPSA0MDtcbmNvbnN0IGxpZ2h0X2ZpbGxfc3RyaW5nID0gJ3JnYmEoJyArIGxpZ2h0X3JlZCArICcsJyArIGxpZ2h0X2dyZWVuICsgJywnICsgbGlnaHRfYmx1ZSArICcsJyArIGxpZ2h0X2ludGVuc2l0eSArICcpJztcblxuY29uc3QgbGlnaHRfbGV2ZWxfdG9fbGlnaHQgPSBbXTtcbmNvbnN0IGxpZ2h0X2xldmVsX3RvX3NoYWRvdyA9IFtdO1xuZm9yKGxldCBpID0gMDsgaSA8IGxpZ2h0X3JhbmdlOyBpKyspIHtcblx0bGlnaHRfbGV2ZWxfdG9fbGlnaHQudW5zaGlmdCgncmdiYSgnICtcblx0XHRmbG9vcihsaWdodF9yZWQgLSAoKGxpZ2h0X3JlZCAvIChsaWdodF9yYW5nZSAtIDEpKSAqIGkpKSArICcsJyArXG5cdFx0Zmxvb3IobGlnaHRfZ3JlZW4gLSAoKGxpZ2h0X2dyZWVuIC8gKGxpZ2h0X3JhbmdlIC0gMSkpICogaSkpICsgJywnICtcblx0XHRmbG9vcihsaWdodF9ibHVlIC0gKChsaWdodF9ibHVlIC8gKGxpZ2h0X3JhbmdlIC0gMSkpICogaSkpICsgJywnICtcblx0XHQoZmxvb3IoMTAwICogKGxpZ2h0X2ludGVuc2l0eSAtICgobGlnaHRfaW50ZW5zaXR5IC8gKGxpZ2h0X3JhbmdlIC0gMSkpICogaSkpKSAvIDEwMCkgKyAnKScpO1xuXHRpZihpID4gc2hhZG93X3N0b3ApIHtcblx0XHRsaWdodF9sZXZlbF90b19zaGFkb3cucHVzaCgncmdiYSgwLDAsMCwwKScpO1xuXHR9XG5cdGVsc2Uge1xuXHRcdGxpZ2h0X2xldmVsX3RvX3NoYWRvdy5wdXNoKCdyZ2JhKCcgK1xuXHRcdFx0Zmxvb3Ioc2hhZG93X3JlZCAtICgoc2hhZG93X3JlZCAvIHNoYWRvd19zdG9wKSAqIGkpKSArICcsJyArXG5cdFx0XHRmbG9vcihzaGFkb3dfZ3JlZW4gLSAoKHNoYWRvd19ncmVlbiAvIHNoYWRvd19zdG9wKSAqIGkpKSArICcsJyArXG5cdFx0XHRmbG9vcihzaGFkb3dfYmx1ZSAtICgoc2hhZG93X2JsdWUgLyBzaGFkb3dfc3RvcCkgKiBpKSkgKyAnLCcgK1xuXHRcdFx0KGZsb29yKDEwMCAqIChzaGFkb3dfaW50ZW5zaXR5IC0gKChzaGFkb3dfaW50ZW5zaXR5IC8gc2hhZG93X3N0b3ApICogaSkpKSAvIDEwMCkgKyAnKScpO1xuXHR9XG59XG5cbmxpZ2h0X2xldmVsX3RvX2xpZ2h0W2xpZ2h0X2xldmVsX3RvX2xpZ2h0Lmxlbmd0aCAtIDFdID0gbGlnaHRfbGV2ZWxfdG9fbGlnaHRbbGlnaHRfbGV2ZWxfdG9fbGlnaHQubGVuZ3RoIC0gMl07XG5cbmNvbnN0IGxpZ2h0X2xldmVsX3BsYXllciA9IDMsIGxpZ2h0X2xldmVsX3RvcmNoID0gbGlnaHRfbWF4IC0gMjtcblxuLy8gY29uc29sZS5sb2cobGlnaHRfbGV2ZWxfdG9fbGlnaHQpO1xuLy8gY29uc29sZS5sb2cobGlnaHRfbGV2ZWxfdG9fc2hhZG93KTtcblxuLy9kaXJlY3Rpb25cbmNvbnN0IGRpcmVjdGlvbl91cCA9IDAsIGRpcmVjdGlvbl9yaWdodCA9IDEsIGRpcmVjdGlvbl9kb3duID0gMiwgZGlyZWN0aW9uX2xlZnQgPSAzO1xuXG4vL3NxdWFyZSBjb25zdGFudHNcbmNvbnN0IHNxdWFyZV9mbG9vciA9IDAsIHNxdWFyZV93YWxsID0gMSwgc3F1YXJlX2Rvb3IgPSAyLCBzcXVhcmVfc3RhaXIgPSAzLCBzcXVhcmVfbGV2ZWxfb3JpZ2luID0gNDtcblxuLy9pbnRlcmFjdGFibGVzXG5jb25zdCBpbnRlcmFjdGFibGVfZG9vciA9IDAsIGludGVyYWN0YWJsZV9zdGFpciA9IDE7XG5cbi8vdGV4dHVyZSBjb25zdGFudHNcbmNvbnN0IHRleHR1cmVfZmxvb3IgPSAwLFxuXHR0ZXh0dXJlX3dhbGwgPSAxLFxuXHR0ZXh0dXJlX2Rvb3JfY2xvc2VkID0gMixcblx0dGV4dHVyZV9kb29yX29wZW4gPSAzLFxuXHR0ZXh0dXJlX3N0YWlyID0gNixcblx0dGV4dHVyZV9sZXZlbF9vcmlnaW4gPSA3O1xuXG5jb25zdCB0ZXh0dXJlX2RlZmF1bHQgPSAwLFxuXHR0ZXh0dXJlX2FsdDEgPSAxLFxuXHR0ZXh0dXJlX2FsdDIgPSAyLFxuXHR0ZXh0dXJlX2FsdDMgPSAzLFxuXHR0ZXh0dXJlX2FsdDQgPSA0LFxuXHR0ZXh0dXJlX2FsdDUgPSA1LFxuXHR0ZXh0dXJlX2FsdDYgPSA2LFxuXHR0ZXh0dXJlX2FsdDcgPSA3LFxuXHR0ZXh0dXJlX2FsdDggPSA4LFxuXHR0ZXh0dXJlX2FsdDkgPSA5LFxuXHR0ZXh0dXJlX3NpZGVfdG9wID0gMTAsXG5cdHRleHR1cmVfc2lkZV9yaWdodCA9IDExLFxuXHR0ZXh0dXJlX3NpZGVfYm90dG9tID0gMTIsXG5cdHRleHR1cmVfc2lkZV9sZWZ0ID0gMTMsXG5cdHRleHR1cmVfaW5fY29ybmVyX3RvcF9yaWdodCA9IDE0LFxuXHR0ZXh0dXJlX2luX2Nvcm5lcl9ib3R0b21fcmlnaHQgPSAxNSxcblx0dGV4dHVyZV9pbl9jb3JuZXJfYm90dG9tX2xlZnQgPSAxNixcblx0dGV4dHVyZV9pbl9jb3JuZXJfdG9wX2xlZnQgPSAxNyxcblx0dGV4dHVyZV9vdXRfY29ybmVyX3RvcF9yaWdodCA9IDE4LFxuXHR0ZXh0dXJlX291dF9jb3JuZXJfYm90dG9tX3JpZ2h0ID0gMTksXG5cdHRleHR1cmVfb3V0X2Nvcm5lcl9ib3R0b21fbGVmdCA9IDIwLFxuXHR0ZXh0dXJlX291dF9jb3JuZXJfdG9wX2xlZnQgPSAyMSxcblx0dGV4dHVyZV9VX3RvcCA9IDIyLFxuXHR0ZXh0dXJlX1VfcmlnaHQgPSAyMyxcblx0dGV4dHVyZV9VX2JvdHRvbSA9IDI0LFxuXHR0ZXh0dXJlX1VfbGVmdCA9IDI1LFxuXHR0ZXh0dXJlX2Nyb3NzID0gMjYsXG5cdHRleHR1cmVfbnVtX2FsdHMgPSAyNztcblxuXG5jb25zdCB0ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvbiA9IFtdO1xudGV4dHVyZV9wcm9iYWJpbGl0eV9kaXN0cmlidXRpb25bMF0gPSA1NTtcbnRleHR1cmVfcHJvYmFiaWxpdHlfZGlzdHJpYnV0aW9uWzFdID0gdGV4dHVyZV9wcm9iYWJpbGl0eV9kaXN0cmlidXRpb25bMF0gKyAzNDtcbnRleHR1cmVfcHJvYmFiaWxpdHlfZGlzdHJpYnV0aW9uWzJdID0gdGV4dHVyZV9wcm9iYWJpbGl0eV9kaXN0cmlidXRpb25bMV0gKyAyMTtcbnRleHR1cmVfcHJvYmFiaWxpdHlfZGlzdHJpYnV0aW9uWzNdID0gdGV4dHVyZV9wcm9iYWJpbGl0eV9kaXN0cmlidXRpb25bMl0gKyAxMztcbnRleHR1cmVfcHJvYmFiaWxpdHlfZGlzdHJpYnV0aW9uWzRdID0gdGV4dHVyZV9wcm9iYWJpbGl0eV9kaXN0cmlidXRpb25bM10gKyA4O1xudGV4dHVyZV9wcm9iYWJpbGl0eV9kaXN0cmlidXRpb25bNV0gPSB0ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvbls0XSArIDU7XG50ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvbls2XSA9IHRleHR1cmVfcHJvYmFiaWxpdHlfZGlzdHJpYnV0aW9uWzVdICsgMztcbnRleHR1cmVfcHJvYmFiaWxpdHlfZGlzdHJpYnV0aW9uWzddID0gdGV4dHVyZV9wcm9iYWJpbGl0eV9kaXN0cmlidXRpb25bNl0gKyAyO1xudGV4dHVyZV9wcm9iYWJpbGl0eV9kaXN0cmlidXRpb25bOF0gPSB0ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvbls3XSArIDE7XG50ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvbls5XSA9IHRleHR1cmVfcHJvYmFiaWxpdHlfZGlzdHJpYnV0aW9uWzhdICsgMTtcblxuY29uc3QgdGV4dHVyZV9wcm9iYWJpbGl0eV9tYXggPSB0ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvblt0ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvbi5sZW5ndGggLSAxXTtcblxuY29uc3QgdWlfaGVhcnQgPSAwLCB1aV9lbXB0eV9oZWFydCA9IDE7XG5cbi8vY29tcG9uZW50c1xuY29uc3QgY29tcG9uZW50X3Bvc2l0aW9uID0gMCxcblx0Y29tcG9uZW50X21vdmVtZW50ID0gMSxcblx0Y29tcG9uZW50X2Rpc3BsYXkgPSAyLFxuXHRjb21wb25lbnRfdGV4dHVyZSA9IDMsXG5cdGNvbXBvbmVudF9hbmltYXRpb24gPSA0LFxuXHRjb21wb25lbnRfYWN0aW9ucyA9IDUsXG5cdGNvbXBvbmVudF9zcHJpbnQgPSA2LFxuXHRjb21wb25lbnRfZGlyZWN0aW9uID0gNyxcblx0Y29tcG9uZW50X21hcCA9IDgsXG5cdGNvbXBvbmVudF9oZWFsdGggPSA5LFxuXHRjb21wb25lbnRfbGlnaHQgPSAxMCxcblx0Y29tcG9uZW50X3N0cmVuZ3RoID0gMTEsXG5cdGNvbXBvbmVudF9kZXh0ZXJpdHkgPSAxMixcblx0Y29tcG9uZW50X21hZ2ljID0gMTMsXG5cdGNvbXBvbmVudF9sZXZlbCA9IDE0LFxuXHRjb21wb25lbnRfZGVwdGggPSAxNSxcblx0Y29tcG9uZW50X3N0YWlyID0gMTYsXG5cdGNvbXBvbmVudF9jb21iYXQgPSAxNyxcblx0Y29tcG9uZW50X2FpID0gMTgsXG5cdGNvbXBvbmVudF9saWdodF9lbWl0dGVyID0gMTksXG5cdGNvbXBvbmVudF9jb2xsaXNpb24gPSAyMCxcblx0Y29tcG9uZW50X2FiaWxpdGllcyA9IDIxLFxuXHRjb21wb25lbnRfY29udHJvbGxlciA9IDIyLFxuXHRjb21wb25lbnRfaW50ZXJhY3RhYmxlID0gMjMsXG5cdGNvbXBvbmVudF9jYW1lcmEgPSAyNDtcblxuLy9ldmVudHNcbmNvbnN0IGV2ZW50X25ld19nYW1lID0gMCxcblx0ZXZlbnRfcmVzZXRfZ2FtZSA9IDEsXG5cdGV2ZW50X3dpbmRvd19yZXNpemVkID0gMixcblxuXHRldmVudF9sZXZlbF9nZW5lcmF0ZWQgPSAzLFxuXHRldmVudF9wbGF5ZXJfZ2VuZXJhdGVkID0gNCxcblx0ZXZlbnRfZG93bl9sZXZlbCA9IDUsXG5cdGV2ZW50X25ld19sZXZlbCA9IDYsXG5cdGV2ZW50X25ld19wbGF5ZXIgPSA3LFxuXHRldmVudF9lbnRpdGllc19sb2FkZWQgPSA4LFxuXHRldmVudF9iZWdpbl9sZXZlbCA9IDksXG5cblx0ZXZlbnRfcGxheWVyX21vdmVkID0gMTAsXG5cdGV2ZW50X2VudGl0eV9tb3ZlZCA9IDExLFxuXHRldmVudF9wbGF5ZXJfc3RhcnRfc3ByaW50aW5nID0gMTIsXG5cdGV2ZW50X3BsYXllcl9zdG9wX3NwcmludGluZyA9IDEzLFxuXHRldmVudF9vcGVuX2Rvb3IgPSAxNCxcblxuXHRldmVudF9zdWNjZXNzZnVsX2FjdGlvbiA9IDIwLFxuXHRldmVudF9mYWlsZWRfYWN0aW9uID0gMjEsXG5cblx0ZXZlbnRfbmV3X2FuaW1hdGlvbiA9IDMwLFxuXHRldmVudF9oaXRzdHVuID0gMzEsXG5cblx0ZXZlbnRfYmVnaW5fY29tYmF0ID0gNDAsXG5cdGV2ZW50X2VuZF9jb21iYXQgPSA0MSxcblx0ZXZlbnRfbWVsZWVfYWJpbGl0eSA9IDQyLFxuXHRldmVudF9hb2VfYWJpbGl0eSA9IDQzLFxuXHRldmVudF9hb2VfcmFuZ2VkX2FiaWxpdHkgPSA0NCxcblx0ZXZlbnRfc2tpbGxzaG90X2FiaWxpdHkgPSA0NSxcblx0ZXZlbnRfc21pdGVfYWJpbGl0eSA9IDQ2LFxuXG5cdGV2ZW50X2VudGl0eV9zcGF3bmVkID0gNTAsXG5cdGV2ZW50X3NwYXduX2VuZW15X2Nsb3NlID0gNTEsXG5cblx0ZXZlbnRfZW50aXR5X3Rha2VfZGFtYWdlID0gNjAsXG5cdGV2ZW50X3BsYXllcl90YWtlX2RhbWFnZSA9IDYxLFxuXG5cdGV2ZW50X2NhbWVyYV91cGRhdGVkID0gNzAsXG5cdC8vIGV2ZW50X2NhbWVyYV9yZWFkeSA9IDcwLFxuXHQvLyBldmVudF9jYW1lcmFfbW92ZWQgPSA3MSxcblxuXHRldmVudF90aXRsZV9zY3JlZW4gPSA5OTksXG5cdGV2ZW50X2dhbWVfb3ZlciA9IDEwMDBcbjtcblxuY29uc3QgZXZlbnRfdG9fc3RyaW5nID0gW107XG5cdGV2ZW50X3RvX3N0cmluZ1swXT0gXCJldmVudF9uZXdfZ2FtZVwiO1xuXHRldmVudF90b19zdHJpbmdbMV09IFwiZXZlbnRfcmVzZXRfZ2FtZVwiO1xuXHRldmVudF90b19zdHJpbmdbMl09IFwiZXZlbnRfd2luZG93X3Jlc2l6ZWRcIjtcblx0ZXZlbnRfdG9fc3RyaW5nWzNdPSBcImV2ZW50X2xldmVsX2dlbmVyYXRlZFwiO1xuXHRldmVudF90b19zdHJpbmdbNF09IFwiZXZlbnRfcGxheWVyX2dlbmVyYXRlZFwiO1xuXHRldmVudF90b19zdHJpbmdbNV09IFwiZXZlbnRfZG93bl9sZXZlbFwiO1xuXHRldmVudF90b19zdHJpbmdbNl09IFwiZXZlbnRfbmV3X2xldmVsXCI7XG5cdGV2ZW50X3RvX3N0cmluZ1s3XT0gXCJldmVudF9uZXdfcGxheWVyXCI7XG5cdGV2ZW50X3RvX3N0cmluZ1s4XT0gXCJldmVudF9lbnRpdGllc19sb2FkZWRcIjtcblx0ZXZlbnRfdG9fc3RyaW5nWzldPSBcImV2ZW50X2JlZ2luX2xldmVsXCI7XG5cdGV2ZW50X3RvX3N0cmluZ1sxMF09IFwiZXZlbnRfcGxheWVyX21vdmVkXCI7XG5cdGV2ZW50X3RvX3N0cmluZ1sxMV09IFwiZXZlbnRfZW50aXR5X21vdmVkXCI7XG5cdGV2ZW50X3RvX3N0cmluZ1sxMl09IFwiZXZlbnRfcGxheWVyX3N0YXJ0X3NwcmludGluZ1wiO1xuXHRldmVudF90b19zdHJpbmdbMTNdPSBcImV2ZW50X3BsYXllcl9zdG9wX3NwcmludGluZ1wiO1xuXHRldmVudF90b19zdHJpbmdbMTRdPSBcImV2ZW50X29wZW5fZG9vclwiO1xuXHRldmVudF90b19zdHJpbmdbMjBdPSBcImV2ZW50X3N1Y2Nlc3NmdWxfYWN0aW9uXCI7XG5cdGV2ZW50X3RvX3N0cmluZ1syMV09IFwiZXZlbnRfZmFpbGVkX2FjdGlvblwiO1xuXHRldmVudF90b19zdHJpbmdbMzBdPSBcImV2ZW50X25ld19hbmltYXRpb25cIjtcblx0ZXZlbnRfdG9fc3RyaW5nWzMxXT0gXCJldmVudF9oaXRzdHVuXCI7XG5cdGV2ZW50X3RvX3N0cmluZ1s0MF09IFwiZXZlbnRfYmVnaW5fY29tYmF0XCI7XG5cdGV2ZW50X3RvX3N0cmluZ1s0MV09IFwiZXZlbnRfZW5kX2NvbWJhdFwiO1xuXHRldmVudF90b19zdHJpbmdbNDJdPSBcImV2ZW50X21lbGVlX2FiaWxpdHlcIjtcblx0ZXZlbnRfdG9fc3RyaW5nWzQzXT0gXCJldmVudF9hb2VfYWJpbGl0eVwiO1xuXHRldmVudF90b19zdHJpbmdbNDRdPSBcImV2ZW50X2FvZV9yYW5nZWRfYWJpbGl0eVwiO1xuXHRldmVudF90b19zdHJpbmdbNDVdPSBcImV2ZW50X3NraWxsc2hvdF9hYmlsaXR5XCI7XG5cdGV2ZW50X3RvX3N0cmluZ1s0Nl09IFwiZXZlbnRfc21pdGVfYWJpbGl0eVwiO1xuXHRldmVudF90b19zdHJpbmdbNTBdPSBcImV2ZW50X2VudGl0eV9zcGF3bmVkXCI7XG5cdGV2ZW50X3RvX3N0cmluZ1s1MV09IFwiZXZlbnRfc3Bhd25fZW5lbXlfY2xvc2VcIjtcblx0ZXZlbnRfdG9fc3RyaW5nWzYwXT0gXCJldmVudF9lbnRpdHlfdGFrZV9kYW1hZ2VcIjtcblx0ZXZlbnRfdG9fc3RyaW5nWzcwXT0gXCJldmVudF9jYW1lcmFfdXBkYXRlZFwiO1xuXHRldmVudF90b19zdHJpbmdbNjFdPSBcImV2ZW50X3BsYXllcl90YWtlX2RhbWFnZVwiO1xuXHRldmVudF90b19zdHJpbmdbOTk5XT0gXCJldmVudF90aXRsZV9zY3JlZW5cIjtcblx0ZXZlbnRfdG9fc3RyaW5nWzEwMDBdPSBcImV2ZW50X2dhbWVfb3ZlclwiXG5cblxuXG5cbi8vIEFjdGlvbnNcbmNvbnN0IGFjdGlvbl9ub25lID0gMCxcblxuXHRhY3Rpb25fbW92ZSA9IDEwLFxuXHRhY3Rpb25fbW92ZV91cCA9IDExLFxuXHRhY3Rpb25fbW92ZV9yaWdodCA9IDEyLFxuXHRhY3Rpb25fbW92ZV9kb3duID0gMTMsXG5cdGFjdGlvbl9tb3ZlX2xlZnQgPSAxNCxcblxuXHRhY3Rpb25fYWJpbGl0eV9wcmltYXJ5ID0gMjAsXG5cdGFjdGlvbl9hYmlsaXR5X3NlY29uZGFyeSA9IDIxLFxuXHRhY3Rpb25fYWJpbGl0eV9zcGVjaWFsID0gMjJcblxuXHQvLyBhY3Rpb25fYWJpbGl0eV9vbmUgPSAyMCxcblx0Ly8gYWN0aW9uX2FiaWxpdHlfdHdvID0gMjEsXG5cdC8vIGFjdGlvbl9hYmlsaXR5X3RocmVlID0gMjJcbjtcblxuLy8gRW50aXR5IGNvbnN0YW50c1xuY29uc3QgY2xhc3Nfd2FycmlvciA9IDAsXG5cdGNsYXNzX21hZ2UgPSAxLFxuXHRjbGFzc19yb2d1ZSA9IDIsXG5cdGVudGl0eV9za2VsZXRvbiA9IDMsXG5cdGJvc3NfYmxvYiA9IDQgO1xuXG4vLyBFbnRpdHkgZGVmYXVsdHNcbi8vIFBMQVlFUlxuY29uc3QgREVGQVVMVF9QTEFZRVJfU0laRSA9IDE7XG5jb25zdCBERUZBVUxUX1BMQVlFUl9IRUFMVEggPSAxMDA7XG5jb25zdCBERUZBVUxUX1BMQVlFUl9BVFRBQ0tfREFNQUdFID0gMTA7XG5jb25zdCBERUZBVUxUX1BMQVlFUl9NQUdJQ19EQU1BR0UgPSAxMDtcbmNvbnN0IERFRkFVTFRfUExBWUVSX0FSTU9SID0gMTA7XG5jb25zdCBERUZBVUxUX1BMQVlFUl9BQ1RJT05TID0gW1xuXHRhY3Rpb25fbW92ZV91cCxcblx0YWN0aW9uX21vdmVfcmlnaHQsXG5cdGFjdGlvbl9tb3ZlX2Rvd24sXG5cdGFjdGlvbl9tb3ZlX2xlZnQsXG5cdGFjdGlvbl9hYmlsaXR5X3ByaW1hcnksXG5cdGFjdGlvbl9hYmlsaXR5X3NlY29uZGFyeSxcblx0YWN0aW9uX2FiaWxpdHlfc3BlY2lhbFxuXTtcblxuY29uc3QgREVGQVVMVF9DT05UUk9MTEVSX0xBWU9VVCA9IHt9XG5ERUZBVUxUX0NPTlRST0xMRVJfTEFZT1VUWzg3XSA9IGFjdGlvbl9tb3ZlX3VwOyAgXHRcdC8vd1xuREVGQVVMVF9DT05UUk9MTEVSX0xBWU9VVFs2OF0gPSBhY3Rpb25fbW92ZV9yaWdodDsgIFx0Ly9kXG5ERUZBVUxUX0NPTlRST0xMRVJfTEFZT1VUWzgzXSA9IGFjdGlvbl9tb3ZlX2Rvd247IFx0XHQvL3NcbkRFRkFVTFRfQ09OVFJPTExFUl9MQVlPVVRbNjVdID0gYWN0aW9uX21vdmVfbGVmdDsgXHRcdC8vYVxuREVGQVVMVF9DT05UUk9MTEVSX0xBWU9VVFxuREVGQVVMVF9DT05UUk9MTEVSX0xBWU9VVFszOF0gPSBhY3Rpb25fbW92ZV91cDtcbkRFRkFVTFRfQ09OVFJPTExFUl9MQVlPVVRbMzldID0gYWN0aW9uX21vdmVfcmlnaHRcbkRFRkFVTFRfQ09OVFJPTExFUl9MQVlPVVRbNDBdID0gYWN0aW9uX21vdmVfZG93bjtcbkRFRkFVTFRfQ09OVFJPTExFUl9MQVlPVVRbMzddID0gYWN0aW9uX21vdmVfbGVmdDtcbkRFRkFVTFRfQ09OVFJPTExFUl9MQVlPVVRcbkRFRkFVTFRfQ09OVFJPTExFUl9MQVlPVVRbNDldID0gYWN0aW9uX2FiaWxpdHlfcHJpbWFyeTsgICAgXHQvLzFcbkRFRkFVTFRfQ09OVFJPTExFUl9MQVlPVVRbNTBdID0gYWN0aW9uX2FiaWxpdHlfc2Vjb25kYXJ5OyAgIC8vMlxuREVGQVVMVF9DT05UUk9MTEVSX0xBWU9VVFs1MV0gPSBhY3Rpb25fYWJpbGl0eV9zcGVjaWFsOyBcdC8vM1xuXG4vL0VORU1ZXG5jb25zdCBERUZBVUxUX0VORU1ZX1NJWkUgPSAxO1xuY29uc3QgREVGQVVMVF9FTkVNWV9IRUFMVEggPSA1MDtcbmNvbnN0IERFRkFVTFRfRU5FTVlfQVRUQUNLX0RBTUFHRSA9IDEwO1xuY29uc3QgREVGQVVMVF9FTkVNWV9NQUdJQ19EQU1BR0UgPSAxMDtcbmNvbnN0IERFRkFVTFRfRU5FTVlfQVJNT1IgPSAxMDtcbmNvbnN0IERFRkFVTFRfRU5FTVlfQUNUSU9OUyA9IFtcblx0YWN0aW9uX21vdmVfdXAsXG5cdGFjdGlvbl9tb3ZlX3JpZ2h0LFxuXHRhY3Rpb25fbW92ZV9kb3duLFxuXHRhY3Rpb25fbW92ZV9sZWZ0XG5dXG5cblxuY29uc3QgZW50aXR5X3N0cmluZ190b19jb25zdGFudCA9IFtdO1xuZW50aXR5X3N0cmluZ190b19jb25zdGFudFsnd2FycmlvciddID0gY2xhc3Nfd2FycmlvcjtcbmVudGl0eV9zdHJpbmdfdG9fY29uc3RhbnRbJ21hZ2UnXSA9IGNsYXNzX21hZ2U7XG5lbnRpdHlfc3RyaW5nX3RvX2NvbnN0YW50Wydyb2d1ZSddID0gY2xhc3Nfcm9ndWU7XG5lbnRpdHlfc3RyaW5nX3RvX2NvbnN0YW50Wydza2VsZXRvbiddID0gZW50aXR5X3NrZWxldG9uO1xuZW50aXR5X3N0cmluZ190b19jb25zdGFudFsnYmxvYiddID0gYm9zc19ibG9iO1xuXG5cbi8vIEFuaW1hdGlvbnNcbmNvbnN0IGFuaW1hdGlvbl9pZGxlID0gMCxcblx0YW5pbWF0aW9uX21vdmVfdXAgPSAxLFxuXHRhbmltYXRpb25fbW92ZV9yaWdodCA9IDIsXG5cdGFuaW1hdGlvbl9tb3ZlX2Rvd24gPSAzLFxuXHRhbmltYXRpb25fbW92ZV9sZWZ0ID0gNCxcblx0YW5pbWF0aW9uX25vX2FuaW1hdGlvbnNfeWV0ID0gMTAwMDtcblxuY29uc3QgYW5pbWF0aW9uX3N0cmluZ3NfdG9fY29uc3RhbnRzID0gW107XG5cbmFuaW1hdGlvbl9zdHJpbmdzX3RvX2NvbnN0YW50c1snYW5pbWF0aW9uX2lkbGUnXSA9IGFuaW1hdGlvbl9pZGxlO1xuXG5hbmltYXRpb25fc3RyaW5nc190b19jb25zdGFudHNbJ2FuaW1hdGlvbl9tb3ZlX3VwJ10gPSBhbmltYXRpb25fbW92ZV91cDtcbmFuaW1hdGlvbl9zdHJpbmdzX3RvX2NvbnN0YW50c1snYW5pbWF0aW9uX21vdmVfcmlnaHQnXSA9IGFuaW1hdGlvbl9tb3ZlX3JpZ2h0O1xuYW5pbWF0aW9uX3N0cmluZ3NfdG9fY29uc3RhbnRzWydhbmltYXRpb25fbW92ZV9kb3duJ10gPSBhbmltYXRpb25fbW92ZV9kb3duO1xuYW5pbWF0aW9uX3N0cmluZ3NfdG9fY29uc3RhbnRzWydhbmltYXRpb25fbW92ZV9sZWZ0J10gPSBhbmltYXRpb25fbW92ZV9sZWZ0O1xuXG5cbi8vIGNvbnN0IGFjdGlvbl9zdHJpbmdfdG9fY29uc3RhbnQgPSBbXTtcbi8vIGFjdGlvbl9zdHJpbmdfdG9fY29uc3RhbnRbJ2FjdGlvbl9ub25lJ10gPSBhY3Rpb25fbm9uZTtcblxuLy8gYWN0aW9uX3N0cmluZ190b19jb25zdGFudFsnYWN0aW9uX21vdmVfdXAnXSA9IGFjdGlvbl9tb3ZlX3VwO1xuLy8gYWN0aW9uX3N0cmluZ190b19jb25zdGFudFsnYWN0aW9uX21vdmVfcmlnaHQnXSA9IGFjdGlvbl9tb3ZlX3JpZ2h0O1xuLy8gYWN0aW9uX3N0cmluZ190b19jb25zdGFudFsnYWN0aW9uX21vdmVfZG93biddID0gYWN0aW9uX21vdmVfZG93bjtcbi8vIGFjdGlvbl9zdHJpbmdfdG9fY29uc3RhbnRbJ2FjdGlvbl9tb3ZlX2xlZnQnXSA9IGFjdGlvbl9tb3ZlX2xlZnQ7XG5cbi8vIGFjdGlvbl9zdHJpbmdfdG9fY29uc3RhbnRbJ2FjdGlvbl9hYmlsaXR5X29uZSddID0gYWN0aW9uX2FiaWxpdHlfb25lO1xuLy8gYWN0aW9uX3N0cmluZ190b19jb25zdGFudFsnYWN0aW9uX2FiaWxpdHlfdHdvJ10gPSBhY3Rpb25fYWJpbGl0eV90d287XG4vLyBhY3Rpb25fc3RyaW5nX3RvX2NvbnN0YW50WydhY3Rpb25fYWJpbGl0eV90aHJlZSddID0gYWN0aW9uX2FiaWxpdHlfdGhyZWU7XG5cbmNvbnN0IGtleUNvZGVfdG9fYWN0aW9uID0gW107XG5rZXlDb2RlX3RvX2FjdGlvbls4N10gPSBhY3Rpb25fbW92ZV91cDsgIFx0XHQvL3dcbmtleUNvZGVfdG9fYWN0aW9uWzY4XSA9IGFjdGlvbl9tb3ZlX3JpZ2h0OyAgXHQvL2RcbmtleUNvZGVfdG9fYWN0aW9uWzgzXSA9IGFjdGlvbl9tb3ZlX2Rvd247IFx0XHQvL3NcbmtleUNvZGVfdG9fYWN0aW9uWzY1XSA9IGFjdGlvbl9tb3ZlX2xlZnQ7IFx0XHQvL2Fcbi8vYXJyb3dzXG5rZXlDb2RlX3RvX2FjdGlvblszOF0gPSBhY3Rpb25fbW92ZV91cDtcbmtleUNvZGVfdG9fYWN0aW9uWzM5XSA9IGFjdGlvbl9tb3ZlX3JpZ2h0XG5rZXlDb2RlX3RvX2FjdGlvbls0MF0gPSBhY3Rpb25fbW92ZV9kb3duO1xua2V5Q29kZV90b19hY3Rpb25bMzddID0gYWN0aW9uX21vdmVfbGVmdDtcblxua2V5Q29kZV90b19hY3Rpb25bNDldID0gYWN0aW9uX2FiaWxpdHlfcHJpbWFyeTsgICAgXHQvLzFcbmtleUNvZGVfdG9fYWN0aW9uWzUwXSA9IGFjdGlvbl9hYmlsaXR5X3NlY29uZGFyeTsgICAvLzJcbmtleUNvZGVfdG9fYWN0aW9uWzUxXSA9IGFjdGlvbl9hYmlsaXR5X3NwZWNpYWw7IFx0Ly8zXG5cbi8vIGtleUNvZGVfdG9fYWN0aW9uWzQ5XSA9IGFjdGlvbl9hYmlsaXR5X29uZTsgICAgXHQvLzFcbi8vIGtleUNvZGVfdG9fYWN0aW9uWzUwXSA9IGFjdGlvbl9hYmlsaXR5X3R3bzsgICAgXHQvLzJcbi8vIGtleUNvZGVfdG9fYWN0aW9uWzUxXSA9IGFjdGlvbl9hYmlsaXR5X3RocmVlOyBcdC8vM1xuXG5cbmNvbnN0IGFjdGlvbl90b19wcmlvcml0eSA9IFtdO1xuYWN0aW9uX3RvX3ByaW9yaXR5W2FjdGlvbl9ub25lXSA9IDA7XG5cbmFjdGlvbl90b19wcmlvcml0eVthY3Rpb25fbW92ZV91cF0gPSAzO1xuYWN0aW9uX3RvX3ByaW9yaXR5W2FjdGlvbl9tb3ZlX2xlZnRdID0gMztcbmFjdGlvbl90b19wcmlvcml0eVthY3Rpb25fbW92ZV9kb3duXSA9IDM7XG5hY3Rpb25fdG9fcHJpb3JpdHlbYWN0aW9uX21vdmVfcmlnaHRdID0gMztcblxuYWN0aW9uX3RvX3ByaW9yaXR5W2FjdGlvbl9hYmlsaXR5X3ByaW1hcnldID0gNDtcbmFjdGlvbl90b19wcmlvcml0eVthY3Rpb25fYWJpbGl0eV9zZWNvbmRhcnldID0gNDtcbmFjdGlvbl90b19wcmlvcml0eVthY3Rpb25fYWJpbGl0eV9zcGVjaWFsXSA9IDQ7XG4vLyBhY3Rpb25fdG9fcHJpb3JpdHlbYWN0aW9uX2FiaWxpdHlfb25lXSA9IDQ7XG4vLyBhY3Rpb25fdG9fcHJpb3JpdHlbYWN0aW9uX2FiaWxpdHlfdHdvXSA9IDQ7XG4vLyBhY3Rpb25fdG9fcHJpb3JpdHlbYWN0aW9uX2FiaWxpdHlfdGhyZWVdID0gNDtcblxuY29uc3QgYWN0aW9uX3RvX2RpcmVjdGlvbiA9IFtdO1xuYWN0aW9uX3RvX2RpcmVjdGlvblthY3Rpb25fbW92ZV91cF0gPSBkaXJlY3Rpb25fdXA7XG5hY3Rpb25fdG9fZGlyZWN0aW9uW2FjdGlvbl9tb3ZlX3JpZ2h0XSA9IGRpcmVjdGlvbl9yaWdodDtcbmFjdGlvbl90b19kaXJlY3Rpb25bYWN0aW9uX21vdmVfZG93bl0gPSBkaXJlY3Rpb25fZG93bjtcbmFjdGlvbl90b19kaXJlY3Rpb25bYWN0aW9uX21vdmVfbGVmdF0gPSBkaXJlY3Rpb25fbGVmdDtcblxuLy8gY29uc3QgZGlyZWN0aW9uX3RvX21vdmVtZW50ID0gW107XG4vLyBkaXJlY3Rpb25fdG9fbW92ZW1lbnRbZGlyZWN0aW9uX3VwXSA9IGFjdGlvbl9tb3ZlX3VwO1xuLy8gZGlyZWN0aW9uX3RvX21vdmVtZW50W2RpcmVjdGlvbl9yaWdodF0gPSBhY3Rpb25fbW92ZV9yaWdodDtcbi8vIGRpcmVjdGlvbl90b19tb3ZlbWVudFtkaXJlY3Rpb25fZG93bl0gPSBhY3Rpb25fbW92ZV9kb3duO1xuLy8gZGlyZWN0aW9uX3RvX21vdmVtZW50W2RpcmVjdGlvbl9sZWZ0XSA9IGFjdGlvbl9tb3ZlX2xlZnQ7XG5cbmNvbnN0IGFjdGlvbl90b19hbmltYXRpb24gPSBbXTtcblxuYWN0aW9uX3RvX2FuaW1hdGlvblthY3Rpb25fbm9uZV0gPSBhbmltYXRpb25faWRsZTtcblxuYWN0aW9uX3RvX2FuaW1hdGlvblthY3Rpb25fbW92ZV91cF0gPSBhbmltYXRpb25fbW92ZV91cDtcbmFjdGlvbl90b19hbmltYXRpb25bYWN0aW9uX21vdmVfcmlnaHRdID0gYW5pbWF0aW9uX21vdmVfcmlnaHQ7XG5hY3Rpb25fdG9fYW5pbWF0aW9uW2FjdGlvbl9tb3ZlX2Rvd25dID0gYW5pbWF0aW9uX21vdmVfZG93bjtcbmFjdGlvbl90b19hbmltYXRpb25bYWN0aW9uX21vdmVfbGVmdF0gPSBhbmltYXRpb25fbW92ZV9sZWZ0O1xuXG4vLyBBYmlsaXR5IHR5cGVzXG5jb25zdCBhYmlsaXR5X3R5cGVfbWVsZWUgPSAwLFxuXHRhYmlsaXR5X3R5cGVfYW9lID0gMSxcblx0YWJpbGl0eV90eXBlX2FvZV9yYW5nZWQgPSAyLFxuXHRhYmlsaXR5X3R5cGVfc2tpbGxzaG90ID0gMyxcblx0YWJpbGl0eV90eXBlX3NtaXRlID0gNFxuO1xuXG5jb25zdCBhYmlsaXR5X3R5cGVfc3RyaW5nX3RvX2NvbnN0YW50ID0gW107XG5hYmlsaXR5X3R5cGVfc3RyaW5nX3RvX2NvbnN0YW50WydtZWxlZSddID0gYWJpbGl0eV90eXBlX21lbGVlO1xuYWJpbGl0eV90eXBlX3N0cmluZ190b19jb25zdGFudFsnYW9lJ10gPSBhYmlsaXR5X3R5cGVfYW9lO1xuYWJpbGl0eV90eXBlX3N0cmluZ190b19jb25zdGFudFsnYW9lX3JhbmdlZCddID0gYWJpbGl0eV90eXBlX2FvZV9yYW5nZWQ7XG5hYmlsaXR5X3R5cGVfc3RyaW5nX3RvX2NvbnN0YW50Wydza2lsbHNob3QnXSA9IGFiaWxpdHlfdHlwZV9za2lsbHNob3Q7XG5hYmlsaXR5X3R5cGVfc3RyaW5nX3RvX2NvbnN0YW50WydzbWl0ZSddID0gYWJpbGl0eV90eXBlX3NtaXRlO1xuXG5cbi8vIEFiaWxpdGllc1xuY29uc3QgYWJpbGl0eV9zbGFzaCA9IDAsXG5cdGFiaWxpdHlfc3Bpbl9hdHRhY2sgPSAxLFxuXHRhYmlsaXR5X2p1ZGdlbWVudF9kYXkgPSAyXG5cbi8vIGFiaWxpdHlfc3Bpbl9hdHRhY2sgPSAzLFxuLy8gYWJpbGl0eV9zcGluX2F0dGFjayA9IDQsXG4vLyBhYmlsaXR5X3NwaW5fYXR0YWNrID0gNSxcbi8vIGFiaWxpdHlfc3Bpbl9hdHRhY2sgPSA2LFxuLy8gYWJpbGl0eV9zcGluX2F0dGFjayA9IDcsXG4vLyBhYmlsaXR5X3NwaW5fYXR0YWNrID0gOCxcblxuO1xuXG5jb25zdCBhYmlsaXR5X3N0cmluZ190b19jb25zdGFudCA9IFtdO1xuYWJpbGl0eV9zdHJpbmdfdG9fY29uc3RhbnRbJ1NsYXNoJ10gPSBhYmlsaXR5X3NsYXNoO1xuYWJpbGl0eV9zdHJpbmdfdG9fY29uc3RhbnRbJ1NwaW4gQXR0YWNrJ10gPSBhYmlsaXR5X3NwaW5fYXR0YWNrO1xuYWJpbGl0eV9zdHJpbmdfdG9fY29uc3RhbnRbJ0p1ZGdlbWVudCBEYXknXSA9IGFiaWxpdHlfanVkZ2VtZW50X2RheTtcbiIsImNsYXNzIEdhbWVTeXN0ZW0ge1xuXG5cdGNvbnN0cnVjdG9yKGNvbXBvbmVudFNpZ25hdHVyZSkge1xuXHRcdHRoaXMuZW50aXRpZXMgPSB7fVxuXHRcdHRoaXMuY29tcG9uZW50U2lnbmF0dXJlID0gY29tcG9uZW50U2lnbmF0dXJlO1xuXHR9XG5cblx0aW5pdChlbmdpbmUpIHsgfVxuXG5cdHJ1bihlbmdpbmUpIHsgfVxuXG5cdGFkZEVudGl0eShlbnRpdHkpIHtcblx0XHRpZih0aGlzLmNvbXBvbmVudFNpZ25hdHVyZS5sZW5ndGggPiAwICYmICEoZW50aXR5LklEIGluIHRoaXMuZW50aXRpZXMpICYmIFV0aWxpdHkuY2hlY2tDb21wb25lbnRzKGVudGl0eS5jb21wb25lbnRzLCB0aGlzLmNvbXBvbmVudFNpZ25hdHVyZSkpIHtcblx0XHRcdHRoaXMuZW50aXRpZXNbZW50aXR5LklEXSA9IGVudGl0eS5jb21wb25lbnRzO1xuXHRcdH1cblx0fVxuXG5cdC8vIGRlc3Ryb3lFbnRpdHkoZW50aXR5KSB7XG5cdC8vIFx0aWYoZW50aXR5LklEIGluIHRoaXMuZW50aXRpZXMpIHtcblx0Ly8gXHRcdGRlbGV0ZSB0aGlzLmVudGl0aWVzW2VudGl0eS5JRF07XG5cdC8vIFx0fVxuXHQvLyB9XG5cblx0ZGVzdHJveUVudGl0eShJRCkge1xuXHRcdGlmKElEIGluIHRoaXMuZW50aXRpZXMpIHtcblx0XHRcdGRlbGV0ZSB0aGlzLmVudGl0aWVzW0lEXTtcblx0XHR9XG5cdH1cblxuXHRoYW5kbGVFdmVudChlbmdpbmUsIGV2ZW50SUQsIGRhdGEpIHsgfVxufVxuIiwiY2xhc3MgUG9wcHNFbmdpbmUge1xuXG5cdGNvbnN0cnVjdG9yKGRhdGEpIHtcblxuXHRcdGNvbnN0IGNvbmZpZyA9IGRhdGEuY29uZmlnO1xuXG5cdFx0Y29uc3Qgcm9vbV9wb29sID0gZGF0YS5yb29tX3Bvb2w7XG5cdFx0Y29uc3Qgc3RhaXJfcm9vbV9wb29sID0gZGF0YS5zdGFpcl9yb29tX3Bvb2w7XG5cblx0XHRjb25zdCBpbWFnZXMgPSBkYXRhLmltYWdlcy50ZXh0dXJlcztcblx0XHRjb25zdCB1aSA9IGRhdGEuaW1hZ2VzLnVpO1xuXG5cdFx0Y29uc3QgcGxheWVyX2NvbmZpZyA9IGRhdGEucGxheWVyX2NvbmZpZztcblx0XHRjb25zdCBlbmVteV9jb25maWcgPSBkYXRhLmVuZW15X2NvbmZpZztcblx0XHRjb25zdCBib3NzX2NvbmZpZyA9IGRhdGEuYm9zc19jb25maWc7XG5cblx0XHR0aGlzLnN5c3RlbXMgPSBbXTtcblx0XHR0aGlzLkxldmVsU3lzdGVtID0gbmV3IExldmVsU3lzdGVtKGNvbmZpZy5sZXZlbCwgcm9vbV9wb29sLCBzdGFpcl9yb29tX3Bvb2wpO1xuXHRcdHRoaXMuRW50aXR5U3lzdGVtID0gbmV3IEVudGl0eVN5c3RlbShjb25maWcuZW50aXRpZXMsIHBsYXllcl9jb25maWcsIGVuZW15X2NvbmZpZywgYm9zc19jb25maWcpO1xuXHRcdHRoaXMuRGlzcGxheVN5c3RlbSA9IG5ldyBEaXNwbGF5U3lzdGVtKGNvbmZpZy5kaXNwbGF5LCBpbWFnZXMpO1xuXHRcdHRoaXMuQ2FtZXJhU3lzdGVtID0gbmV3IENhbWVyYVN5c3RlbShjb25maWcuY2FtZXJhKTtcblx0XHR0aGlzLklucHV0U3lzdGVtID0gbmV3IElucHV0U3lzdGVtKCk7XG5cdFx0Ly8gdGhpcy5WaXNpb25TeXN0ZW0gPSBuZXcgVmlzaW9uU3lzdGVtKGNvbmZpZy52aXNpb24pO1xuXHRcdC8vIHRoaXMuTGlnaHRTeXN0ZW0gPSBuZXcgTGlnaHRTeXN0ZW0oY29uZmlnLmxpZ2h0KTtcblx0XHQvLyB0aGlzLkFjdGlvblN5c3RlbSA9IG5ldyBBY3Rpb25TeXN0ZW0oKTtcblx0XHQvLyB0aGlzLk1vdmVtZW50U3lzdGVtID0gbmV3IE1vdmVtZW50U3lzdGVtKCk7XG5cdFx0Ly8gdGhpcy5BbmltYXRpb25TeXN0ZW0gPSBuZXcgQW5pbWF0aW9uU3lzdGVtKGNvbmZpZy5hbmltYXRpb24pO1xuXHRcdC8vIHRoaXMuQ29tYmF0U3lzdGVtID0gbmV3IENvbWJhdFN5c3RlbShjb25maWcuY29tYmF0KTtcblx0XHQvLyB0aGlzLkhlYWx0aFN5c3RlbSA9IG5ldyBIZWFsdGhTeXN0ZW0oY29uZmlnLmhlYWx0aCk7XG5cdFx0Ly8gdGhpcy5BSVN5c3RlbSA9IG5ldyBBSVN5c3RlbShjb25maWcuYWkpO1xuXHRcdC8vIHRoaXMuQWJpbGl0eVN5c3RlbSA9IG5ldyBBYmlsaXR5U3lzdGVtKGNvbmZpZy5hYmlsaXRpZXMpO1xuXHRcdC8vIHRoaXMuU3ByaW50U3lzdGVtID0gbmV3IFNwcmludFN5c3RlbShjb25maWcuc3ByaW50KTtcblxuXHRcdHRoaXMuc3lzdGVtcy5wdXNoKHRoaXMuTGV2ZWxTeXN0ZW0pO1xuXHRcdHRoaXMuc3lzdGVtcy5wdXNoKHRoaXMuRW50aXR5U3lzdGVtKTtcblx0XHR0aGlzLnN5c3RlbXMucHVzaCh0aGlzLkRpc3BsYXlTeXN0ZW0pO1xuXHRcdHRoaXMuc3lzdGVtcy5wdXNoKHRoaXMuQ2FtZXJhU3lzdGVtKTtcblx0XHR0aGlzLnN5c3RlbXMucHVzaCh0aGlzLklucHV0U3lzdGVtKTtcblx0XHQvLyB0aGlzLnN5c3RlbXMucHVzaCh0aGlzLlZpc2lvblN5c3RlbSk7XG5cdFx0Ly8gdGhpcy5zeXN0ZW1zLnB1c2godGhpcy5MaWdodFN5c3RlbSk7XG5cdFx0Ly8gdGhpcy5zeXN0ZW1zLnB1c2godGhpcy5BY3Rpb25TeXN0ZW0pO1xuXHRcdC8vIHRoaXMuc3lzdGVtcy5wdXNoKHRoaXMuTW92ZW1lbnRTeXN0ZW0pO1xuXHRcdC8vIHRoaXMuc3lzdGVtcy5wdXNoKHRoaXMuQW5pbWF0aW9uU3lzdGVtKTtcblx0XHQvLyB0aGlzLnN5c3RlbXMucHVzaCh0aGlzLkNvbWJhdFN5c3RlbSk7XG5cdFx0Ly8gdGhpcy5zeXN0ZW1zLnB1c2godGhpcy5IZWFsdGhTeXN0ZW0pO1xuXHRcdC8vIHRoaXMuc3lzdGVtcy5wdXNoKHRoaXMuQUlTeXN0ZW0pO1xuXHRcdC8vIHRoaXMuc3lzdGVtcy5wdXNoKHRoaXMuU3ByaW50U3lzdGVtKTtcblx0XHQvLyB0aGlzLnN5c3RlbXMucHVzaCh0aGlzLkFiaWxpdHlTeXN0ZW0pO1xuXG5cdFx0dGhpcy5VSVN5c3RlbSA9IG5ldyBVSVN5c3RlbShjb25maWcudWksIGRhdGEuaW1hZ2VzLnVpKTtcblx0XHR0aGlzLnN5c3RlbXMucHVzaCh0aGlzLlVJU3lzdGVtKTtcblxuXHRcdHRoaXMuaW5pdCgpO1xuXG5cdFx0aWYoVElUTEVfU0NSRUVOKSB7XG5cdFx0XHR0aGlzLnNlbmRFdmVudChldmVudF90aXRsZV9zY3JlZW4pO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdHRoaXMuc2VuZEV2ZW50KGV2ZW50X25ld19nYW1lKTtcblx0XHR9XG5cdH1cblxuXHRpbml0KCkge1xuXG5cdFx0VXRpbGl0eS5kZWJ1Z0xvZyhcIkluaXRpYWxpemluZyBQb3Bwc0VuZ2luZVwiKTtcblxuXHRcdHRoaXMuZW50aXRpZXMgPSB7fVxuXHRcdHRoaXMuZXZlbnRzID0gW107XG5cdFx0dGhpcy5kZXB0aCA9IDA7XG5cblx0XHR0aGlzLlVJT25seSA9IGZhbHNlO1xuXHRcdHRoaXMuRk9DVVNFRCA9IHRydWU7XG5cblx0XHRmb3IobGV0IHN5c3RlbSBvZiB0aGlzLnN5c3RlbXMpIHtcblx0XHRcdHN5c3RlbS5pbml0KHRoaXMpO1xuXHRcdH1cblxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNlbmRFdmVudChldmVudF93aW5kb3dfcmVzaXplZCkpO1xuXG5cdFx0bGV0IHNlbGYgPSB0aGlzO1xuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgZnVuY3Rpb24gKCkge1xuXHRcdFx0c2VsZi50aWNrKCk7XG5cdFx0fSk7XG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsIGZ1bmN0aW9uICgpIHtcblx0XHRcdHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZShzZWxmLnJlcXVlc3RJRCk7XG5cdFx0fSk7XG5cblx0XHR0aGlzLnRpY2soKTtcblxuXHR9XG5cblx0cGF1c2UoKSB7XG5cdFx0dGhpcy5VSU9ubHkgPSB0cnVlO1xuXHR9XG5cblx0cmVzdW1lKCkge1xuXHRcdHRoaXMuVUlPbmx5ID0gZmFsc2U7XG5cdH1cblxuXHR0aWNrKCkge1xuXHRcdGlmKHRoaXMuVUlPbmx5KSB7XG5cdFx0XHR0aGlzLlVJU3lzdGVtLnJ1bih0aGlzKTtcblx0XHR9XG5cdFx0ZWxzZXtcblx0XHRcdHRoaXMuaGFuZGxlRXZlbnRzKHRoaXMuZXZlbnRzKTtcblx0XHRcdGZvcihsZXQgcyBvZiB0aGlzLnN5c3RlbXMpIHtcblx0XHRcdFx0cy5ydW4odGhpcyk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHRoaXMucmVxdWVzdElEID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB0aGlzLnRpY2soKSk7XG5cdH1cblxuXHRzZW5kRXZlbnQoZSwgZGF0YSA9IHVuZGVmaW5lZCwgdGlja3MgPSAwKSB7XG5cdFx0aWYodGlja3MgPT0gMCkge1xuXHRcdFx0dGhpcy5ydW5FdmVudChbZSwgZGF0YV0pO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdHRoaXMuZXZlbnRzLnB1c2goW2UsIGRhdGEsIHRpY2tzXSk7XG5cdFx0fVxuXHR9XG5cblx0aGFuZGxlRXZlbnRzKGV2ZW50cykge1xuXHRcdGZvcihsZXQgaSA9IGV2ZW50cy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuXHRcdFx0aWYoZXZlbnRzW2ldWzJdID4gMCkge1xuXHRcdFx0XHRldmVudHNbaV1bMl0tLTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHR0aGlzLnJ1bkV2ZW50KGV2ZW50c1tpXSk7XG5cdFx0XHRcdGV2ZW50cy5zcGxpY2UoaSwgMSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cnVuRXZlbnQoZSkge1xuXHRcdFV0aWxpdHkuZGVidWdMb2coZXZlbnRfdG9fc3RyaW5nW2VbMF1dKTtcblx0XHR0aGlzLmhhbmRsZUV2ZW50KGVbMF0sIGVbMV0pO1xuXHRcdGZvcihsZXQgcyBvZiB0aGlzLnN5c3RlbXMpIHtcblx0XHRcdHMuaGFuZGxlRXZlbnQodGhpcywgZVswXSwgZVsxXSk7XG5cdFx0fVxuXHR9XG5cblx0aGFuZGxlRXZlbnQoZXZlbnQsIGRhdGEpIHtcblx0XHRzd2l0Y2goZXZlbnQpIHtcblx0XHRcdGNhc2UgZXZlbnRfbmV3X2dhbWU6XG5cdFx0XHRcdHRoaXMuY2xlYXJFbnRpdGllcygpO1xuXHRcdFx0XHR0aGlzLnNlbmRFdmVudChldmVudF9uZXdfcGxheWVyKTtcblx0XHRcdFx0dGhpcy5zZW5kRXZlbnQoZXZlbnRfbmV3X2xldmVsLCB7ZGVwdGg6IHRoaXMuZGVwdGh9KTtcblx0XHRcdFx0Ly8gdGhpcy5zZW5kRXZlbnQoZ2VuZXJhdGVfbmV3X2xldmVsLCB0aGlzLkR1bmdlb24ubGV2ZWxzW3RoaXMuZGVwdGhdKTtcblx0XHRcdFx0Ly8gdGhpcy5FbnRpdHlTeXN0ZW0uZ2VuZXJhdGVQbGF5ZXIodGhpcyk7XG5cdFx0XHRcdC8vIHRoaXMuTGV2ZWxTeXN0ZW0uZ2VuZXJhdGVMZXZlbCh0aGlzLCB0aGlzLmRlcHRoKTtcblx0XHRcdFx0Ly8gdGhpcy5FbnRpdHlTeXN0ZW0uZ2VuZXJhdGVFbnRpdGllcyh0aGlzLCB0aGlzLkR1bmdlb24ubGV2ZWxzW3RoaXMuZGVwdGhdLCB0aGlzLmRlcHRoKTtcblx0XHRcdFx0Ly8gdGhpcy5MaWdodFN5c3RlbS5nZW5lcmF0ZVRvcmNoZXModGhpcywgdGhpcy5EdW5nZW9uLmxldmVsc1t0aGlzLmRlcHRoXS5tYXAubWFwLCB0aGlzLkR1bmdlb24ubGV2ZWxzW3RoaXMuZGVwdGhdLnJvb21zKTtcblx0XHRcdFx0Ly8gdGhpcy5sb2FkRW50aXRpZXModGhpcy5kZXB0aCk7XG5cdFx0XHRcdC8vIHRoaXMuc2VuZEV2ZW50KGV2ZW50X2JlZ2luX2xldmVsLCB0aGlzLkR1bmdlb24ubGV2ZWxzW3RoaXMuZGVwdGhdLCBMT0FESU5HX1NDUkVFTl9USU1FKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGV2ZW50X2xldmVsX2dlbmVyYXRlZDpcblx0XHRcdFx0dGhpcy5zZW5kRXZlbnQoZXZlbnRfYmVnaW5fbGV2ZWwsIHtkZXB0aDogdGhpcy5kZXB0aH0sIExPQURJTkdfU0NSRUVOX1RJTUUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfcmVzZXRfZ2FtZTpcblx0XHRcdFx0dGhpcy5pbml0KCk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9nYW1lX292ZXI6XG5cdFx0XHRcdHRoaXMucGF1c2UoKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGV2ZW50X2Rvd25fbGV2ZWw6XG5cdFx0XHRcdHRoaXMuZGVwdGgrKztcblx0XHRcdFx0aWYodGhpcy5kZXB0aCA9PSB0aGlzLkR1bmdlb24ubGV2ZWxzLmxlbmd0aCkge1xuXHRcdFx0XHRcdHRoaXMuRHVuZ2Vvbi5lbnRpdGllcy5wdXNoKFtdKTtcblx0XHRcdFx0XHR0aGlzLkxldmVsU3lzdGVtLmdlbmVyYXRlTGV2ZWwodGhpcywgdGhpcy5kZXB0aCk7XG5cdFx0XHRcdFx0dGhpcy5FbnRpdHlTeXN0ZW0uZ2VuZXJhdGVFbnRpdGllcyh0aGlzLCB0aGlzLkR1bmdlb24ubGV2ZWxzW3RoaXMuZGVwdGhdLCB0aGlzLmRlcHRoKTtcblx0XHRcdFx0XHR0aGlzLkxpZ2h0U3lzdGVtLmdlbmVyYXRlVG9yY2hlcyh0aGlzLCB0aGlzLkR1bmdlb24ubGV2ZWxzW3RoaXMuZGVwdGhdLm1hcC5tYXAsIHRoaXMuRHVuZ2Vvbi5sZXZlbHNbdGhpcy5kZXB0aF0ucm9vbXMpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuY2xlYXJFbnRpdGllcygpO1xuXHRcdFx0XHQvLyB0aGlzLmxvYWRFbnRpdGllcyh0aGlzLmRlcHRoKTtcblx0XHRcdFx0dGhpcy5zZW5kRXZlbnQoZXZlbnRfYmVnaW5fbGV2ZWwsIHRoaXMuRHVuZ2Vvbi5sZXZlbHNbdGhpcy5kZXB0aF0sIExPQURJTkdfU0NSRUVOX1RJTUUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdC8vIGNhc2UgZXZlbnRfdXBfbGV2ZWw6XG5cdFx0XHQvLyBcdHRoaXMuZGVwdGgtLTtcblx0XHRcdC8vIFx0dGhpcy5jbGVhckVudGl0aWVzKCk7XG5cdFx0XHQvLyBcdC8vIHRoaXMubG9hZEVudGl0aWVzKHRoaXMuZGVwdGgpO1xuXHRcdFx0Ly8gXHR0aGlzLnNlbmRFdmVudChldmVudF9iZWdpbl9sZXZlbCwgdGhpcy5EdW5nZW9uLmxldmVsc1t0aGlzLmRlcHRoXSwgTE9BRElOR19TQ1JFRU5fVElNRSk7XG5cdFx0XHQvLyBcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdGNyZWF0ZUVudGl0eShjb21wb25lbnRzKSB7XG5cdFx0dGhpcy5hZGRFbnRpdHkobmV3IEdhbWVFbnRpdHkodGhpcy5nZXRGcmVlSUQoKSwgY29tcG9uZW50cykpO1xuXHR9XG5cblx0Z2V0RnJlZUlEKCkge1xuXHRcdGxldCBJRCA9IDE7XG5cdFx0d2hpbGUoSUQgaW4gdGhpcy5lbnRpdGllcykge1xuXHRcdFx0SUQrKztcblx0XHR9XG5cdFx0cmV0dXJuIElEO1xuXHR9XG5cblx0YWRkRW50aXR5KGVudGl0eSkge1xuXG5cdFx0dGhpcy5lbnRpdGllc1tlbnRpdHkuSURdID0gZW50aXR5LmNvbXBvbmVudHM7XG5cblx0XHRmb3IobGV0IHMgb2YgdGhpcy5zeXN0ZW1zKSB7XG5cdFx0XHRzLmFkZEVudGl0eShlbnRpdHkpO1xuXHRcdH1cblxuXHRcdC8vIGlmKG9iamVjdCBpbnN0YW5jZW9mIFBsYXllcikge1xuXHRcdC8vIFx0dGhpcy5EdW5nZW9uLnBsYXllciA9IG9iamVjdDtcblx0XHQvLyB9XG5cdFx0Ly8gaWYob2JqZWN0IGluc3RhbmNlb2YgTGV2ZWwpIHtcblx0XHQvLyBcdHRoaXMuRHVuZ2Vvbi5sZXZlbHNbdGhpcy5kZXB0aF0gPSBvYmplY3Q7XG5cdFx0Ly8gXHRmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRHVuZ2Vvbi5sZXZlbHNbdGhpcy5kZXB0aF0ubWFwLm1hcC5sZW5ndGg7IGkrKykge1xuXHRcdC8vIFx0XHRmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuRHVuZ2Vvbi5sZXZlbHNbdGhpcy5kZXB0aF0ubWFwLm1hcC5sZW5ndGg7IGorKykge1xuXHRcdC8vIFx0XHRcdHRoaXMuYWRkT2JqZWN0KHRoaXMuRHVuZ2Vvbi5sZXZlbHNbdGhpcy5kZXB0aF0ubWFwLm1hcFtpXVtqXSk7XG5cdFx0Ly8gXHRcdH1cblx0XHQvLyBcdH1cblx0XHQvLyB9XG5cdFx0Ly8gaWYob2JqZWN0IGluc3RhbmNlb2YgRW50aXR5KSB7XG5cdFx0Ly8gXHRpZighdGhpcy5EdW5nZW9uLmVudGl0aWVzW3RoaXMuZGVwdGhdLmluY2x1ZGVzKG9iamVjdCkpIHtcblx0XHQvLyBcdFx0dGhpcy5EdW5nZW9uLmVudGl0aWVzW3RoaXMuZGVwdGhdLnB1c2gob2JqZWN0KTtcblx0XHQvLyBcdH1cblx0XHQvLyB9XG5cdH1cblxuXHQvLyBkZXN0cm95RW50aXR5KGVudGl0eSkge1xuXHQvLyBcdGlmKGVudGl0eS5JRCBpbiB0aGlzLmVudGl0aWVzKSB7XG5cdC8vIFx0XHRkZWxldGUgdGhpcy5lbnRpdGllc1tlbnRpdHkuSURdO1xuXHQvLyBcdH1cblxuXHQvLyBcdGZvcihsZXQgcyBvZiB0aGlzLnN5c3RlbXMpIHtcblx0Ly8gXHRcdHMuZGVzdHJveUVudGl0eShlbnRpdHkpO1xuXHQvLyBcdH1cblx0Ly8gfVxuXG5cdGRlc3Ryb3lFbnRpdHkoSUQpIHtcblx0XHRpZihJRCBpbiB0aGlzLmVudGl0aWVzKSB7XG5cdFx0XHRkZWxldGUgdGhpcy5lbnRpdGllc1tJRF07XG5cdFx0fVxuXHRcdGZvcihsZXQgcyBvZiB0aGlzLnN5c3RlbXMpIHtcblx0XHRcdHMuZGVzdHJveUVudGl0eShJRCk7XG5cdFx0fVxuXHR9XG5cblx0Y2xlYXJFbnRpdGllcygpIHtcblx0XHRmb3IobGV0IElEIGluIHRoaXMuZW50aXRpZXMpIHtcblx0XHRcdGlmKCFVdGlsaXR5LmVudGl0eUhhc0RlcHRoKHRoaXMuZW50aXRpZXNbSURdKSkge1xuXHRcdFx0XHR0aGlzLmRlc3Ryb3lFbnRpdHkoSUQpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vTE9DQUwgU1RPUkFHRSB2cyBTRVNTSU9OIFNUT1JBR0UgPz8/IGZvciBzYXZpbmcgcnVucyBhZnRlciBwYWdlIGV4aXRcblx0c2F2ZUxldmVsKCkge1xuXG5cdFx0bGV0IGxldmVsX2RhdGEgPSB7fTtcblxuXHRcdGlmKHNlc3Npb25TdG9yYWdlLmxlbmd0aCA+IDApIHtcblx0XHRcdGxldmVsX2RhdGEgPSBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLkxFVkVMX0RBVEEpO1xuXHRcdH1cblxuXHRcdGxldmVsX2RhdGFbdGhpcy5kZXB0aF0gPSBbXTtcblxuXHRcdGZvcihsZXQgZW50aXR5SUQgaW4gdGhpcy5lbnRpdGllcykge1xuXHRcdFx0aWYoIVV0aWxpdHkuZW50aXR5SGFzRGVwdGgodGhpcy5lbnRpdGllc1tlbnRpdHlJRF0pKSB7XG5cdFx0XHRcdGxldmVsX2RhdGFbdGhpcy5kZXB0aF0ucHVzaCh0aGlzLmVudGl0aWVzW2VudGl0aXlJRF0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdGxvYWRMZXZlbChsZXZlbERlcHRoKSB7XG5cblx0XHR0aGlzLmNsZWFyRW50aXRpZXMoKTtcblxuXHRcdGxldCBsZXZlbF9kYXRhID0ge307XG5cdFx0aWYoc2Vzc2lvblN0b3JhZ2UubGVuZ3RoID4gMCkge1xuXHRcdFx0bGV2ZWxfZGF0YSA9IEpTT04ucGFyc2Uoc2Vzc2lvblN0b3JhZ2UuTEVWRUxfREFUQSk7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0YWxlcnQoXCJFcnJvciBsb2FkaW5nIGxldmVsLCBzZXNzaW9uU3RvcmFnZSBoYXMgbm8gZGF0YVwiKTtcblx0XHR9XG5cblx0XHRmb3IobGV0IGVudGl0eVdpdGhvdXREZXB0aCBvZiBsZXZlbF9kYXRhW2xldmVsRGVwdGhdKSB7XG5cdFx0XHR0aGlzLmFkZEVudGl0eShlbnRpdHlXaXRob3V0RGVwdGgpO1xuXHRcdH1cblxuXHRcdHRoaXMuZGVwdGggPSBsZXZlbERlcHRoO1xuXHRcdHRoaXMuc2VuZEV2ZW50KGV2ZW50X2xldmVsX2xvYWRlZCwgdGhpcy5kZXB0aCk7XG5cdH1cblxuXHQvLyBwcmludEV2ZW50KGUpIHtcblx0Ly8gXHRmb3Ioa2V5IGluIHdpbmRvdykge1xuXHQvLyBcdFx0aWYoZVswXSA9PSB3aW5kb3dba2V5XSAmJiBrZXkuaW5jbHVkZXMoJ2V2ZW50XycpKSB7XG5cdC8vIFx0XHRcdFV0aWxpdHkuZGVidWdMb2coa2V5KTtcblx0Ly8gXHRcdH1cblx0Ly8gXHR9XG5cdC8vIH1cbn1cbiIsImNsYXNzIFV0aWxpdHkge1xuXG5cdHN0YXRpYyBkZWJ1Z0xvZyhtZXNzYWdlKSB7XG5cdFx0aWYoREVCVUdfTU9ERSkge1xuXHRcdFx0aWYobWVzc2FnZSAhPSB1bmRlZmluZWQpIHtcblx0XHRcdFx0Y29uc29sZS5sb2cobWVzc2FnZSk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0Y29uc29sZS5sb2coXCJObyBldmVudCBzdHJpbmcgZm91bmRcIik7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0c3RhdGljIGNvbGxpc2lvbihvMSwgbzIpIHtcblx0XHRyZXR1cm4gIShvMS50b3AgPj0gbzIuYm90dG9tIHx8IG8xLnJpZ2h0IDw9IG8yLmxlZnQgfHwgbzEuYm90dG9tIDw9IG8yLnRvcCB8fCBvMS5sZWZ0ID49IG8yLnJpZ2h0KTtcblx0fVxuXG5cdHN0YXRpYyBjaGVja0NvbXBvbmVudHMoZW50aXR5Q29tcG9uZW50cywgc3lzdGVtQ29tcG9uZW50cykge1xuXHRcdGZvcihsZXQgY29tcG9uZW50IG9mIHN5c3RlbUNvbXBvbmVudHMpIHtcblx0XHRcdGlmKCEoY29tcG9uZW50IGluIGVudGl0eUNvbXBvbmVudHMpKSByZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0c3RhdGljIGVudGl0eUhhc0NvbXBvbmVudChlbnRpdHksIGNvbXBvbmVudCkge1xuXHRcdHJldHVybiBjb21wb25lbnQgaW4gZW50aXR5O1xuXHR9XG5cblx0c3RhdGljIGVudGl0eUhhc0RlcHRoKGVudGl0eSkge1xuXHRcdGZvcihsZXQgY29tcG9uZW50IG9mIGVudGl0eS5jb21wb25lbnRzKSB7XG5cdFx0XHRpZihjb21wb25lbnQgaW5zdGFuY2VvZiBEZXB0aENvbXBvbmVudCkgcmV0dXJuIHRydWU7XG5cdFx0fVxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdHN0YXRpYyBnZXRIZWFsdGhQZXJjZW50KGVudGl0eSkge1xuXHRcdHJldHVybiBlbnRpdHlbY29tcG9uZW50X2hlYWx0aF0uY3VycmVudEhlYWx0aCAvIGVudGl0eVtjb21wb25lbnRfaGVhbHRoXS5tYXhIZWFsdGg7XG5cdH1cblxuXHRzdGF0aWMgZ2V0Q3VycmVudEhlYXJ0QW1vdW50KGVudGl0eSl7XG5cdFx0cmV0dXJuIGZsb29yKGVudGl0eVtjb21wb25lbnRfaGVhbHRoXS5jdXJyZW50SGVhbHRoIC8gMTApO1xuXHR9XG5cblx0c3RhdGljIGdldE1heEhlYXJ0QW1vdW50KGVudGl0eSl7XG5cdFx0cmV0dXJuIGZsb29yKGVudGl0eVtjb21wb25lbnRfaGVhbHRoXS5tYXhIZWFsdGggLyAxMCk7XG5cdH1cblxuXG5cdHN0YXRpYyBlbnRpdHlBY3Rpb25TdWNjZXNzZnVsKGVudGl0eSkge1xuXHRcdGVudGl0eS5hY3Rpb25zLmJ1c3kgPSBhY3Rpb25fbGVuZ3RoW2VudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb25dO1xuXG5cdFx0ZW50aXR5LmFuaW1hdGlvbi5uZXdBbmltYXRpb24gPSB0cnVlO1xuXHRcdGVudGl0eS5hbmltYXRpb24uYW5pbWF0aW9uID0gYWN0aW9uX3RvX2FuaW1hdGlvbltlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uXTtcblxuXHRcdGVudGl0eS5hY3Rpb25zLmZhaWxlZEFjdGlvbiA9IGFjdGlvbl9ub25lO1xuXHRcdGVudGl0eS5hY3Rpb25zLmxhc3RBY3Rpb24gPSBlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uO1xuXHRcdGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb24gPSBhY3Rpb25fbm9uZTtcblx0fVxuXG5cdHN0YXRpYyBlbnRpdHlBY3Rpb25GYWlsZWQoZW50aXR5KSB7XG5cdFx0ZW50aXR5LmFjdGlvbnMubGFzdEFjdGlvbiA9IGFjdGlvbl9ub25lO1xuXHRcdGVudGl0eS5hY3Rpb25zLmZhaWxlZEFjdGlvbiA9IGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb247XG5cdFx0ZW50aXR5LmFjdGlvbnMuY3VycmVudEFjdGlvbiA9IGFjdGlvbl9ub25lO1xuXHR9XG5cblx0c3RhdGljIGdldFNxdWFyZXNJbkZyb250KGVuZ2luZSwgcG9zaXRpb24sIGRpcmVjdGlvbiwgcmFuZ2UpIHtcblx0XHRsZXQgc3F1YXJlcyA9IFtdO1xuXHRcdGxldCBtYXAgPSBlbmdpbmUuZ2V0TWFwKCk7XG5cdFx0c3dpdGNoKGRpcmVjdGlvbikge1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fdXA6XG5cdFx0XHRcdGZvcihsZXQgaSA9IDA7IGkgPCByYW5nZTsgaSsrKSB7XG5cdFx0XHRcdFx0Zm9yKGxldCBqID0gMDsgaiA8IHJhbmdlIC0gaTsgaisrKSB7XG5cdFx0XHRcdFx0XHRpZihwb3NpdGlvbi55IC0gKGkgKyAxKSA+PSAwKSB7XG5cdFx0XHRcdFx0XHRcdGlmKHBvc2l0aW9uLnggLSBqID49IDApIHtcblx0XHRcdFx0XHRcdFx0XHRzcXVhcmVzLnB1c2gobWFwW3Bvc2l0aW9uLnggLSBqXVtwb3NpdGlvbi55IC0gKGkgKyAxKV0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGlmKGogIT0gMCAmJiBwb3NpdGlvbi54ICsgaiA8IG1hcC5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdFx0XHRzcXVhcmVzLnB1c2gobWFwW3Bvc2l0aW9uLnggKyBqXVtwb3NpdGlvbi55IC0gKGkgKyAxKV0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fcmlnaHQ6XG5cdFx0XHRcdGZvcihsZXQgaSA9IDA7IGkgPCByYW5nZTsgaSsrKSB7XG5cdFx0XHRcdFx0Zm9yKGxldCBqID0gMDsgaiA8IHJhbmdlIC0gaTsgaisrKSB7XG5cdFx0XHRcdFx0XHRpZihwb3NpdGlvbi54ICsgKGkgKyAxKSA8IG1hcC5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdFx0aWYocG9zaXRpb24ueSAtIGogPj0gMCkge1xuXHRcdFx0XHRcdFx0XHRcdHNxdWFyZXMucHVzaChtYXBbcG9zaXRpb24ueCArIChpICsgMSldW3Bvc2l0aW9uLnkgLSBqXSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYoaiAhPSAwICYmIHBvc2l0aW9uLnkgKyBqIDwgbWFwLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0XHRcdHNxdWFyZXMucHVzaChtYXBbcG9zaXRpb24ueCArIChpICsgMSldW3Bvc2l0aW9uLnkgKyBqXSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGRpcmVjdGlvbl9kb3duOlxuXHRcdFx0XHRmb3IobGV0IGkgPSAwOyBpIDwgcmFuZ2U7IGkrKykge1xuXHRcdFx0XHRcdGZvcihsZXQgaiA9IDA7IGogPCByYW5nZSAtIGk7IGorKykge1xuXHRcdFx0XHRcdFx0aWYocG9zaXRpb24ueSArIChpICsgMSkgPCBtYXAubGVuZ3RoKSB7XG5cdFx0XHRcdFx0XHRcdGlmKHBvc2l0aW9uLnggLSBqID49IDApIHtcblx0XHRcdFx0XHRcdFx0XHRzcXVhcmVzLnB1c2gobWFwW3Bvc2l0aW9uLnggLSBqXVtwb3NpdGlvbi55ICsgKGkgKyAxKV0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGlmKGogIT0gMCAmJiBwb3NpdGlvbi54ICsgaiA8IG1hcC5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdFx0XHRzcXVhcmVzLnB1c2gobWFwW3Bvc2l0aW9uLnggKyBqXVtwb3NpdGlvbi55ICsgKGkgKyAxKV0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fbGVmdDpcblx0XHRcdFx0Zm9yKGxldCBpID0gMDsgaSA8IHJhbmdlOyBpKyspIHtcblx0XHRcdFx0XHRmb3IobGV0IGogPSAwOyBqIDwgcmFuZ2UgLSBpOyBqKyspIHtcblx0XHRcdFx0XHRcdGlmKHBvc2l0aW9uLnggLSAoaSArIDEpID49IDApIHtcblx0XHRcdFx0XHRcdFx0aWYocG9zaXRpb24ueSAtIGogPj0gMCkge1xuXHRcdFx0XHRcdFx0XHRcdHNxdWFyZXMucHVzaChtYXBbcG9zaXRpb24ueCAtIChpICsgMSldW3Bvc2l0aW9uLnkgLSBqXSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYoaiAhPSAwICYmIHBvc2l0aW9uLnkgKyBqIDwgbWFwLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0XHRcdHNxdWFyZXMucHVzaChtYXBbcG9zaXRpb24ueCAtIChpICsgMSldW3Bvc2l0aW9uLnkgKyBqXSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHRcdHJldHVybiBzcXVhcmVzO1xuXHR9XG5cblx0c3RhdGljIGdldFNxdWFyZXNBcm91bmQoZW5naW5lLCBwb3NpdGlvbiwgcmFuZ2UpIHtcblx0XHRsZXQgc3F1YXJlcyA9IFtdO1xuXHRcdGxldCBtYXAgPSBlbmdpbmUuZ2V0TWFwKCk7XG5cdFx0Zm9yKGxldCBpID0gcG9zaXRpb24ueCAtIHJhbmdlOyBpIDw9IHBvc2l0aW9uLnggKyByYW5nZTsgaSsrKSB7XG5cdFx0XHRmb3IobGV0IGogPSBwb3NpdGlvbi55IC0gcmFuZ2U7IGogPD0gcG9zaXRpb24ueSArIHJhbmdlOyBqKyspIHtcblx0XHRcdFx0aWYoVXRpbGl0eS5wb3NpdGlvbkluQm91bmRzKG5ldyBQb3NpdGlvbkNvbXBvbmVudChpLCBqKSwgZW5naW5lLmdldE1hcCgpLmxlbmd0aCkpIHtcblx0XHRcdFx0XHRzcXVhcmVzLnB1c2gobWFwW2ldW2pdKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gc3F1YXJlcztcblx0fVxuXG5cdHN0YXRpYyBnZXRFbnRpdGllc0luU3F1YXJlcyhlbmdpbmUsIHNxdWFyZXMpIHtcblx0XHRsZXQgZW50aXRpZXMgPSBbXTtcblx0XHRsZXQgZWxpc3QgPSBlbmdpbmUuZ2V0RW50aXRpZXMoKTtcblx0XHRmb3IobGV0IHMgb2Ygc3F1YXJlcykge1xuXHRcdFx0Zm9yKGxldCBlIG9mIGVsaXN0KSB7XG5cdFx0XHRcdGlmKGUuY29tcG9uZW50cy5pbmNsdWRlcyhjb21wb25lbnRfcG9zaXRpb24pICYmIGUucG9zaXRpb24ueCA9PSBzLnBvc2l0aW9uLnggJiYgZS5wb3NpdGlvbi55ID09IHMucG9zaXRpb24ueSkge1xuXHRcdFx0XHRcdGVudGl0aWVzLnB1c2goZSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZihlLmNvbXBvbmVudHMuaW5jbHVkZXMoY29tcG9uZW50X2NvbGxpc2lvbikgJiYgVXRpbGl0eS5jb2xsaXNpb24oZS5jb2xsaXNpb24sIG5ldyBDb2xsaXNpb25Db21wb25lbnQocy5wb3NpdGlvbi54LCBzLnBvc2l0aW9uLnksIDEpKSkge1xuXHRcdFx0XHRcdGVudGl0aWVzLnB1c2goZSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGVudGl0aWVzO1xuXHR9XG5cblx0c3RhdGljIGVudGl0eVdpdGhpblJhbmdlKGUxLCBlMiwgZGlzdCkge1xuXHRcdHJldHVybiBhYnMoZTEucG9zaXRpb24ueCAtIGUyLnBvc2l0aW9uLngpIDwgZGlzdCAmJiBhYnMoZTEucG9zaXRpb24ueSAtIGUyLnBvc2l0aW9uLnkpIDwgZGlzdDtcblx0fVxuXG5cdHN0YXRpYyBwb3NpdGlvbkluUmFuZ2UocDEsIHAyLCBkaXN0KSB7XG5cdFx0cmV0dXJuIGFicyhwMS54IC0gcDIueCkgPCBkaXN0ICYmIGFicyhwMS55IC0gcDIueSkgPCBkaXN0O1xuXHR9XG5cblx0c3RhdGljIGVudGl0eURpc3RhbmNlKGUxLCBlMikge1xuXHRcdGlmKGUxLmNvbGxpc2lvbi53aWR0aCA9PSAxICYmIGUxLmNvbGxpc2lvbi5oZWlnaHQgPT0gMSAmJiBlMi5jb2xsaXNpb24ud2lkdGggPT0gMSAmJiBlMi5jb2xsaXNpb24uaGVpZ2h0ID09IDEpIHtcblx0XHRcdHJldHVybiBVdGlsaXR5LmRpc3RhbmNlKGUxLnBvc2l0aW9uLCBlMi5wb3NpdGlvbik7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0bGV0IHhEaXN0ID0gMDtcblx0XHRcdGlmKGUxLmNvbGxpc2lvbi5sZWZ0ID49IGUyLmNvbGxpc2lvbi5yaWdodCkge1xuXHRcdFx0XHR4RGlzdCA9IGFicyhlMS5jb2xsaXNpb24ubGVmdCAtIChlMi5jb2xsaXNpb24ucmlnaHQgLSAxKSk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIGlmKGUxLmNvbGxpc2lvbi5yaWdodCA8PSBlMi5jb2xsaXNpb24ubGVmdCkge1xuXHRcdFx0XHR4RGlzdCA9IGFicygoZTEuY29sbGlzaW9uLnJpZ2h0IC0gMSkgLSBlMi5jb2xsaXNpb24ubGVmdCk7XG5cdFx0XHR9XG5cdFx0XHRsZXQgeURpc3QgPSAwO1xuXHRcdFx0aWYoZTEuY29sbGlzaW9uLnRvcCA+PSBlMi5jb2xsaXNpb24uYm90dG9tKSB7XG5cdFx0XHRcdHlEaXN0ID0gYWJzKGUxLmNvbGxpc2lvbi50b3AgLSAoZTIuY29sbGlzaW9uLmJvdHRvbSAtIDEpKTtcblx0XHRcdH1cblx0XHRcdGVsc2UgaWYoZTEuY29sbGlzaW9uLmJvdHRvbSA8PSBlMi5jb2xsaXNpb24udG9wKSB7XG5cdFx0XHRcdHlEaXN0ID0gYWJzKChlMS5jb2xsaXNpb24uYm90dG9tIC0gMSkgLSBlMi5jb2xsaXNpb24udG9wKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB4RGlzdCArIHlEaXN0O1xuXHRcdH1cblx0fVxuXG5cdHN0YXRpYyBkaXN0YW5jZShwMSwgcDIpIHtcblx0XHRyZXR1cm4gYWJzKHAxLnggLSBwMi54KSArIGFicyhwMS55IC0gcDIueSk7XG5cdH1cblxuXHRzdGF0aWMgZ2V0RGlyZWN0aW9uVG9FbnRpdHkoZTEsIGUyKSB7XG5cdFx0aWYoZTEucG9zaXRpb24ueSA+IGUyLnBvc2l0aW9uLnkpIHsgcmV0dXJuIGRpcmVjdGlvbl91cDsgfVxuXHRcdGlmKGUxLnBvc2l0aW9uLnggPCBlMi5wb3NpdGlvbi54KSB7IHJldHVybiBkaXJlY3Rpb25fcmlnaHQ7fVxuXHRcdGlmKGUxLnBvc2l0aW9uLnkgPCBlMi5wb3NpdGlvbi55KSB7IHJldHVybiBkaXJlY3Rpb25fZG93bjsgfVxuXHRcdGlmKGUxLnBvc2l0aW9uLnggPiBlMi5wb3NpdGlvbi54KSB7IHJldHVybiBkaXJlY3Rpb25fbGVmdDsgfVxuXHR9XG5cblx0c3RhdGljIHNob3J0ZXN0UGF0aChtYXAsIHN0YXJ0UG9zaXRpb24sIGVuZFBvc2l0aW9uKSB7XG5cdFx0Ly8gbGV0IG5vZGVNYXAgPSBVdGlsaXR5LmNvbnZlcnRNYXBUb05vZGVzKG1hcCk7XG5cdFx0Ly8gbGV0IHNlYXJjaGluZyA9IFtdO1xuXG5cdFx0Ly8gbGV0IHN0YXJ0ID0gbm9kZU1hcFtzdGFydFBvc2l0aW9uLnhdW3N0YXJ0UG9zaXRpb24ueV07XG5cdFx0Ly8gbGV0IGVuZCA9IG5vZGVNYXBbZW5kUG9zaXRpb24ueF1bZW5kUG9zaXRpb24ueV07XG5cblx0XHQvLyBzZWFyY2hpbmcucHVzaChzdGFydCk7XG5cdFx0Ly8gc3RhcnQuZGlzdEZyb21TdGFydCA9IDA7XG5cdFx0Ly8gc3RhcnQuZmluYWxDb3N0ID0gVXRpbGl0eS5kaXN0YW5jZShzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbik7XG5cdFx0Ly8gLy8gc3RhcnQuY2FtZUZyb20gPSB1bmRlZmluZWQ7XG5cblx0XHQvLyB3aGlsZSAoc2VhcmNoaW5nLmxlbmd0aCA+IDApIHtcblx0XHQvLyBcdGxldCBjdXJyZW50ID0gc2VhcmNoaW5nWzBdO1xuXHRcdC8vIFx0Zm9yIChsZXQgbm9kZSBvZiBzZWFyY2hpbmcpIHtcblx0XHQvLyBcdFx0aWYgKG5vZGUuZmluYWxDb3N0IDwgY3VycmVudC5maW5hbENvc3QpIHtcblx0XHQvLyBcdFx0XHRjdXJyZW50ID0gbm9kZTtcblx0XHQvLyBcdFx0fVxuXHRcdC8vIFx0fVxuXG5cdFx0Ly8gXHRpZihjdXJyZW50ID09IGVuZCkge1xuXHRcdC8vIFx0XHRyZXR1cm4gbWFrZVBhdGgoY3VycmVudCk7XG5cdFx0Ly8gXHR9XG5cblx0XHQvLyBcdHNlYXJjaGluZy5zcGxpY2Uoc2VhcmNoaW5nLmluZGV4T2YoY3VycmVudCksIDEpO1xuXHRcdC8vIFx0Y3VycmVudC5zZWFyY2hlZCA9IHRydWU7XG5cblx0XHQvLyBcdGxldCBjdXJyZW50TmVpZ2hib3JzID0gZ2V0TmVpZ2hib3JzKGJvYXJkLCBjdXJyZW50KTtcblx0XHQvLyBcdGZvcihsZXQgbiBvZiBjdXJyZW50TmVpZ2hib3JzKSB7XG5cdFx0Ly8gXHRcdGlmICghbi5zZWFyY2hlZCkge1xuXHRcdC8vIFx0XHRcdGxldCBlc3RpbWF0ZWREaXN0RnJvbVN0YXJ0ID0gVXRpbGl0eS5kaXN0YW5jZSgpO1xuXG5cdFx0Ly8gXHRcdFx0aWYgKCFzZWFyY2hpbmcuaW5jbHVkZXMobikpIHtcblx0XHQvLyBcdFx0XHRcdHNlYXJjaGluZy5wdXNoKG4pO1xuXHRcdC8vIFx0XHRcdH1cblx0XHQvLyBcdFx0XHRlbHNlIGlmIChlc3RpbWF0ZWREaXN0RnJvbVN0YXJ0ID49IGRpc3RGcm9tU3RhcnRbbl0pIHtcblx0XHQvLyBcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdC8vIFx0XHRcdH1cblxuXHRcdC8vIFx0XHRcdGNhbWVGcm9tW1V0aWxpdHkuZ2V0U3F1YXJlQ29kZShuLnBvc2l0aW9uLngsIG4ucG9zaXRpb24ueSldID0gVXRpbGl0eS5nZXRTcXVhcmVDb2RlKGN1cnJlbnQucG9zaXRpb24ueCwgY3VycmVudC5wb3NpdGlvbi55KTtcblx0XHQvLyBcdFx0XHRkaXN0RnJvbVN0YXJ0W25dID0gZXN0aW1hdGVkRGlzdEZyb21TdGFydDtcblx0XHQvLyBcdFx0XHRmaW5hbENvc3Rbbl0gPSBkaXN0RnJvbVN0YXJ0W25dICsgc3F1YXJlRGlzdGFuY2Uoc3RhcnQsIGVuZCk7XG5cdFx0Ly8gXHRcdH1cblx0XHQvLyBcdH1cblx0XHQvLyB9XG5cdFx0Ly8gcmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0c3RhdGljIGNvbnZlcnRNYXBUb05vZGVzKG1hcCkge1xuXHRcdGxldCBub2RlTWFwID0gbmV3IEFycmF5KG1hcC5sZW5ndGgpO1xuXHRcdGZvcihsZXQgaSA9IDA7IGkgPCBtYXAubGVuZ3RoOyBpKyspIHtcblx0XHRcdG5vZGVNYXBbaV0gPSBuZXcgQXJyYXkobWFwLmxlbmd0aCk7XG5cdFx0XHRmb3IobGV0IGogPSAwOyBqIDwgbWFwLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdG5vZGVNYXBbaV1bal0gPSB7XG5cdFx0XHRcdFx0J3NlYXJjaGVkJzogZmFsc2UsXG5cdFx0XHRcdFx0J2NhbWVGcm9tJzogdW5kZWZpbmVkLFxuXHRcdFx0XHRcdCdkaXN0RnJvbVN0YXJ0JzogMTAwMDAsXG5cdFx0XHRcdFx0J2ZpbmFsQ29zdCc6IDEwMDAwXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIG5vZGVNYXA7XG5cdH1cblxuXHRzdGF0aWMgZ2V0Q29sbGlzaW9uSW5Gcm9udE9mKGVudGl0eSkge1xuXHRcdHJldHVybiBVdGlsaXR5LmdldENvbGxpc2lvbkluRGlyZWN0aW9uKGVudGl0eSwgZW50aXR5LmRpcmVjdGlvbi5kaXJlY3Rpb24pO1xuXHR9XG5cblx0c3RhdGljIGdldENvbGxpc2lvbkluRGlyZWN0aW9uKGVudGl0eSwgZGlyZWN0aW9uKSB7XG5cdFx0c3dpdGNoKGRpcmVjdGlvbikge1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fdXA6XG5cdFx0XHRcdHJldHVybiBuZXcgQ29sbGlzaW9uQ29tcG9uZW50KGVudGl0eS5jb2xsaXNpb24ubGVmdCwgZW50aXR5LmNvbGxpc2lvbi50b3AgLSAxLCBlbnRpdHkuY29sbGlzaW9uLndpZHRoLCAxKTtcblx0XHRcdGNhc2UgZGlyZWN0aW9uX3JpZ2h0OlxuXHRcdFx0XHRyZXR1cm4gbmV3IENvbGxpc2lvbkNvbXBvbmVudChlbnRpdHkuY29sbGlzaW9uLnJpZ2h0LCBlbnRpdHkuY29sbGlzaW9uLnRvcCwgMSwgZW50aXR5LmNvbGxpc2lvbi5oZWlnaHQpO1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fZG93bjpcblx0XHRcdFx0cmV0dXJuIG5ldyBDb2xsaXNpb25Db21wb25lbnQoZW50aXR5LmNvbGxpc2lvbi5sZWZ0LCBlbnRpdHkuY29sbGlzaW9uLmJvdHRvbSwgZW50aXR5LmNvbGxpc2lvbi53aWR0aCwgMSk7XG5cdFx0XHRjYXNlIGRpcmVjdGlvbl9sZWZ0OlxuXHRcdFx0XHRyZXR1cm4gbmV3IENvbGxpc2lvbkNvbXBvbmVudChlbnRpdHkuY29sbGlzaW9uLmxlZnQgLSAxLCBlbnRpdHkuY29sbGlzaW9uLnRvcCwgMSwgZW50aXR5LmNvbGxpc2lvbi5oZWlnaHQpO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0Y29uc29sZS5sb2coXCJDYW5ub3QgZGV0ZXJtaW5lIGRpcmVjdGlvblwiKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0fVxuXG5cdHN0YXRpYyBlbnRpdHlBZGphY2VudChlbnRpdHksIG90aGVyRW50aXR5KSB7XG5cdFx0bGV0IGMxID0gZW50aXR5LmNvbGxpc2lvbiwgYzIgPSBvdGhlckVudGl0eS5jb2xsaXNpb247XG5cdFx0aWYgKFV0aWxpdHkuY29sbGlzaW9uKFV0aWxpdHkuZ2V0Q29sbGlzaW9uSW5EaXJlY3Rpb24oZW50aXR5LCBkaXJlY3Rpb25fdXApLCBjMikpIHtcblx0XHRcdHJldHVybiBkaXJlY3Rpb25fdXA7XG5cdFx0fVxuXHRcdGVsc2UgaWYgKFV0aWxpdHkuY29sbGlzaW9uKFV0aWxpdHkuZ2V0Q29sbGlzaW9uSW5EaXJlY3Rpb24oZW50aXR5LCBkaXJlY3Rpb25fcmlnaHQpLCBjMikpIHtcblx0XHRcdHJldHVybiBkaXJlY3Rpb25fcmlnaHQ7XG5cdFx0fVxuXHRcdGVsc2UgaWYgKFV0aWxpdHkuY29sbGlzaW9uKFV0aWxpdHkuZ2V0Q29sbGlzaW9uSW5EaXJlY3Rpb24oZW50aXR5LCBkaXJlY3Rpb25fZG93biksIGMyKSkge1xuXHRcdFx0cmV0dXJuIGRpcmVjdGlvbl9kb3duO1xuXHRcdH1cblx0XHRlbHNlIGlmIChVdGlsaXR5LmNvbGxpc2lvbihVdGlsaXR5LmdldENvbGxpc2lvbkluRGlyZWN0aW9uKGVudGl0eSwgZGlyZWN0aW9uX2xlZnQpLCBjMikpIHtcblx0XHRcdHJldHVybiBkaXJlY3Rpb25fbGVmdDtcblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHRyZXR1cm4gLTE7XG5cdFx0fVxuXHR9XG5cblx0c3RhdGljIGdldFNxdWFyZU5laWdoYm9ycyh4LCB5LCBtYXApIHtcblx0XHRuZWlnaGJvcnMgPSBbXTtcblx0XHRpZih4ID4gMCkge1xuXHRcdFx0bmVpZ2hib3JzLnB1c2gobWFwW3ggLSAxXVt5XSk7XG5cdFx0fVxuXHRcdGlmKHkgPiAwKSB7XG5cdFx0XHRuZWlnaGJvcnMucHVzaChtYXBbeF1beSAtIDFdKTtcblx0XHR9XG5cdFx0aWYoeCA8IG1hcC5sZW5ndGggLSAxKSB7XG5cdFx0XHRuZWlnaGJvcnMucHVzaChtYXBbeCArIDFdW3ldKTtcblx0XHR9XG5cdFx0aWYoeSA8IG1hcC5sZW5ndGggLSAxKSB7XG5cdFx0XHRuZWlnaGJvcnMucHVzaChtYXBbeF1beSArIDFdKTtcblx0XHR9XG5cdFx0cmV0dXJuIG5laWdoYm9ycztcblx0fVxuXG5cdHN0YXRpYyBmaW5kTW9iUGF0aChib2FyZCwgbW9iLCBwbGF5ZXIpIHtcblx0XHRyZXR1cm4gZmluZFBhdGgoYm9hcmQsIGJvYXJkW21vYi5wb3NpdGlvbi54XVttb2IucG9zaXRpb24ueV0sIGJvYXJkW3BsYXllci5wb3NpdGlvbi54XVtwbGF5ZXIucG9zaXRpb24ueV0pO1xuXHR9XG5cblx0c3RhdGljIHdhbGthYmxlKHgsIHksIG1hcCwgZW50aXR5LCBvYmplY3RzKXtcblx0XHRyZXR1cm4gVXRpbGl0eS5wb3NpdGlvbkluQm91bmRzKG5ldyBQb3NpdGlvbkNvbXBvbmVudCh4LCB5KSwgbWFwLmxlbmd0aCkgJiYgVXRpbGl0eS5zcXVhcmVJc1dhbGthYmxlKG1hcFt4XVt5XSwgZW50aXR5KSAmJiAhVXRpbGl0eS5zcXVhcmVJc09jY3VwaWVkKHgsIHksIGVudGl0eSwgb2JqZWN0cyk7XG5cdH1cblxuXHRzdGF0aWMgcG9zaXRpb25PblNjcmVlbih4LCB5LCB3LCBoKSB7XG5cdFx0cmV0dXJuIHggPiAtdyAmJiB4IDwgd2lkdGggKyB3ICYmIHkgPiAtaCAmJiB5IDwgaGVpZ2h0ICsgaDtcblx0fVxuXG5cdHN0YXRpYyBwb3NpdGlvbkluQm91bmRzKHBvc2l0aW9uLCBzaXplKXtcblx0XHRyZXR1cm4gcG9zaXRpb24ueCA+PSAwICYmIHBvc2l0aW9uLnggPCBzaXplICYmIHBvc2l0aW9uLnkgPj0gMCAmJiBwb3NpdGlvbi55IDwgc2l6ZTtcblx0fVxuXG5cdHN0YXRpYyBzcXVhcmVJbkJvdW5kcyhzcXVhcmUsIHNpemUpIHtcblx0XHRyZXR1cm4gc3F1YXJlLnBvc2l0aW9uLnggPj0gMCAmJiBzcXVhcmUucG9zaXRpb24ueCA8IHNpemUgJiYgc3F1YXJlLnBvc2l0aW9uLnkgPj0gMCAmJiBzcXVhcmUucG9zaXRpb24ueSA8IHNpemU7XG5cdH1cblxuXHRzdGF0aWMgZ2V0TmVpZ2hib3JzKHNxdWFyZSwgbWFwKSB7XG5cdFx0bGV0IG5laWdoYm9ycyA9IG5ldyBBcnJheSg0KTtcblx0XHRpZihVdGlsaXR5LnBvc2l0aW9uSW5Cb3VuZHMobmV3IFBvc2l0aW9uQ29tcG9uZW50KHNxdWFyZS5wb3NpdGlvbi54LCBzcXVhcmUucG9zaXRpb24ueSAtIDEpLCBtYXAubGVuZ3RoKSkge1xuXHRcdFx0bmVpZ2hib3JzWzBdID0gKG1hcFtzcXVhcmUucG9zaXRpb24ueF1bc3F1YXJlLnBvc2l0aW9uLnkgLSAxXSk7XG5cdFx0fVxuXHRcdGlmKFV0aWxpdHkucG9zaXRpb25JbkJvdW5kcyhuZXcgUG9zaXRpb25Db21wb25lbnQoc3F1YXJlLnBvc2l0aW9uLnggKyAxLCBzcXVhcmUucG9zaXRpb24ueSksIG1hcC5sZW5ndGgpKSB7XG5cdFx0XHRuZWlnaGJvcnNbMV0gPSAobWFwW3NxdWFyZS5wb3NpdGlvbi54ICsgMV1bc3F1YXJlLnBvc2l0aW9uLnldKTtcblx0XHR9XG5cdFx0aWYoVXRpbGl0eS5wb3NpdGlvbkluQm91bmRzKG5ldyBQb3NpdGlvbkNvbXBvbmVudChzcXVhcmUucG9zaXRpb24ueCwgc3F1YXJlLnBvc2l0aW9uLnkgKyAxKSwgbWFwLmxlbmd0aCkpIHtcblx0XHRcdG5laWdoYm9yc1syXSA9IChtYXBbc3F1YXJlLnBvc2l0aW9uLnhdW3NxdWFyZS5wb3NpdGlvbi55ICsgMV0pO1xuXHRcdH1cblx0XHRpZihVdGlsaXR5LnBvc2l0aW9uSW5Cb3VuZHMobmV3IFBvc2l0aW9uQ29tcG9uZW50KHNxdWFyZS5wb3NpdGlvbi54IC0gMSwgc3F1YXJlLnBvc2l0aW9uLnkpLCBtYXAubGVuZ3RoKSkge1xuXHRcdFx0bmVpZ2hib3JzWzNdID0gKG1hcFtzcXVhcmUucG9zaXRpb24ueCAtIDFdW3NxdWFyZS5wb3NpdGlvbi55XSk7XG5cdFx0fVxuXHRcdHJldHVybiBuZWlnaGJvcnM7XG5cdH1cblxuXHRzdGF0aWMgZ2V0Q29ybmVyTmVpZ2hib3JzKHNxdWFyZSwgbWFwKSB7XG5cdFx0bGV0IG5laWdoYm9ycyA9IG5ldyBBcnJheSg0KTtcblx0XHRpZihVdGlsaXR5LnBvc2l0aW9uSW5Cb3VuZHMobmV3IFBvc2l0aW9uQ29tcG9uZW50KHNxdWFyZS5wb3NpdGlvbi54IC0gMSwgc3F1YXJlLnBvc2l0aW9uLnkgLSAxKSwgbWFwLmxlbmd0aCkpIHtcblx0XHRcdG5laWdoYm9yc1swXSA9IChtYXBbc3F1YXJlLnBvc2l0aW9uLnggLSAxXVtzcXVhcmUucG9zaXRpb24ueSAtIDFdKTtcblx0XHR9XG5cdFx0aWYoVXRpbGl0eS5wb3NpdGlvbkluQm91bmRzKG5ldyBQb3NpdGlvbkNvbXBvbmVudChzcXVhcmUucG9zaXRpb24ueCArIDEsIHNxdWFyZS5wb3NpdGlvbi55IC0gMSksIG1hcC5sZW5ndGgpKSB7XG5cdFx0XHRuZWlnaGJvcnNbMV0gPSAobWFwW3NxdWFyZS5wb3NpdGlvbi54ICsgMV1bc3F1YXJlLnBvc2l0aW9uLnkgLSAxXSk7XG5cdFx0fVxuXHRcdGlmKFV0aWxpdHkucG9zaXRpb25JbkJvdW5kcyhuZXcgUG9zaXRpb25Db21wb25lbnQoc3F1YXJlLnBvc2l0aW9uLnggLSAxLCBzcXVhcmUucG9zaXRpb24ueSArIDEpLCBtYXAubGVuZ3RoKSkge1xuXHRcdFx0bmVpZ2hib3JzWzJdID0gKG1hcFtzcXVhcmUucG9zaXRpb24ueCAtIDFdW3NxdWFyZS5wb3NpdGlvbi55ICsgMV0pO1xuXHRcdH1cblx0XHRpZihVdGlsaXR5LnBvc2l0aW9uSW5Cb3VuZHMobmV3IFBvc2l0aW9uQ29tcG9uZW50KHNxdWFyZS5wb3NpdGlvbi54IC0gMSwgc3F1YXJlLnBvc2l0aW9uLnkgKyAxKSwgbWFwLmxlbmd0aCkpIHtcblx0XHRcdG5laWdoYm9yc1szXSA9IChtYXBbc3F1YXJlLnBvc2l0aW9uLnggKyAxXVtzcXVhcmUucG9zaXRpb24ueSArIDFdKTtcblx0XHR9XG5cdFx0cmV0dXJuIG5laWdoYm9ycztcblx0fVxuXG5cdHN0YXRpYyBzcXVhcmVJc1dhbGthYmxlKHNxdWFyZSwgZW50aXR5KXtcblx0XHRyZXR1cm4gKGVudGl0eSBpbnN0YW5jZW9mIFBsYXllcikgPyBVdGlsaXR5LnBsYXllcldhbGthYmxlKHNxdWFyZSkgOiBVdGlsaXR5Lm1vYldhbGthYmxlKHNxdWFyZSk7XG5cdH1cblxuXHRzdGF0aWMgcGxheWVyV2Fsa2FibGUoc3F1YXJlKSB7XG5cdFx0cmV0dXJuICghc3F1YXJlLmNvbXBvbmVudHMuaW5jbHVkZXMoY29tcG9uZW50X2NvbGxpc2lvbikgfHwgc3F1YXJlIGluc3RhbmNlb2YgRG9vclNxdWFyZSB8fCBzcXVhcmUgaW5zdGFuY2VvZiBTdGFpclVwU3F1YXJlIHx8IHNxdWFyZSBpbnN0YW5jZW9mIFN0YWlyRG93blNxdWFyZSk7XG5cdH1cblxuXHRzdGF0aWMgbW9iV2Fsa2FibGUoc3F1YXJlKSB7XG5cdFx0cmV0dXJuICFzcXVhcmUuY29tcG9uZW50cy5pbmNsdWRlcyhjb21wb25lbnRfY29sbGlzaW9uKTtcblx0fVxuXG5cdHN0YXRpYyBzcXVhcmVJc09jY3VwaWVkKHgsIHksIGVudGl0eSwgb2JqZWN0cykge1xuXHRcdGZvcihsZXQgbyBvZiBvYmplY3RzKSB7XG5cdFx0XHRpZihlbnRpdHkgIT0gbyAmJiBvLmNvbXBvbmVudHMuaW5jbHVkZXMoY29tcG9uZW50X2NvbGxpc2lvbikpIHtcblx0XHRcdFx0aWYoVXRpbGl0eS5jb2xsaXNpb24obmV3IENvbGxpc2lvbkNvbXBvbmVudCh4LCB5LCAxKSwgby5jb2xsaXNpb24pKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0c3RhdGljIGRpcmVjdGlvblRvUG9zaXRpb24oZGlyZWN0aW9uKSB7XG5cdFx0c3dpdGNoKGRpcmVjdGlvbikge1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fdXA6XG5cdFx0XHRcdHJldHVybiBuZXcgUG9zaXRpb25Db21wb25lbnQoMCwgLTEpO1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fcmlnaHQ6XG5cdFx0XHRcdHJldHVybiBuZXcgUG9zaXRpb25Db21wb25lbnQoMSwgMCk7XG5cdFx0XHRjYXNlIGRpcmVjdGlvbl9kb3duOlxuXHRcdFx0XHRyZXR1cm4gbmV3IFBvc2l0aW9uQ29tcG9uZW50KDAsIDEpO1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fbGVmdDpcblx0XHRcdFx0cmV0dXJuIG5ldyBQb3NpdGlvbkNvbXBvbmVudCgtMSwgMCk7XG5cdFx0fVxuXHR9XG5cblxuXHRzdGF0aWMgaXNNb3ZlbWVudEFjdGlvbihhY3Rpb24pIHtcblx0XHRyZXR1cm4gYWN0aW9uID4gYWN0aW9uX21vdmUgJiYgYWN0aW9uIDw9IGFjdGlvbl9tb3ZlX2xlZnQ7XG5cdH1cblxuXHRzdGF0aWMgY29udmVydE1vdmVtZW50VG9TcHJpbnQoYWN0aW9uKSB7XG5cdFx0c3dpdGNoKGFjdGlvbikge1xuXHRcdFx0Y2FzZSBhY3Rpb25fbW92ZV91cDpcblx0XHRcdFx0cmV0dXJuIGFjdGlvbl9zcHJpbnRfdXA7XG5cdFx0XHRjYXNlIGFjdGlvbl9tb3ZlX3JpZ2h0OlxuXHRcdFx0XHRyZXR1cm4gYWN0aW9uX3NwcmludF9yaWdodDtcblx0XHRcdGNhc2UgYWN0aW9uX21vdmVfZG93bjpcblx0XHRcdFx0cmV0dXJuIGFjdGlvbl9zcHJpbnRfZG93bjtcblx0XHRcdGNhc2UgYWN0aW9uX21vdmVfbGVmdDpcblx0XHRcdFx0cmV0dXJuIGFjdGlvbl9zcHJpbnRfbGVmdDtcblx0XHR9XG5cdH1cblxuXHRzdGF0aWMgY29udmVydFNwcmludFRvTW92ZW1lbnQoYWN0aW9uKSB7XG5cdFx0c3dpdGNoKGFjdGlvbikge1xuXHRcdFx0Y2FzZSBhY3Rpb25fc3ByaW50X3VwOlxuXHRcdFx0XHRyZXR1cm4gYWN0aW9uX21vdmVfdXA7XG5cdFx0XHRjYXNlIGFjdGlvbl9zcHJpbnRfcmlnaHQ6XG5cdFx0XHRcdHJldHVybiBhY3Rpb25fbW92ZV9yaWdodDtcblx0XHRcdGNhc2UgYWN0aW9uX3NwcmludF9kb3duOlxuXHRcdFx0XHRyZXR1cm4gYWN0aW9uX21vdmVfZG93bjtcblx0XHRcdGNhc2UgYWN0aW9uX3NwcmludF9sZWZ0OlxuXHRcdFx0XHRyZXR1cm4gYWN0aW9uX21vdmVfbGVmdDtcblx0XHR9XG5cdH1cblxuXHRzdGF0aWMgY29udmVydEFuaW1hdGlvbnNGcm9tQ29uZmlnKGFuaW1hdGlvbnMpIHtcblx0XHRsZXQgYW5pbWF0aW9uc0FycmF5ID0gW107XG5cdFx0Zm9yKGxldCBhIGluIGFuaW1hdGlvbnMpIHtcblx0XHRcdGFuaW1hdGlvbnNBcnJheVthbmltYXRpb25fc3RyaW5nc190b19jb25zdGFudHNbYV1dID0gYW5pbWF0aW9uc1thXTtcblx0XHR9XG5cdFx0cmV0dXJuIGFuaW1hdGlvbnNBcnJheTtcblx0fVxuXG5cdHN0YXRpYyBjb252ZXJ0QWN0aW9uc0Zyb21Db25maWcoYWN0aW9ucykge1xuXHRcdGxldCBhY3Rpb25zQXJyYXkgPSBbXTtcblx0XHRmb3IobGV0IGkgPSAwOyBpIDwgYWN0aW9ucy5sZW5ndGg7IGkrKykge1xuXHRcdFx0YWN0aW9uc0FycmF5W2ldID0gYWN0aW9uX3N0cmluZ3NfdG9fY29uc3RhbnRzW2FjdGlvbnNbaV1dO1xuXHRcdH1cblx0XHRyZXR1cm4gYWN0aW9uc0FycmF5O1xuXHR9XG5cblx0c3RhdGljIGdldFNxdWFyZUNvZGUoeCwgeSwgc2l6ZSkge1xuXHRcdHJldHVybiB4ICsgKHkgKiBzaXplKTtcblx0fVxuXG5cdHN0YXRpYyBnZXRTcXVhcmVGcm9tQ29kZShtYXAsIGNvZGUpIHtcblx0XHRyZXR1cm4gbWFwW2NvZGUgJSBtYXAubGVuZ3RoXVtmbG9vcihjb2RlIC8gbWFwLmxlbmd0aCldO1xuXHR9XG59XG5cbmNvbnN0IExBUkdFX1ZBTFVFID0gMTAwMDA7XG5cbmZ1bmN0aW9uIGZpbmRQYXRoKGJvYXJkLCBzdGFydCwgZW5kKSB7XG5cblx0bGV0IHNlYXJjaGVkID0gW107XG5cdGxldCBzZWFyY2hpbmcgPSBbXTtcblx0bGV0IGNhbWVGcm9tID0ge307XG5cdGxldCBkaXN0RnJvbVN0YXJ0ID0ge307XG5cdGxldCBmaW5hbENvc3QgPSB7fTtcblxuXHRmb3IgKGxldCBpID0gMDsgaSA8IGJvYXJkLmxlbmd0aDsgaSsrKSB7XG5cdFx0Zm9yIChsZXQgaiA9IDA7IGogPCBib2FyZFswXS5sZW5ndGg7IGorKykge1xuXHRcdFx0ZGlzdEZyb21TdGFydFtib2FyZFtpXVtqXV0gPSBMQVJHRV9WQUxVRTtcblx0XHRcdGZpbmFsQ29zdFtib2FyZFtpXVtqXV0gPSBMQVJHRV9WQUxVRTtcblx0XHR9XG5cdH1cblxuXHRzZWFyY2hpbmcucHVzaChzdGFydCk7XG5cdGRpc3RGcm9tU3RhcnRbc3RhcnRdID0gMDtcblx0ZmluYWxDb3N0W3N0YXJ0XSA9IHNxdWFyZURpc3RhbmNlKHN0YXJ0LCBlbmQpO1xuXHRjYW1lRnJvbVtVdGlsaXR5LmdldFNxdWFyZUNvZGUoc3RhcnQucG9zaXRpb24ueCwgc3RhcnQucG9zaXRpb24ueSldID0gLTE7XG5cblx0d2hpbGUgKHNlYXJjaGluZy5sZW5ndGggPiAwKSB7XG5cdFx0bGV0IGN1cnJlbnQgPSBzZWFyY2hpbmdbMF07XG5cdFx0Zm9yIChsZXQgcyBvZiBzZWFyY2hpbmcpIHtcblx0XHRcdGlmIChmaW5hbENvc3Rbc10gPCBmaW5hbENvc3RbY3VycmVudF0pIGN1cnJlbnQgPSBzO1xuXHRcdH1cblx0XHRpZihjdXJyZW50ID09IGVuZCkge1xuXHRcdFx0cmV0dXJuIG1ha2VQYXRoKGJvYXJkLCBjYW1lRnJvbSwgY3VycmVudCk7XG5cdFx0fVxuXG5cdFx0c2VhcmNoaW5nLnNwbGljZShzZWFyY2hpbmcuaW5kZXhPZihjdXJyZW50KSwgMSk7XG5cdFx0c2VhcmNoZWQucHVzaChjdXJyZW50KTtcblxuXHRcdGxldCBjdXJyZW50TmVpZ2hib3JzID0gZ2V0TmVpZ2hib3JzKGJvYXJkLCBjdXJyZW50KTtcblx0XHRmb3IobGV0IG4gb2YgY3VycmVudE5laWdoYm9ycykge1xuXHRcdFx0aWYgKHNlYXJjaGVkLmluY2x1ZGVzKG4pKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGxldCBlc3RpbWF0ZWREaXN0RnJvbVN0YXJ0ID0gZGlzdEZyb21TdGFydFtjdXJyZW50XSArIDE7XG5cblx0XHRcdFx0aWYgKCFzZWFyY2hpbmcuaW5jbHVkZXMobikpIHtcblx0XHRcdFx0XHRzZWFyY2hpbmcucHVzaChuKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIGlmIChlc3RpbWF0ZWREaXN0RnJvbVN0YXJ0ID49IGRpc3RGcm9tU3RhcnRbbl0pIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGNhbWVGcm9tW1V0aWxpdHkuZ2V0U3F1YXJlQ29kZShuLnBvc2l0aW9uLngsIG4ucG9zaXRpb24ueSldID0gVXRpbGl0eS5nZXRTcXVhcmVDb2RlKGN1cnJlbnQucG9zaXRpb24ueCwgY3VycmVudC5wb3NpdGlvbi55KTtcblx0XHRcdFx0ZGlzdEZyb21TdGFydFtuXSA9IGVzdGltYXRlZERpc3RGcm9tU3RhcnQ7XG5cdFx0XHRcdGZpbmFsQ29zdFtuXSA9IGRpc3RGcm9tU3RhcnRbbl0gKyBzcXVhcmVEaXN0YW5jZShzdGFydCwgZW5kKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBzcXVhcmVEaXN0YW5jZShzdGFydCwgZW5kKSB7XG5cdHJldHVybiBhYnMoc3RhcnQucG9zaXRpb24ueCAtIGVuZC5wb3NpdGlvbi54KSArIGFicyhzdGFydC5wb3NpdGlvbi55IC0gZW5kLnBvc2l0aW9uLnkpO1xufVxuXG5mdW5jdGlvbiBtYWtlUGF0aChib2FyZCwgY2FtZUZyb20sIGxhc3QpIHtcblx0bGV0IHBhdGggPSBbXTtcblx0bGV0IGN1cnJlbnQgPSBVdGlsaXR5LmdldFNxdWFyZUNvZGUobGFzdC5wb3NpdGlvbi54LCBsYXN0LnBvc2l0aW9uLnkpO1xuXHR3aGlsZShjYW1lRnJvbVtjdXJyZW50XSA+IDApIHtcblx0XHRwYXRoLnVuc2hpZnQoVXRpbGl0eS5nZXRTcXVhcmVGcm9tQ29kZShib2FyZCwgY3VycmVudCkpO1xuXHRcdGN1cnJlbnQgPSBjYW1lRnJvbVtjdXJyZW50XTtcblx0fVxuXHRwYXRoLnVuc2hpZnQoVXRpbGl0eS5nZXRTcXVhcmVGcm9tQ29kZShib2FyZCwgY3VycmVudCkpO1xuXHRyZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gZ2V0TmVpZ2hib3JzKGJvYXJkLCBzcXVhcmUpIHtcblx0bmVpZ2hib3JzID0gW107XG5cdGlmIChzcXVhcmUucG9zaXRpb24ueCA+IDAgJiYgd2Fsa2FibGUoZW50aXR5X21vYiwgYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnggLSAxXVtzcXVhcmUucG9zaXRpb24ueV0pKSB7XG5cdFx0bmVpZ2hib3JzLnB1c2goYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnggLSAxXVtzcXVhcmUucG9zaXRpb24ueV0pO1xuXHR9XG5cdGlmIChzcXVhcmUucG9zaXRpb24ueSA+IDAgJiYgd2Fsa2FibGUoZW50aXR5X21vYiwgYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnhdW3NxdWFyZS5wb3NpdGlvbi55IC0gMV0pKSB7XG5cdFx0bmVpZ2hib3JzLnB1c2goYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnhdW3NxdWFyZS5wb3NpdGlvbi55IC0gMV0pO1xuXHR9XG5cdGlmIChzcXVhcmUucG9zaXRpb24ueCA8IGJvYXJkLmxlbmd0aCAtIDEgJiYgd2Fsa2FibGUoZW50aXR5X21vYiwgYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnggKyAxXVtzcXVhcmUucG9zaXRpb24ueV0pKSB7XG5cdFx0bmVpZ2hib3JzLnB1c2goYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnggKyAxXVtzcXVhcmUucG9zaXRpb24ueV0pO1xuXHR9XG5cdGlmIChzcXVhcmUucG9zaXRpb24ueSA8IGJvYXJkLmxlbmd0aCAtIDEgJiYgd2Fsa2FibGUoZW50aXR5X21vYiwgYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnhdW3NxdWFyZS5wb3NpdGlvbi55ICsgMV0pKSB7XG5cdFx0bmVpZ2hib3JzLnB1c2goYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnhdW3NxdWFyZS5wb3NpdGlvbi55ICsgMV0pO1xuXHR9XG5cdC8vIGlmIChzcXVhcmUucG9zaXRpb24ueCA+IDAgJiYgYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnggLSAxXVtzcXVhcmUucG9zaXRpb24ueV0ud2Fsa2FibGUoYm9hcmQsIFBBVEhGSU5ESU5HKSkgbmVpZ2hib3JzLnB1c2goYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnggLSAxXVtzcXVhcmUucG9zaXRpb24ueV0pO1xuXHQvLyBpZiAoc3F1YXJlLnBvc2l0aW9uLnkgPiAwICYmIGJvYXJkW3NxdWFyZS5wb3NpdGlvbi54XVtzcXVhcmUucG9zaXRpb24ueSAtIDFdLndhbGthYmxlKGJvYXJkLCBQQVRIRklORElORykpIG5laWdoYm9ycy5wdXNoKGJvYXJkW3NxdWFyZS5wb3NpdGlvbi54XVtzcXVhcmUucG9zaXRpb24ueSAtIDFdKTtcblx0Ly8gaWYgKHNxdWFyZS5wb3NpdGlvbi54IDwgYm9hcmQubGVuZ3RoIC0gMSAmJiBib2FyZFtzcXVhcmUucG9zaXRpb24ueCArIDFdW3NxdWFyZS5wb3NpdGlvbi55XS53YWxrYWJsZShib2FyZCwgUEFUSEZJTkRJTkcpKSBuZWlnaGJvcnMucHVzaChib2FyZFtzcXVhcmUucG9zaXRpb24ueCArIDFdW3NxdWFyZS5wb3NpdGlvbi55XSk7XG5cdC8vIGlmIChzcXVhcmUucG9zaXRpb24ueSA8IGJvYXJkLmxlbmd0aCAtIDEgJiYgYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnhdW3NxdWFyZS5wb3NpdGlvbi55ICsgMV0ud2Fsa2FibGUoYm9hcmQsIFBBVEhGSU5ESU5HKSkgbmVpZ2hib3JzLnB1c2goYm9hcmRbc3F1YXJlLnBvc2l0aW9uLnhdW3NxdWFyZS5wb3NpdGlvbi55ICsgMV0pO1xuXHRyZXR1cm4gbmVpZ2hib3JzO1xufVxuIiwiZnVuY3Rpb24gc2V0dXAoKSB7XG5cdGNyZWF0ZUNhbnZhcyh3aW5kb3dXaWR0aCwgd2luZG93SGVpZ2h0LCBcImdhbWVcIik7XG5cdGxvYWQoKTtcbn1cblxuZnVuY3Rpb24gbG9hZCgpIHtcblxuXHRsZXQgY29uZmlnID0gbG9hZENvbmZpZygpO1xuXHRsZXQgaW1hZ2VzID0gbG9hZEltYWdlcyhjb25maWcudGV4dHVyZXMpO1xuXHRsZXQgcm9vbV9wb29sID0gbG9hZFJvb21Qb29scygpO1xuXHRsZXQgcGxheWVyX2NvbmZpZyA9IHByb2Nlc3NFbnRpdHlEYXRhKGxvYWRKU09OKCcvZGF0YS9wbGF5ZXJfY29uZmlnLmpzb24nKSk7XG5cdGxldCBlbmVteV9jb25maWcgPSBwcm9jZXNzRW50aXR5RGF0YShsb2FkSlNPTignL2RhdGEvZW5lbXlfY29uZmlnLmpzb24nKSk7XG5cdGxldCBib3NzX2NvbmZpZyA9IHByb2Nlc3NFbnRpdHlEYXRhKGxvYWRKU09OKCcvZGF0YS9ib3NzX2NvbmZpZy5qc29uJykpO1xuXG5cdC8vIGxldCBtdXNpYyA9IGxvYWRNdXNpYygpO1xuXHQvLyBsZXQgc291bmRzID0gbG9hZFNvdW5kcygpO1xuXG5cdGxldCBkYXRhID0ge1xuXHRcdCdjb25maWcnOiBjb25maWcsXG5cdFx0J3Jvb21fcG9vbCc6IHJvb21fcG9vbFswXSxcblx0XHQnc3RhaXJfcm9vbV9wb29sJzogcm9vbV9wb29sWzFdLFxuXHRcdCdpbWFnZXMnOiBpbWFnZXMsXG5cdFx0J3BsYXllcl9jb25maWcnOiBwbGF5ZXJfY29uZmlnLFxuXHRcdCdlbmVteV9jb25maWcnOiBlbmVteV9jb25maWcsXG5cdFx0J2Jvc3NfY29uZmlnJzogYm9zc19jb25maWdcblx0XHQvLyAnbXVzaWMnOiBtdXNpYyxcblx0XHQvLyAnc291bmRzJzogc291bmRzXG5cdH07XG5cblx0bmV3IFBvcHBzRW5naW5lKGRhdGEpO1xuXG5cdC8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgZnVuY3Rpb24gKCkgeyB9KTtcbn1cblxuZnVuY3Rpb24gcHJvY2Vzc0VudGl0eURhdGEoZW50aXR5RGF0YSkge1xuXHRsZXQgbmV3RW50aXR5RGF0YSA9IFtdO1xuXHRmb3IobGV0IGUgaW4gZW50aXR5RGF0YSkge1xuXG5cdFx0bGV0IGVudGl0eUNvbnN0YW50ID0gZW50aXR5X3N0cmluZ190b19jb25zdGFudFtlXTtcblx0XHRuZXdFbnRpdHlEYXRhW2VudGl0eUNvbnN0YW50XSA9IGVudGl0eURhdGFbZV07XG5cblx0XHQvLyBsZXQgcHJvY2Vzc2VkQWN0aW9ucyA9IFtdO1xuXHRcdC8vIGZvcihsZXQgYWN0aW9uIG9mIGVudGl0eURhdGFbZV0uYWN0aW9ucykge1xuXHRcdC8vIFx0bGV0IGEgPSBhY3Rpb25fc3RyaW5nX3RvX2NvbnN0YW50W2FjdGlvbi5hY3Rpb25dO1xuXHRcdC8vIFx0cHJvY2Vzc2VkQWN0aW9uc1thXSA9IHtcblx0XHQvLyBcdFx0YWN0aW9uOiBhLFxuXHRcdC8vIFx0XHRjb29sZG93bjogYWN0aW9uLmNvb2xkb3duLFxuXHRcdC8vIFx0XHR0aW1lOiBhY3Rpb24udGltZVxuXHRcdC8vIFx0fTtcblx0XHQvLyB9XG5cblx0XHRsZXQgcHJvY2Vzc2VkQWJpbGl0aWVzID0gW107XG5cdFx0bGV0IGkgPSAwO1xuXHRcdGZvcihsZXQgYWJpbGl0eSBvZiBlbnRpdHlEYXRhW2VdLmFiaWxpdGllcykge1xuXHRcdFx0bGV0IGEgPSBhYmlsaXR5X3R5cGVfc3RyaW5nX3RvX2NvbnN0YW50W2FiaWxpdHkuYWJpbGl0eVR5cGVdO1xuXHRcdFx0cHJvY2Vzc2VkQWJpbGl0aWVzW2ldID0gYWJpbGl0eTtcblx0XHRcdHByb2Nlc3NlZEFiaWxpdGllc1tpXS5hYmlsaXR5VHlwZSA9IGE7XG5cdFx0XHRpKys7XG5cdFx0fVxuXG5cdFx0Ly8gbmV3RW50aXR5RGF0YVtlbnRpdHlDb25zdGFudF0uYWN0aW9ucyA9IHByb2Nlc3NlZEFjdGlvbnM7XG5cdFx0bmV3RW50aXR5RGF0YVtlbnRpdHlDb25zdGFudF0uYWJpbGl0aWVzID0gcHJvY2Vzc2VkQWJpbGl0aWVzO1xuXG5cdH1cblx0cmV0dXJuIG5ld0VudGl0eURhdGE7XG59XG5cbmZ1bmN0aW9uIGxvYWRDb25maWcoKXtcblx0cmV0dXJuIGxvYWRKU09OKCcvY29uZmlnL2NvbmZpZy5qc29uJyk7XG59XG5cbmZ1bmN0aW9uIGxvYWRSb29tUG9vbHMoKXtcblx0cmV0dXJuIGxvYWRKU09OKCcvY29uZmlnL3Jvb21wb29sLmpzb24nKTtcbn1cblxuZnVuY3Rpb24gbG9hZEltYWdlcyh0ZXh0dXJlQ29uZmlnKXtcblx0bGV0IGltYWdlcyA9IHt9XG5cdGltYWdlcy50ZXh0dXJlcyA9IGxvYWRUZXh0dXJlcyh0ZXh0dXJlQ29uZmlnKTtcblx0aW1hZ2VzLnVpID0gbG9hZFVJKCk7XG5cdHJldHVybiBpbWFnZXM7XG59XG5cbmZ1bmN0aW9uIGxvYWRUZXh0dXJlcyh0ZXh0dXJlQ29uZmlnKSB7XG5cdGxldCB0ZXh0dXJlcyA9IFtdO1xuXG5cdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdID0gW107XG5cdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdW3RleHR1cmVfZGVmYXVsdF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvZmxvb3IvZmxvb3JfZGVmYXVsdC5qcGcnKTtcblx0dGV4dHVyZXNbdGV4dHVyZV9mbG9vcl1bdGV4dHVyZV9udW1fYWx0c10gPSB0ZXh0dXJlQ29uZmlnLk5VTV9GTE9PUl9BTFRTO1xuXHRmb3IobGV0IGkgPSAwOyBpIDwgdGV4dHVyZXNbdGV4dHVyZV9mbG9vcl1bdGV4dHVyZV9udW1fYWx0c107IGkrKykge1xuXHRcdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdW3RleHR1cmVfYWx0MSArIGldID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Zsb29yX2FsdF8nICsgKDEgKyBpKSArICcucG5nJyk7XG5cdH1cblxuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX2FsdDJdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Zsb29yX2FsdF8xLnBuZycpO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX2FsdDNdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Zsb29yX2FsdF8yLnBuZycpO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX2FsdDRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Zsb29yX2FsdF8zLnBuZycpO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX2FsdDVdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Zsb29yX2FsdF80LnBuZycpO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX2FsdDZdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Zsb29yX2FsdF81LnBuZycpO1xuXG5cdC8vIFx0dGV4dHVyZXNbdGV4dHVyZV9mbG9vcl1bdGV4dHVyZV9zaWRlX3RvcF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvZmxvb3Ivc2lkZV90b3AucG5nJyk7XG5cdC8vIFx0dGV4dHVyZXNbdGV4dHVyZV9mbG9vcl1bdGV4dHVyZV9zaWRlX3JpZ2h0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9mbG9vci9zaWRlX3JpZ2h0LnBuZycpO1xuXHQvLyBcdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdW3RleHR1cmVfc2lkZV9ib3R0b21dID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL3NpZGVfYm90dG9tLnBuZycpO1xuXHQvLyBcdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdW3RleHR1cmVfc2lkZV9sZWZ0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9mbG9vci9zaWRlX2xlZnQucG5nJyk7XG5cblx0Ly8gXHR0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX2luX2Nvcm5lcl90b3BfcmlnaHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Nvcm5lcl9pbl90b3BfcmlnaHQucG5nJyk7XG5cdC8vIFx0dGV4dHVyZXNbdGV4dHVyZV9mbG9vcl1bdGV4dHVyZV9pbl9jb3JuZXJfYm90dG9tX3JpZ2h0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9mbG9vci9jb3JuZXJfaW5fYm90dG9tX3JpZ2h0LnBuZycpO1xuXHQvLyBcdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdW3RleHR1cmVfaW5fY29ybmVyX2JvdHRvbV9sZWZ0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9mbG9vci9jb3JuZXJfaW5fYm90dG9tX2xlZnQucG5nJyk7XG5cdC8vIFx0dGV4dHVyZXNbdGV4dHVyZV9mbG9vcl1bdGV4dHVyZV9pbl9jb3JuZXJfdG9wX2xlZnRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Nvcm5lcl9pbl90b3BfbGVmdC5wbmcnKTtcblxuXHQvLyBcdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdW3RleHR1cmVfb3V0X2Nvcm5lcl90b3BfcmlnaHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Nvcm5lcl9vdXRfdG9wX3JpZ2h0LnBuZycpO1xuXHQvLyBcdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdW3RleHR1cmVfb3V0X2Nvcm5lcl9ib3R0b21fcmlnaHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Nvcm5lcl9vdXRfYm90dG9tX3JpZ2h0LnBuZycpO1xuXHQvLyBcdHRleHR1cmVzW3RleHR1cmVfZmxvb3JdW3RleHR1cmVfb3V0X2Nvcm5lcl9ib3R0b21fbGVmdF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvZmxvb3IvY29ybmVyX291dF9ib3R0b21fbGVmdC5wbmcnKTtcblx0Ly8gXHR0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX291dF9jb3JuZXJfdG9wX2xlZnRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL2Nvcm5lcl9vdXRfdG9wX2xlZnQucG5nJyk7XG5cblx0Ly8gXHR0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX1VfdG9wXSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9mbG9vci9VX3RvcC5wbmcnKTtcblx0Ly8gXHR0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX1VfcmlnaHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL1VfcmlnaHQucG5nJyk7XG5cdC8vIFx0dGV4dHVyZXNbdGV4dHVyZV9mbG9vcl1bdGV4dHVyZV9VX2JvdHRvbV0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvZmxvb3IvVV9ib3R0b20ucG5nJyk7XG5cdC8vIFx0dGV4dHVyZXNbdGV4dHVyZV9mbG9vcl1bdGV4dHVyZV9VX2xlZnRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL2Zsb29yL1VfbGVmdC5wbmcnKTtcblxuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX2Zsb29yXVt0ZXh0dXJlX2Nyb3NzXSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9mbG9vci9jcm9zcy5wbmcnKTtcblxuXG5cdHRleHR1cmVzW3RleHR1cmVfd2FsbF0gPSBbXTtcblx0dGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX2RlZmF1bHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL3dhbGwvd2FsbF9kZWZhdWx0LnBuZycpO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfbnVtX2FsdHNdID0gdGV4dHVyZUNvbmZpZy5OVU1fV0FMTF9BTFRTO1xuXHRmb3IobGV0IGkgPSAwOyBpIDwgdGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX251bV9hbHRzXTsgaSsrKSB7XG5cdFx0dGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX2FsdDEgKyBpXSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfYWx0XycgKyAoMSArIGkpICsgJy5wbmcnKTtcblx0fVxuXG5cdC8vIHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9hbHQxXSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9vbGQvd2FsbFRleHR1cmUwLnBuZycpO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfYWx0Ml0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvb2xkL3dhbGxUZXh0dXJlMC5wbmcnKTtcblx0Ly8gdGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX2FsdDNdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL29sZC93YWxsVGV4dHVyZTEucG5nJyk7XG5cdC8vIHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9hbHQ0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9vbGQvd2FsbFRleHR1cmUzLnBuZycpO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfYWx0NV0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvb2xkL3dhbGxUZXh0dXJlNC5wbmcnKTtcblx0Ly8gdGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX2FsdDZdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL29sZC93YWxsVGV4dHVyZTUucG5nJyk7XG5cdC8vIHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9udW1fYWx0c10gPSAwO1xuXG5cdHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9zaWRlX3RvcF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvd2FsbC93YWxsX3NpZGVfdG9wLnBuZycpO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfc2lkZV9yaWdodF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvd2FsbC93YWxsX3NpZGVfcmlnaHQucG5nJyk7XG5cdHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9zaWRlX2JvdHRvbV0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvd2FsbC93YWxsX3NpZGVfYm90dG9tLnBuZycpO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfc2lkZV9sZWZ0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfc2lkZV9sZWZ0LnBuZycpO1xuXG5cdHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9pbl9jb3JuZXJfdG9wX3JpZ2h0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfY29ybmVyX2luX3RvcF9yaWdodC5wbmcnKTtcblx0dGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX2luX2Nvcm5lcl9ib3R0b21fcmlnaHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL3dhbGwvd2FsbF9jb3JuZXJfaW5fYm90dG9tX3JpZ2h0LnBuZycpO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfaW5fY29ybmVyX2JvdHRvbV9sZWZ0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfY29ybmVyX2luX2JvdHRvbV9sZWZ0LnBuZycpO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfaW5fY29ybmVyX3RvcF9sZWZ0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfY29ybmVyX2luX3RvcF9sZWZ0LnBuZycpO1xuXG5cdHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9vdXRfY29ybmVyX3RvcF9yaWdodF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvd2FsbC93YWxsX2Nvcm5lcl9vdXRfdG9wX3JpZ2h0LnBuZycpO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfb3V0X2Nvcm5lcl9ib3R0b21fcmlnaHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL3dhbGwvd2FsbF9jb3JuZXJfb3V0X2JvdHRvbV9yaWdodC5wbmcnKTtcblx0dGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX291dF9jb3JuZXJfYm90dG9tX2xlZnRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL3dhbGwvd2FsbF9jb3JuZXJfb3V0X2JvdHRvbV9sZWZ0LnBuZycpO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX3dhbGxdW3RleHR1cmVfb3V0X2Nvcm5lcl90b3BfbGVmdF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvd2FsbC93YWxsX2Nvcm5lcl9vdXRfdG9wX2xlZnQucG5nJyk7XG5cblx0Ly8gdGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX1VfdG9wXSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfVV90b3AucG5nJyk7XG5cdC8vIHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9VX3JpZ2h0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfVV9yaWdodC5wbmcnKTtcblx0Ly8gdGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX1VfYm90dG9tXSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfVV9ib3R0b20ucG5nJyk7XG5cdC8vIHRleHR1cmVzW3RleHR1cmVfd2FsbF1bdGV4dHVyZV9VX2xlZnRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL3dhbGwvd2FsbF9VX2xlZnQucG5nJyk7XG5cblx0Ly8gdGV4dHVyZXNbdGV4dHVyZV93YWxsXVt0ZXh0dXJlX2Nyb3NzXSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy93YWxsL3dhbGxfY3Jvc3MucG5nJyk7XG5cblxuXHR0ZXh0dXJlc1t0ZXh0dXJlX2Rvb3JfY2xvc2VkXSA9IFtdO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX2Rvb3JfY2xvc2VkXVt0ZXh0dXJlX2RlZmF1bHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL29sZC9kb29yQ2xvc2VkVGV4dHVyZS5wbmcnKTtcblx0dGV4dHVyZXNbdGV4dHVyZV9kb29yX2Nsb3NlZF1bdGV4dHVyZV9udW1fYWx0c10gPSAwO1xuXG5cdHRleHR1cmVzW3RleHR1cmVfZG9vcl9vcGVuXSA9IFtdO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX2Rvb3Jfb3Blbl1bdGV4dHVyZV9kZWZhdWx0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9vbGQvZG9vck9wZW5lZFRleHR1cmUucG5nJyk7XG5cdHRleHR1cmVzW3RleHR1cmVfZG9vcl9vcGVuXVt0ZXh0dXJlX251bV9hbHRzXSA9IDA7XG5cblx0Ly8gdGV4dHVyZXNbdGV4dHVyZV9sb290X2Nsb3NlZF0gPSBbXTtcblx0Ly8gdGV4dHVyZXNbdGV4dHVyZV9sb290X2Nsb3NlZF1bdGV4dHVyZV9kZWZhdWx0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9vbGQvbG9vdENsb3NlZFRleHR1cmUucG5nJyk7XG5cdC8vIHRleHR1cmVzW3RleHR1cmVfbG9vdF9jbG9zZWRdW3RleHR1cmVfbnVtX2FsdHNdID0gMDtcblxuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX2xvb3Rfb3Blbl0gPSBbXTtcblx0Ly8gdGV4dHVyZXNbdGV4dHVyZV9sb290X29wZW5dW3RleHR1cmVfZGVmYXVsdF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvb2xkL2xvb3RPcGVuZWRUZXh0dXJlLnBuZycpO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX2xvb3Rfb3Blbl1bdGV4dHVyZV9udW1fYWx0c10gPSAwO1xuXG5cdHRleHR1cmVzW3RleHR1cmVfc3RhaXJdID0gW107XG5cdHRleHR1cmVzW3RleHR1cmVfc3RhaXJdW3RleHR1cmVfZGVmYXVsdF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvc3RhaXJVcC5wbmcnKTtcblx0dGV4dHVyZXNbdGV4dHVyZV9zdGFpcl1bdGV4dHVyZV9udW1fYWx0c10gPSAwO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX3N0YWlyX3VwXSA9IFtdO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX3N0YWlyX3VwXVt0ZXh0dXJlX2RlZmF1bHRdID0gbG9hZEltYWdlKCcvaW1nL3RleHR1cmVzL3N0YWlyVXAucG5nJyk7XG5cdC8vIHRleHR1cmVzW3RleHR1cmVfc3RhaXJfdXBdW3RleHR1cmVfbnVtX2FsdHNdID0gMDtcblxuXHR0ZXh0dXJlc1t0ZXh0dXJlX2xldmVsX29yaWdpbl0gPSBbXTtcblx0dGV4dHVyZXNbdGV4dHVyZV9sZXZlbF9vcmlnaW5dW3RleHR1cmVfZGVmYXVsdF0gPSBsb2FkSW1hZ2UoJy9pbWcvdGV4dHVyZXMvc3RhaXJEb3duLnBuZycpO1xuXHR0ZXh0dXJlc1t0ZXh0dXJlX2xldmVsX29yaWdpbl1bdGV4dHVyZV9udW1fYWx0c10gPSAwO1xuXHQvLyB0ZXh0dXJlc1t0ZXh0dXJlX3N0YWlyX2Rvd25dID0gW107XG5cdC8vIHRleHR1cmVzW3RleHR1cmVfc3RhaXJfZG93bl1bdGV4dHVyZV9kZWZhdWx0XSA9IGxvYWRJbWFnZSgnL2ltZy90ZXh0dXJlcy9zdGFpckRvd24ucG5nJyk7XG5cdC8vIHRleHR1cmVzW3RleHR1cmVfc3RhaXJfZG93bl1bdGV4dHVyZV9udW1fYWx0c10gPSAwO1xuXG5cdHJldHVybiB0ZXh0dXJlcztcbn1cblxuZnVuY3Rpb24gbG9hZFVJKCkge1xuXHRsZXQgdWkgPSBbXTtcblx0dWlbdWlfaGVhcnRdID0gbG9hZEltYWdlKCcvaW1nL2ljb25zL2hlYXJ0LnBuZycpO1xuXHR1aVt1aV9lbXB0eV9oZWFydF0gPSBsb2FkSW1hZ2UoJy9pbWcvaWNvbnMvZW1wdHlIZWFydC5wbmcnKTtcblx0cmV0dXJuIHVpO1xufVxuXG5cbmZ1bmN0aW9uIGxvYWRNdXNpYygpe1xuXHRsZXQgbXVzaWMgPSBbXTtcblx0bXVzaWMucHVzaChsb2FkQXVkaW8oJy9hdWRpby9tdXNpYy8wMDFfMDEwMC53YXYnKSk7XG5cdG11c2ljLnB1c2gobG9hZEF1ZGlvKCcvYXVkaW8vbXVzaWMvMDAyXzAwMDEud2F2JykpO1xuXHRtdXNpYy5wdXNoKGxvYWRBdWRpbygnL2F1ZGlvL211c2ljLzAwM18wMTAxLndhdicpKTtcblx0bXVzaWMucHVzaChsb2FkQXVkaW8oJy9hdWRpby9tdXNpYy8wMDRfMTEwMS53YXYnKSk7XG5cdG11c2ljLnB1c2gobG9hZEF1ZGlvKCcvYXVkaW8vbXVzaWMvMDA1XzExMjEud2F2JykpO1xuXHRtdXNpYy5wdXNoKGxvYWRBdWRpbygnL2F1ZGlvL211c2ljLzAwNl8yMTIxLndhdicpKTtcblx0bXVzaWMucHVzaChsb2FkQXVkaW8oJy9hdWRpby9tdXNpYy8wMDdfMDIwMC53YXYnKSk7XG5cdG11c2ljLnB1c2gobG9hZEF1ZGlvKCcvYXVkaW8vbXVzaWMvMDA4XzAyMDEud2F2JykpO1xuXHRtdXNpYy5wdXNoKGxvYWRBdWRpbygnL2F1ZGlvL211c2ljLzAwOV8xMjAxLndhdicpKTtcblx0bXVzaWMucHVzaChsb2FkQXVkaW8oJy9hdWRpby9tdXNpYy8wMTBfMTIyMS53YXYnKSk7XG5cdHJldHVybiBtdXNpYztcbn1cblxuZnVuY3Rpb24gbG9hZFNvdW5kcygpe1xufVxuXG5mdW5jdGlvbiBrZXlEb3duKCkgeyB9XG5cbmZ1bmN0aW9uIGtleVVwKCkgeyB9XG5cbi8vICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHsgaW5pdCgpOyB9KTtcbiIsImZ1bmN0aW9uIFBvc2l0aW9uQ29tcG9uZW50KHgsIHkpIHtcblx0dGhpcy54ID0geDtcblx0dGhpcy55ID0geTtcbn1cblxuZnVuY3Rpb24gSGVhbHRoQ29tcG9uZW50KGluaXRpYWxIZWFsdGgpIHtcblx0dGhpcy5tYXhIZWFsdGggPSBpbml0aWFsSGVhbHRoO1xuXHR0aGlzLmN1cnJlbnRIZWFsdGggPSBpbml0aWFsSGVhbHRoO1xufVxuXG5mdW5jdGlvbiBTdHJlbmd0aENvbXBvbmVudChpbml0aWFsU3RyZW5ndGgpIHtcblx0dGhpcy5zdHJlbmd0aCA9IGluaXRpYWxTdHJlbmd0aDtcbn1cblxuZnVuY3Rpb24gSW50ZWxsaWdlbmNlQ29tcG9uZW50KGluaXRpYWxJbnRlbGxpZ2VuY2UpIHtcblx0dGhpcy5pbnRlbGxpZ2VuY2UgPSBpbml0aWFsSW50ZWxsaWdlbmNlO1xufVxuXG5mdW5jdGlvbiBEZXh0ZXJpdHlDb21wb25lbnQoaW5pdGlhbERleHRlcml0eSkge1xuXHR0aGlzLmRleHRlcml0eSA9IGluaXRpYWxEZXh0ZXJpdHk7XG59XG5cbmZ1bmN0aW9uIENvbWJhdENvbXBvbmVudChhdHRhY2tEYW1hZ2UsIG1hZ2ljRGFtYWdlLCBhcm1vcikge1xuXHR0aGlzLmF0dGFja0RhbWFnZSA9IGF0dGFja0RhbWFnZTtcblx0dGhpcy5tYWdpY0RhbWFnZSA9IG1hZ2ljRGFtYWdlO1xuXHR0aGlzLmFybW9yID0gYXJtb3I7XG59XG5cbmZ1bmN0aW9uIERpcmVjdGlvbkNvbXBvbmVudChkaXJlY3Rpb24pIHtcblx0dGhpcy5kaXJlY3Rpb24gPSBkaXJlY3Rpb247XG59XG5cbmZ1bmN0aW9uIFBoeXNpY2FsQ29tcG9uZW50KHNvbGlkLCBzaXplKSB7XG5cdHRoaXMuc29saWQgPSBzb2xpZDtcblx0dGhpcy5zaXplID0gc2l6ZTtcbn1cblxuZnVuY3Rpb24gQ29sbGlzaW9uQ29tcG9uZW50KHgsIHksIHcsIGgpIHtcblx0aWYoaCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0aCA9IHc7XG5cdH1cblx0dGhpcy50b3AgPSB5O1xuXHR0aGlzLnJpZ2h0ID0geCArIHc7XG5cdHRoaXMuYm90dG9tID0geSArIGg7XG5cdHRoaXMubGVmdCA9IHg7XG5cdHRoaXMud2lkdGggPSB3O1xuXHR0aGlzLmhlaWdodCA9IGg7XG59XG5cbmZ1bmN0aW9uIE1vdmVtZW50Q29tcG9uZW50KHNwZWVkKSB7XG5cdHRoaXMuc3BlZWQgPSBzcGVlZDtcblx0dGhpcy5jdXJyZW50Q29vbGRvd24gPSAwO1xufVxuXG5mdW5jdGlvbiBEaXNwbGF5Q29tcG9uZW50KHdpZHRoLCBoZWlnaHQsIG9mZnNldFggPSAwLCBvZmZzZXRZID0gMCwgeiA9IDApIHtcblx0dGhpcy53aWR0aCA9IHdpZHRoO1xuXHR0aGlzLmhlaWdodCA9IGhlaWdodDtcblx0dGhpcy5vZmZzZXRYID0gb2Zmc2V0WDtcblx0dGhpcy5vZmZzZXRZID0gb2Zmc2V0WTtcblx0dGhpcy56ID0gejtcblx0dGhpcy5saWdodExldmVsID0gMDtcbn1cblxuZnVuY3Rpb24gU3F1YXJlQ29tcG9uZW50KHR5cGUpIHtcblx0dGhpcy50eXBlID0gdHlwZTtcblx0dGhpcy52aXNpYmxlID0gZmFsc2U7XG5cdHRoaXMuZGlzY292ZXJlZCA9IGZhbHNlO1xuXHR0aGlzLmRpc2NvdmVyZWRDb3VudGVyID0gMDtcblx0dGhpcy5vcGFxdWUgPSBvcGFxdWU7XG59XG5cbmZ1bmN0aW9uIEFuaW1hdGlvbkNvbXBvbmVudChhbmltYXRpb25zKSB7XG5cdGlmKGFuaW1hdGlvbnMgPT0gLTEpIHtcblx0XHR0aGlzLmFuaW1hdGlvbiA9IGFuaW1hdGlvbl9ub19hbmltYXRpb25zX3lldDtcblx0fVxuXHRlbHNlIHtcblx0XHR0aGlzLm9mZnNldFggPSAwO1xuXHRcdHRoaXMub2Zmc2V0WSA9IDA7XG5cdFx0dGhpcy5zdGFnZSA9IDA7XG5cdFx0dGhpcy5zcHJpdGUgPSB1bmRlZmluZWQ7XG5cdFx0dGhpcy5hbmltYXRpb24gPSBhbmltYXRpb25faWRsZTtcblx0XHR0aGlzLmFuaW1hdGlvbnMgPSBhbmltYXRpb25zO1xuXHR9XG59XG5cbmZ1bmN0aW9uIFRleHR1cmVDb21wb25lbnQodHlwZSwgc3VidHlwZSA9IHRleHR1cmVfZGVmYXVsdCkge1xuXHR0aGlzLnR5cGUgPSB0eXBlO1xuXHR0aGlzLnN1YnR5cGUgPSB0ZXh0dXJlX2RlZmF1bHQ7XG5cdC8vIHRoaXMudGV4dHVyZUVsZW1lbnRzID0gW107XG59XG5cbmZ1bmN0aW9uIFRleHR1cmVFbGVtZW50Q29tcG9uZW50KGVsZW1lbnQgPSB0ZXh0dXJlX2RlZmF1bHQsIHhPZmYgPSAwLCB5T2ZmID0gMCkge1xuXHR0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuXHR0aGlzLnhPZmYgPSB4T2ZmO1xuXHR0aGlzLnlPZmYgPSB5T2ZmO1xufVxuXG5mdW5jdGlvbiBMaWdodENvbXBvbmVudCgpIHtcblx0dGhpcy5sZXZlbCA9IDA7XG59XG5cbmZ1bmN0aW9uIExpZ2h0RW1pdHRlckNvbXBvbmVudChlbWl0dGVyTGV2ZWwpIHtcblx0dGhpcy5sZXZlbCA9IGVtaXR0ZXJMZXZlbDtcbn1cblxuZnVuY3Rpb24gQWN0aW9uc0NvbXBvbmVudChhY3Rpb25zKSB7XG5cdHRoaXMuYnVzeSA9IDA7XG5cdHRoaXMuYWN0aW9ucyA9IGFjdGlvbnNcblx0Zm9yKGxldCBhIGluIGFjdGlvbnMpIHtcblx0XHR0aGlzLmFjdGlvbnNbYV0gPSBuZXcgQWN0aW9uQ29tcG9uZW50KGFjdGlvbnNbYV0uYWN0aW9uLCBhY3Rpb25zW2FdLmNvb2xkb3duLCBhY3Rpb25zW2FdLnRpbWUpO1xuXHR9XG5cdHRoaXMubmV4dEFjdGlvbiA9IGFjdGlvbl9ub25lO1xuXHR0aGlzLmN1cnJlbnRBY3Rpb24gPSBhY3Rpb25fbm9uZTtcblx0dGhpcy5sYXN0QWN0aW9uID0gYWN0aW9uX25vbmU7XG5cdHRoaXMubGFzdEFjdGlvbkZhaWxlZCA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBBY3Rpb25Db21wb25lbnQoYWN0aW9uSUQsIGFjdGlvbkNvb2xkb3duLCBhY3Rpb25UaW1lKSB7XG5cdHRoaXMuYWN0aW9uID0gYWN0aW9uSUQ7XG5cdHRoaXMuY29vbGRvd24gPSBhY3Rpb25Db29sZG93bjtcblx0dGhpcy50aW1lID0gYWN0aW9uVGltZTtcblx0dGhpcy5jdXJyZW50Q29vbGRvd24gPSAwO1xufVxuXG5mdW5jdGlvbiBTcHJpbnRDb21wb25lbnQobW92ZXNCZWZvcmVTcHJpbnRpbmcsIHNwcmludFNwZWVkKSB7XG5cdHRoaXMubW92ZXNCZWZvcmVTcHJpbnRpbmcgPSBtb3Zlc0JlZm9yZVNwcmludGluZztcblx0dGhpcy5sYXN0TW92ZVRpbWUgPSAwO1xuXHR0aGlzLnNwcmludENvdW50ZXIgPSAwO1xuXHR0aGlzLnNwcmludGluZyA9IGZhbHNlO1xuXHR0aGlzLnNwcmludFNwZWVkID0gc3ByaW50U3BlZWQ7XG59XG5cbmZ1bmN0aW9uIE1hcENvbXBvbmVudChtYXApIHtcblx0dGhpcy5tYXAgPSBtYXA7XG59XG5cbmZ1bmN0aW9uIERlcHRoQ29tcG9uZW50KGRlcHRoKSB7XG5cdHRoaXMuZGVwdGggPSBkZXB0aDtcbn1cblxuZnVuY3Rpb24gQUlDb21wb25lbnQoYXR0YWNrUmFuZ2UpIHtcblx0dGhpcy5hdHRhY2tSYW5nZSA9IGF0dGFja1JhbmdlO1xuXHR0aGlzLm5vdGljZWRQbGF5ZXIgPSBmYWxzZTtcblx0dGhpcy5pZGxlVGltZXIgPSAwO1xufVxuXG5mdW5jdGlvbiBBYmlsaXRpZXNDb21wb25lbnQoYWJpbGl0aWVzKSB7XG5cdHRoaXMuYWJpbGl0aWVzID0gW107XG5cdGZvcihsZXQgYSBvZiBhYmlsaXRpZXMpIHtcblx0XHR0aGlzLmFiaWxpdGllcy5wdXNoKG5ldyBBYmlsaXR5Q29tcG9uZW50KGEpKTtcblx0fVxufVxuXG5mdW5jdGlvbiBBYmlsaXR5Q29tcG9uZW50KGFiaWxpdHkpIHtcblx0Zm9yKGxldCBwcm9wIGluIGFiaWxpdHkpIHtcblx0XHR0aGlzW3Byb3BdID0gYWJpbGl0eVtwcm9wXTtcblx0fVxuXHR0aGlzLmN1cnJlbnRDb29sZG93biA9IDA7XG59XG5cbmZ1bmN0aW9uIENvbnRyb2xsZXJDb21wb25lbnQoY29udHJvbHMpIHtcblx0dGhpcy5pbnB1dHMgPSBjb250cm9sc1xufVxuXG5mdW5jdGlvbiBDYW1lcmFDb21wb25lbnQocG9zaXRpb24pIHtcblx0dGhpcy5yZWFkeSA9IGZhbHNlO1xuXHR0aGlzLnNtb290aEZyYW1lcyA9IDQ7XG5cdHRoaXMuY2FtZXJhWCA9IHBvc2l0aW9uLng7XG5cdHRoaXMuY2FtZXJhWSA9IHBvc2l0aW9uLnk7XG5cdHRoaXMuc2hha2VPZmZzZXRYID0gMDtcblx0dGhpcy5zaGFrZU9mZnNldFkgPSAwO1xuXHQvLyB0aGlzLmNvbWJhdCA9IGZhbHNlO1xuXHQvLyB0aGlzLnNwcmludGluZyA9IGZhbHNlO1xuXHR0aGlzLnpvb20gPSAxO1xufVxuXG5mdW5jdGlvbiBJbnRlcmFjdGFibGVDb21wb25lbnQodHlwZSkge1xuXHR0aGlzLnR5cGUgPSB0eXBlO1xufVxuIiwiZnVuY3Rpb24gUGxheWVyVGVtcGxhdGUoeCA9IDAsIHkgPSAwLCBkZXB0aCA9IDAsIHNpemUgPSBERUZBVUxUX1BMQVlFUl9TSVpFLCBoZWFsdGggPSBERUZBVUxUX1BMQVlFUl9IRUFMVEgsIGF0dGFja0RhbWFnZSA9IERFRkFVTFRfUExBWUVSX0FUVEFDS19EQU1BR0UsIG1hZ2ljRGFtYWdlID0gREVGQVVMVF9QTEFZRVJfTUFHSUNfREFNQUdFLCBhcm1vciA9IERFRkFVTFRfUExBWUVSX0FSTU9SLCBhYmlsaXRpZXMsIGFuaW1hdGlvbnMgPSAtMSkge1xuXHRsZXQgY29tcG9uZW50cyA9IFtdO1xuXHRjb21wb25lbnRzW2NvbXBvbmVudF9wb3NpdGlvbl0gPSBuZXcgUG9zaXRpb25Db21wb25lbnQoeCwgeSk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2RlcHRoXSA9IG5ldyBEZXB0aENvbXBvbmVudChkZXB0aCk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2Rpc3BsYXldID0gbmV3IERpc3BsYXlDb21wb25lbnQoc2l6ZSwgc2l6ZSk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2NhbWVyYV0gPSBuZXcgQ2FtZXJhQ29tcG9uZW50KHgsIHkpO1xuXHRjb21wb25lbnRzW2NvbXBvbmVudF9jb2xsaXNpb25dID0gbmV3IENvbGxpc2lvbkNvbXBvbmVudCh4LCB5LCBzaXplLCBzaXplKTtcblx0Y29tcG9uZW50c1tjb21wb25lbnRfZGlyZWN0aW9uXSA9IG5ldyBEaXJlY3Rpb25Db21wb25lbnQoZGlyZWN0aW9uX2Rvd24pO1xuXHRjb21wb25lbnRzW2NvbXBvbmVudF9oZWFsdGhdID0gbmV3IEhlYWx0aENvbXBvbmVudChoZWFsdGgpO1xuXHRjb21wb25lbnRzW2NvbXBvbmVudF9jb21iYXRdID0gbmV3IENvbWJhdENvbXBvbmVudChhdHRhY2tEYW1hZ2UsIG1hZ2ljRGFtYWdlLCBhcm1vcik7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2FjdGlvbnNdID0gbmV3IEFjdGlvbnNDb21wb25lbnQoREVGQVVMVF9QTEFZRVJfQUNUSU9OUyk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2NvbnRyb2xsZXJdID0gbmV3IENvbnRyb2xsZXJDb21wb25lbnQoREVGQVVMVF9DT05UUk9MTEVSX0xBWU9VVCk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2FiaWxpdGllc10gPSBuZXcgQWJpbGl0aWVzQ29tcG9uZW50KGFiaWxpdGllcyk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2FuaW1hdGlvbl0gPSBuZXcgQW5pbWF0aW9uQ29tcG9uZW50KGFuaW1hdGlvbnMpO1xuXHQvLyBjb21wb25lbnRfc3ByaW50OiBuZXcgU3ByaW50Q29tcG9uZW50KERFRkFVTFRfU1BSSU4sIGNvbmZpZy5zcHJpbnRfc3BlZWQpLFxuXHQvLyBjb21wb25lbnRfbGlnaHRFbWl0dGVyOiBuZXcgTGlnaHRFbWl0dGVyQ29tcG9uZW50KGxpZ2h0X2xldmVsX3BsYXllciksXG5cdHJldHVybiBjb21wb25lbnRzO1xufVxuXG5mdW5jdGlvbiBFbmVteVRlbXBsYXRlKHggPSAwLCB5ID0gMCwgc2l6ZSA9IERFRkFVTFRfRU5FTVlfU0laRSwgZGlyZWN0aW9uID0gcmFuZG9tSW50KDAsIDMpLCBoZWFsdGggPSBERUZBVUxUX0VORU1ZX0hFQUxUSCwgYXR0YWNrRGFtYWdlID0gREVGQVVMVF9FTkVNWV9BVFRBQ0tfREFNQUdFLCBtYWdpY0RhbWFnZSA9IERFRkFVTFRfRU5FTVlfTUFHSUNfREFNQUdFLCBhcm1vciA9IERFRkFVTFRfRU5FTVlfQVJNT1IsIGFjdGlvbnMgPSBERUZBVUxUX0VORU1ZX0FDVElPTlMsIGFiaWxpdGllcywgYW5pbWF0aW9ucyA9IC0xKSB7XG5cdGxldCBjb21wb25lbnRzID0gW107XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X3Bvc2l0aW9uXSA9IG5ldyBQb3NpdGlvbkNvbXBvbmVudCh4LCB5KTtcblx0Y29tcG9uZW50c1tjb21wb25lbnRfZGlzcGxheV0gPSBuZXcgRGlzcGxheUNvbXBvbmVudChzaXplLCBzaXplKTtcblx0Y29tcG9uZW50c1tjb21wb25lbnRfY29sbGlzaW9uXSA9IG5ldyBDb2xsaXNpb25Db21wb25lbnQoeCwgeSwgc2l6ZSwgc2l6ZSk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2RpcmVjdGlvbl0gPSBuZXcgRGlyZWN0aW9uQ29tcG9uZW50KGRpcmVjdGlvbik7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2hlYWx0aF0gPSBuZXcgSGVhbHRoQ29tcG9uZW50KGhlYWx0aCk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2NvbWJhdF0gPSBuZXcgQ29tYmF0Q29tcG9uZW50KGF0dGFja0RhbWFnZSwgbWFnaWNEYW1hZ2UsIGFybW9yKTtcblx0Y29tcG9uZW50c1tjb21wb25lbnRfYWN0aW9uc10gPSBuZXcgQWN0aW9uc0NvbXBvbmVudChhY3Rpb25zKTtcblx0Y29tcG9uZW50c1tjb21wb25lbnRfYWJpbGl0aWVzXSA9IG5ldyBBYmlsaXRpZXNDb21wb25lbnQoYWJpbGl0aWVzKTtcblx0Y29tcG9uZW50c1tjb21wb25lbnRfYW5pbWF0aW9uXSA9IG5ldyBBbmltYXRpb25Db21wb25lbnQoYW5pbWF0aW9ucyk7XG5cdHJldHVybiBjb21wb25lbnRzO1xufVxuXG5mdW5jdGlvbiBTcXVhcmVUZW1wbGF0ZSh4LCB5LCB0eXBlKSB7XG5cdGxldCBjb21wb25lbnRzID0gW107XG5cdGlmKHR5cGUgPT0gc3F1YXJlX3dhbGwpIHtcblx0XHRjb21wb25lbnRzW2NvbXBvbmVudF9wb3NpdGlvbl0gPSBuZXcgUG9zaXRpb25Db21wb25lbnQoeCwgeSk7XG5cdFx0Y29tcG9uZW50c1tjb21wb25lbnRfZGlzcGxheV0gPSBuZXcgRGlzcGxheUNvbXBvbmVudCgxLCAxKTtcblx0XHRjb21wb25lbnRzW2NvbXBvbmVudF90ZXh0dXJlXSA9IG5ldyBUZXh0dXJlQ29tcG9uZW50KHRleHR1cmVfd2FsbCk7XG5cdFx0Y29tcG9uZW50c1tjb21wb25lbnRfY29sbGlzaW9uXSA9IG5ldyBDb2xsaXNpb25Db21wb25lbnQoeCwgeSwgMSwgMSk7XG5cdH1cblx0ZWxzZSBpZih0eXBlID09IHNxdWFyZV9mbG9vcikge1xuXHRcdGNvbXBvbmVudHNbY29tcG9uZW50X3Bvc2l0aW9uXSA9IG5ldyBQb3NpdGlvbkNvbXBvbmVudCh4LCB5KTtcblx0XHRjb21wb25lbnRzW2NvbXBvbmVudF9kaXNwbGF5XSA9IG5ldyBEaXNwbGF5Q29tcG9uZW50KDEsIDEpO1xuXHRcdGNvbXBvbmVudHNbY29tcG9uZW50X3RleHR1cmVdID0gbmV3IFRleHR1cmVDb21wb25lbnQodGV4dHVyZV9mbG9vcik7XG5cdH1cblx0ZWxzZSBpZih0eXBlID09IHNxdWFyZV9kb29yKSB7XG5cdFx0Y29tcG9uZW50c1tjb21wb25lbnRfcG9zaXRpb25dID0gbmV3IFBvc2l0aW9uQ29tcG9uZW50KHgsIHkpO1xuXHRcdGNvbXBvbmVudHNbY29tcG9uZW50X2Rpc3BsYXldID0gbmV3IERpc3BsYXlDb21wb25lbnQoMSwgMSk7XG5cdFx0Y29tcG9uZW50c1tjb21wb25lbnRfdGV4dHVyZV0gPSBuZXcgVGV4dHVyZUNvbXBvbmVudCh0ZXh0dXJlX2Rvb3JfY2xvc2VkKTtcblx0XHRjb21wb25lbnRzW2NvbXBvbmVudF9jb2xsaXNpb25dID0gbmV3IENvbGxpc2lvbkNvbXBvbmVudCh4LCB5LCAxLCAxKTtcblx0XHRjb21wb25lbnRzW2NvbXBvbmVudF9pbnRlcmFjdGFibGVdID0gbmV3IEludGVyYWN0YWJsZUNvbXBvbmVudChpbnRlcmFjdGFibGVfZG9vcik7XG5cdH1cblx0ZWxzZSBpZih0eXBlID09IHNxdWFyZV9zdGFpcikge1xuXHRcdGNvbXBvbmVudHNbY29tcG9uZW50X3Bvc2l0aW9uXSA9IG5ldyBQb3NpdGlvbkNvbXBvbmVudCh4LCB5KTtcblx0XHRjb21wb25lbnRzW2NvbXBvbmVudF9kaXNwbGF5XSA9IG5ldyBEaXNwbGF5Q29tcG9uZW50KDEsIDEpO1xuXHRcdGNvbXBvbmVudHNbY29tcG9uZW50X3RleHR1cmVdID0gbmV3IFRleHR1cmVDb21wb25lbnQodGV4dHVyZV9zdGFpcik7XG5cdFx0Y29tcG9uZW50c1tjb21wb25lbnRfaW50ZXJhY3RhYmxlXSA9IG5ldyBJbnRlcmFjdGFibGVDb21wb25lbnQoaW50ZXJhY3RhYmxlX3N0YWlyKTtcblx0fVxuXHRlbHNlIGlmKHR5cGUgPT0gc3F1YXJlX2xldmVsX29yaWdpbikge1xuXHRcdGNvbXBvbmVudHNbY29tcG9uZW50X3Bvc2l0aW9uXSA9IG5ldyBQb3NpdGlvbkNvbXBvbmVudCh4LCB5KTtcblx0XHRjb21wb25lbnRzW2NvbXBvbmVudF9kaXNwbGF5XSA9IG5ldyBEaXNwbGF5Q29tcG9uZW50KDEsIDEpO1xuXHRcdGNvbXBvbmVudHNbY29tcG9uZW50X3RleHR1cmVdID0gbmV3IFRleHR1cmVDb21wb25lbnQodGV4dHVyZV9sZXZlbF9vcmlnaW4pO1xuXHR9XG5cdHJldHVybiBjb21wb25lbnRzO1xufVxuXG5mdW5jdGlvbiBUb3JjaFRlbXBsYXRlKHggPSAwLCB5ID0gMCwgc2l6ZSA9IDEsIGRpcmVjdGlvbiA9IHJhbmRvbUludCgwLCAzKSkge1xuXHRsZXQgY29tcG9uZW50cyA9IFtdO1xuXHRjb21wb25lbnRzW2NvbXBvbmVudF9wb3NpdGlvbl0gPSBuZXcgUG9zaXRpb25Db21wb25lbnQoeCwgeSk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2Rpc3BsYXldID0gbmV3IERpc3BsYXlDb21wb25lbnQoc2l6ZSwgc2l6ZSk7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X2RpcmVjdGlvbl0gPSBuZXcgRGlyZWN0aW9uQ29tcG9uZW50KGRpcmVjdGlvbik7XG5cdGNvbXBvbmVudHNbY29tcG9uZW50X3RleHR1cmVdID0gbmV3IFRleHR1cmVDb21wb25lbnQodGV4dHVyZV90b3JjaCk7XG5cdHJldHVybiBjb21wb25lbnRzO1xufVxuIiwiZnVuY3Rpb24gR2FtZUVudGl0eShJRCwgY29tcG9uZW50cykge1xuXHR0aGlzLklEID0gSUQ7XG5cdHRoaXMuY29tcG9uZW50cyA9IGNvbXBvbmVudHM7XG59XG4iLCJcbmZ1bmN0aW9uIEl0ZW0oKXtcblxufVxuIiwiZnVuY3Rpb24gZ2VuZXJhdGVMZXZlbChDT05GSUcsIGRlcHRoLCBST09NX1BPT0wsIFNUQUlSX1JPT01fUE9PTCkge1xuXHRpZihET19MRVZFTF9HRU4pIHtcblx0XHRsZXQgc3RhcnRUaW1lID0gbWlsbGlzKCk7XG5cblx0XHRsZXQgbGV2ZWw7XG5cdFx0bGV0IHJvb21zID0gW107XG5cdFx0bGV0IHRvcmNoZXMgPSBbXTtcblxuXHRcdGxldCBzdGFpclVwID0ge3g6MCwgeTowLCBzZWN0b3I6MH07XG5cdFx0bGV0IHN0YWlyRG93biA9IHt4OjAsIHk6MCwgc2VjdG9yOjB9O1xuXG5cdFx0bGV2ZWwgPSBpbml0TGV2ZWwoQ09ORklHLkRVTkdFT05fU0laRSwgc3F1YXJlX3dhbGwpO1xuXHRcdHJvb21zLnB1c2goZ2VuZXJhdGVTdGFpclVwUm9vbShzdGFpclVwLCBDT05GSUcuRFVOR0VPTl9TSVpFLCBTVEFJUl9ST09NX1BPT0wpKTtcblx0XHRzdGFpclVwLnggPSByb29tc1swXS54O1xuXHRcdHN0YWlyVXAueSA9IHJvb21zWzBdLnk7XG5cdFx0cm9vbXMucHVzaChnZW5lcmF0ZVN0YWlyRG93blJvb20oc3RhaXJVcCwgc3RhaXJEb3duLCBDT05GSUcuRFVOR0VPTl9TSVpFLCBTVEFJUl9ST09NX1BPT0wpKTtcblx0XHRzdGFpckRvd24ueCA9IHJvb21zWzFdLng7XG5cdFx0c3RhaXJEb3duLnkgPSByb29tc1sxXS55O1xuXHRcdGdlbmVyYXRlT3RoZXJSb29tcyhsZXZlbCwgcm9vbXMsIENPTkZJRy5EVU5HRU9OX1NJWkUsIENPTkZJRy5ST09NX1RSSUVTLCBST09NX1BPT0wpO1xuXHRcdHBsYWNlUm9vbXNPbkxldmVsKGxldmVsLCByb29tcyk7XG5cdFx0bWFya05vZGVTcXVhcmVzKGxldmVsKTtcblx0XHRjb25uZWN0Um9vbXMobGV2ZWwsIHJvb21zLCBDT05GSUcuRFVOR0VPTl9TSVpFKTtcblx0XHRwb3B1bGF0ZVJvb21zKGxldmVsLCByb29tcywgdG9yY2hlcyk7XG5cdFx0ZmluYWxpemVMZXZlbChsZXZlbCwgc3RhaXJVcCwgc3RhaXJEb3duKTtcblxuXHRcdC8vIGNvbnNvbGUubG9nKFwiTWlsbGlzZWNvbmRzOiBcIiArIChtaWxsaXMoKSAtIHN0YXJ0VGltZSkpO1xuXG5cdFx0cmV0dXJuIHtcblx0XHRcdFwibGV2ZWxfb3JpZ2luXCI6IHN0YWlyVXAsXG5cdFx0XHRcInNxdWFyZXNcIjogbGV2ZWxcblx0XHR9O1xuXHRcdFx0Ly8gbGV2ZWwsIHJvb21zLCBzdGFpclVwLCBzdGFpckRvd24sIGRlcHRoLCB0b3JjaGVzKTtcblx0fVxuXHRlbHNlIHtcblx0XHRsZXQgbGV2ZWwgPSBpbml0TGV2ZWwoQ09ORklHLkRVTkdFT05fU0laRSwgc3F1YXJlX2Zsb29yKTtcblx0XHRsZXQgdG9yY2hlcyA9IFtdO1xuXHRcdGxldCBzdGFpclVwID0ge1xuXHRcdFx0eDogcmFuZG9tSW50KENPTkZJRy5EVU5HRU9OX1NJWkUpLFxuXHRcdFx0eTogcmFuZG9tSW50KENPTkZJRy5EVU5HRU9OX1NJWkUpXG5cdFx0fVxuXHRcdGxldCBzdGFpckRvd24gPSB7XG5cdFx0XHR4OiByYW5kb21JbnQoQ09ORklHLkRVTkdFT05fU0laRSksXG5cdFx0XHR5OiByYW5kb21JbnQoQ09ORklHLkRVTkdFT05fU0laRSlcblx0XHR9XG5cdFx0ZmluYWxpemVMZXZlbChsZXZlbCwgc3RhaXJVcCwgc3RhaXJEb3duKTtcblx0XHRyZXR1cm4gbmV3IExldmVsKGxldmVsLCBzdGFpclVwLCBzdGFpckRvd24sIGRlcHRoLCB0b3JjaGVzKTtcblx0fVxufVxuXG5mdW5jdGlvbiBpbml0TGV2ZWwoc2l6ZSwgZGVmYXVsdFZhbHVlKSB7XG5cdGxldCBsZXZlbCA9IG5ldyBBcnJheShzaXplKTtcblx0Zm9yKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuXHRcdGxldmVsW2ldID0gbmV3IEFycmF5KHNpemUpO1xuXHRcdGZvcihsZXQgaiA9IDA7IGogPCBzaXplOyBqKyspIHtcblx0XHRcdGxldmVsW2ldW2pdID0gZGVmYXVsdFZhbHVlO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gbGV2ZWw7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlU3RhaXJVcFJvb20oc3RhaXJVcCwgc2l6ZSwgU1RBSVJfUk9PTV9QT09MKSB7XG5cdHN0YWlyVXAuc2VjdG9yID0gcmFuZG9tSW50KDgpO1xuXHRzZWN0b3JUb0Nvb3JkaW5hdGVzKHN0YWlyVXAsIHNpemUpO1xuXG5cdC8vIHN0YWlyVXAueCArPSAoc3RhaXJVcC54ICUgMikgLSAxO1xuXHQvLyBzdGFpclVwLnkgKz0gKHN0YWlyVXAueSAlIDIpIC0gMTtcblxuXHRyZXR1cm4gbmV3IFJvb20ocmFuZG9tKFNUQUlSX1JPT01fUE9PTCksIHN0YWlyVXAueCwgc3RhaXJVcC55KTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVTdGFpckRvd25Sb29tKHN0YWlyVXAsIHN0YWlyRG93biwgc2l6ZSwgU1RBSVJfUk9PTV9QT09MKSB7XG5cdHN0YWlyRG93bi5zZWN0b3IgPSAoc3RhaXJVcC5zZWN0b3IgKyA0KSAlIDg7XG5cdHNlY3RvclRvQ29vcmRpbmF0ZXMoc3RhaXJEb3duLCBzaXplKTtcblxuXHQvLyBzdGFpckRvd24ueCArPSAoc3RhaXJEb3duLnggJSAyKSAtIDE7XG5cdC8vIHN0YWlyRG93bi55ICs9IChzdGFpckRvd24ueSAlIDIpIC0gMTtcblxuXHRyZXR1cm4gbmV3IFJvb20ocmFuZG9tKFNUQUlSX1JPT01fUE9PTCksIHN0YWlyRG93bi54LCBzdGFpckRvd24ueSk7XG59XG5cbmZ1bmN0aW9uIHNlY3RvclRvQ29vcmRpbmF0ZXMoc3RhaXIsIHNpemUpIHtcblx0Ly8gMCAxIDJcblx0Ly8gNyBYIDMgIChzZWN0b3IgKyA0KSAlIDggPSBvcHBvc2l0ZSBzZWN0b3Jcblx0Ly8gNiA1IDRcblx0c3dpdGNoKHN0YWlyLnNlY3Rvcikge1xuXHRcdGNhc2UgMDpcblx0XHRcdHN0YWlyLnggPSBmbG9vcihzaXplLzQpO1xuXHRcdFx0c3RhaXIueSA9IGZsb29yKHNpemUvNCk7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIDE6XG5cdFx0XHRzdGFpci54ID0gMiAqIGZsb29yKHNpemUvNCk7XG5cdFx0XHRzdGFpci55ID0gZmxvb3Ioc2l6ZS80KTtcblx0XHRcdGJyZWFrO1xuXHRcdGNhc2UgMjpcblx0XHRcdHN0YWlyLnggPSAzICogZmxvb3Ioc2l6ZS80KTtcblx0XHRcdHN0YWlyLnkgPSBmbG9vcihzaXplLzQpO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSAzOlxuXHRcdFx0c3RhaXIueCA9IDMgKiBmbG9vcihzaXplLzQpO1xuXHRcdFx0c3RhaXIueSA9IDIgKiBmbG9vcihzaXplLzQpO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSA0OlxuXHRcdFx0c3RhaXIueCA9IDMgKiBmbG9vcihzaXplLzQpO1xuXHRcdFx0c3RhaXIueSA9IDMgKiBmbG9vcihzaXplLzQpO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSA1OlxuXHRcdFx0c3RhaXIueCA9IDIgKiBmbG9vcihzaXplLzQpO1xuXHRcdFx0c3RhaXIueSA9IDMgKiBmbG9vcihzaXplLzQpO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSA2OlxuXHRcdFx0c3RhaXIueCA9IGZsb29yKHNpemUvNCk7XG5cdFx0XHRzdGFpci55ID0gMyAqIGZsb29yKHNpemUvNCk7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIDc6XG5cdFx0XHRzdGFpci54ID0gZmxvb3Ioc2l6ZS80KTtcblx0XHRcdHN0YWlyLnkgPSAyICogZmxvb3Ioc2l6ZS80KTtcblx0XHRcdGJyZWFrO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlT3RoZXJSb29tcyhsZXZlbCwgcm9vbXMsIHNpemUsIFJPT01fVFJJRVMsIFJPT01fUE9PTCkge1xuXHRmb3IobGV0IGkgPSAwOyBpIDwgUk9PTV9UUklFUzsgaSsrKSB7XG5cdFx0dHJ5Um9vbShsZXZlbCwgcm9vbXMsIHNpemUsIFJPT01fUE9PTCk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdHJ5Um9vbShsZXZlbCwgcm9vbXMsIHNpemUsIFJPT01fUE9PTCkge1xuXHRsZXQgbmV3Um9vbSA9IG5ldyBSb29tKHJhbmRvbShST09NX1BPT0wpLCByYW5kb21JbnQoc2l6ZSksIHJhbmRvbUludChzaXplKSk7XG5cdGlmKGlzVmFsaWRSb29tKHJvb21zLCBuZXdSb29tLCBzaXplKSkgcm9vbXMucHVzaChuZXdSb29tKTtcbn1cblxuZnVuY3Rpb24gaXNWYWxpZFJvb20ocm9vbXMsIG5ld1Jvb20sIHNpemUpIHtcblx0aWYobmV3Um9vbS5sZWZ0IDwgMCB8fCBuZXdSb29tLnRvcCA8IDAgfHwgbmV3Um9vbS5yaWdodCA+IHNpemUgfHwgbmV3Um9vbS5ib3R0b20gPiBzaXplKSByZXR1cm4gZmFsc2U7XG5cdGZvcihsZXQgciBvZiByb29tcykge1xuXHRcdGlmKHJvb21zQ29sbGlkZShyLCBuZXdSb29tKSkgcmV0dXJuIGZhbHNlO1xuXHR9XG5cdHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiByb29tc0NvbGxpZGUocjEsIHIyKSB7XG5cdHJldHVybiAhKHIxLmxlZnQgPiByMi5yaWdodCB8fCByMS50b3AgPiByMi5ib3R0b20gfHwgcjEucmlnaHQgPCByMi5sZWZ0IHx8IHIxLmJvdHRvbSA8IHIyLnRvcCk7XG59XG5cbmZ1bmN0aW9uIHBsYWNlUm9vbXNPbkxldmVsKGxldmVsLCByb29tcykge1xuXHRmb3IobGV0IHIgb2Ygcm9vbXMpIHtcblx0XHRmb3IobGV0IGkgPSAwOyBpIDwgci53aWR0aDsgaSsrKSB7XG5cdFx0XHRmb3IobGV0IGogPSAwOyBqIDwgci5oZWlnaHQ7IGorKykge1xuXHRcdFx0XHRsZXZlbFtpICsgci5sZWZ0XVtqICsgci50b3BdID0gci5zcXVhcmVzW2ldW2pdO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBtYXJrTm9kZVNxdWFyZXMobGV2ZWwpIHtcblx0Zm9yKGxldCBpID0gMTsgaSA8IGxldmVsLmxlbmd0aCAtIDE7IGkrPTIpIHtcblx0XHRmb3IobGV0IGogPSAxOyBqIDwgbGV2ZWwubGVuZ3RoIC0gMTsgais9Mikge1xuXHRcdFx0aWYobGV2ZWxbaV1bal0gPT0gc3F1YXJlX3dhbGwpIGxldmVsW2ldW2pdID0gbmV3IE5vZGUoaSwgaiwgZmFsc2UpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBjb25uZWN0Um9vbXMobGV2ZWwsIHJvb21zLCBzaXplKSB7XG5cblx0bGV0IGNvbm5lY3RlZCA9IFtyb29tc1swXV07XG5cdGxldCBjb25uZWN0ZWREb29ycyA9IHJvb21zWzBdLmRvb3JzO1xuXHR3aGlsZShjb25uZWN0ZWQubGVuZ3RoIDwgcm9vbXMubGVuZ3RoKSB7XG5cdFx0bGV0IGNsb3Nlc3RSb29tO1xuXHRcdGxldCBjbG9zZXN0RGlzdGFuY2U7XG5cdFx0Zm9yKGxldCByIG9mIHJvb21zKSB7XG5cdFx0XHRpZighY29ubmVjdGVkLmluY2x1ZGVzKHIpKSB7XG5cdFx0XHRcdGNsb3Nlc3RSb29tID0gcjtcblx0XHRcdFx0Y2xvc2VzdERpc3RhbmNlID0gMTAwMDA7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGZvcihsZXQgYyBvZiBjb25uZWN0ZWQpIHtcblx0XHRcdGZvcihsZXQgciBvZiByb29tcykge1xuXHRcdFx0XHRpZihjb25uZWN0ZWQuaW5jbHVkZXMocikpIGNvbnRpbnVlO1xuXHRcdFx0XHRlbHNle1xuXHRcdFx0XHRcdGxldCBjdXJyZW50RGlzdGFuY2UgPSByb29tRGlzdGFuY2UoYywgcik7XG5cdFx0XHRcdFx0aWYoY3VycmVudERpc3RhbmNlIDwgY2xvc2VzdERpc3RhbmNlKSB7XG5cdFx0XHRcdFx0XHRjbG9zZXN0Um9vbSA9IHI7XG5cdFx0XHRcdFx0XHRjbG9zZXN0RGlzdGFuY2UgPSBjdXJyZW50RGlzdGFuY2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGNvbm5lY3RSb29tKGxldmVsLCBjb25uZWN0ZWQsIGNsb3Nlc3RSb29tLCBjb25uZWN0ZWREb29ycyk7XG5cdH1cbn1cblxuZnVuY3Rpb24gcm9vbURpc3RhbmNlKHIxLCByMikge1xuXHRyZXR1cm4gYWJzKHIxLnggLSByMi54KSArIGFicyhyMS55IC0gcjIueSk7XG59XG5cbmZ1bmN0aW9uIGNvbm5lY3RSb29tKGxldmVsLCBjb25uZWN0ZWQsIHJvb20sIGNvbm5lY3RlZERvb3JzKSB7XG5cblx0bGV0IHJvb21Eb29ycyA9IHJvb20uZG9vcnM7XG5cdGxldCBjbG9zZXN0RG9vcnMgPSBbY29ubmVjdGVkRG9vcnNbMF0sIHJvb21Eb29yc1swXV07XG5cdGxldCBjbG9zZXN0RGlzdGFuY2UgPSAxMDAwMDtcblx0bGV0IGFkamFjZW50ID0gZmFsc2U7XG5cdGxldCBzdWNjZXNzID0gZmFsc2U7XG5cblx0Zm9yKGxldCByZCBvZiByb29tRG9vcnMpIHtcblx0XHQvL2lmIGRvb3IgdG91Y2hlcyBhIGNvbm5lY3RlZCByb29tLCB1c2UgdGhhdCBkb29yXG5cdFx0aWYoaW5jbHVkZXNEb29yKGNvbm5lY3RlZERvb3JzLCByZCkpIHtcblx0XHRcdGNsb3Nlc3REb29yc1swXSA9IHJkO1xuXHRcdFx0YWRqYWNlbnQgPSB0cnVlO1xuXHRcdFx0c3VjY2VzcyA9IHRydWU7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdFx0Ly9vdGhlcndpc2UgZmluZCB0aGUgY2xvc2VzdCBwb2ludCBvZiBjb25uZWN0aW9uXG5cdFx0ZWxzZXtcblx0XHRcdGZvcihsZXQgY2Qgb2YgY29ubmVjdGVkRG9vcnMpIHtcblx0XHRcdFx0bGV0IGN1cnJlbnREaXN0YW5jZSA9IGRvb3JEaXN0YW5jZShyZCwgY2QpO1xuXHRcdFx0XHRpZihjdXJyZW50RGlzdGFuY2UgPCBjbG9zZXN0RGlzdGFuY2UpIHtcblx0XHRcdFx0XHRjbG9zZXN0RG9vcnMgPSBbY2QsIHJkXTtcblx0XHRcdFx0XHRjbG9zZXN0RGlzdGFuY2UgPSBjdXJyZW50RGlzdGFuY2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZighYWRqYWNlbnQpIHtcblx0XHRzdWNjZXNzID0gbWFrZVBhdGhCZXR3ZWVuRG9vcnMobGV2ZWwsIGNsb3Nlc3REb29yc1swXSwgY2xvc2VzdERvb3JzWzFdLCBjb25uZWN0ZWREb29ycyk7XG5cdH1cblxuXHRpZihzdWNjZXNzKSB7XG5cdFx0aWYoYWRqYWNlbnQpIHtcblx0XHRcdGxldmVsW2Nsb3Nlc3REb29yc1swXVswXV1bY2xvc2VzdERvb3JzWzBdWzFdXSA9IHNxdWFyZV9kb29yO1xuXHRcdH1cblx0XHRlbHNle1xuXHRcdFx0bGV2ZWxbY2xvc2VzdERvb3JzWzBdWzBdXVtjbG9zZXN0RG9vcnNbMF1bMV1dID0gc3F1YXJlX2Rvb3I7XG5cdFx0XHRsZXZlbFtjbG9zZXN0RG9vcnNbMV1bMF1dW2Nsb3Nlc3REb29yc1sxXVsxXV0gPSBzcXVhcmVfZG9vcjtcblx0XHR9XG5cblx0XHRmb3IobGV0IHJkIG9mIHJvb21Eb29ycykge1xuXHRcdFx0aWYoIWluY2x1ZGVzRG9vcihjb25uZWN0ZWREb29ycywgcmQpKSB7XG5cdFx0XHRcdGNvbm5lY3RlZERvb3JzLnB1c2gocmQpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRjb25uZWN0ZWQucHVzaChyb29tKTtcblx0fVxuXHRlbHNle1xuXHRcdGNvbm5lY3RlZERvb3JzLnNwbGljZShjb25uZWN0ZWREb29ycy5pbmRleE9mKGNsb3Nlc3REb29yc1swXSksIDEpO1xuXHRcdHJvb20uZG9vcnMuc3BsaWNlKHJvb20uZG9vcnMuaW5kZXhPZihjbG9zZXN0RG9vcnNbMV0pLCAxKTtcblx0XHRjb25uZWN0Um9vbShsZXZlbCwgY29ubmVjdGVkLCByb29tLCBjb25uZWN0ZWREb29ycyk7XG5cdH1cbn1cblxuZnVuY3Rpb24gaW5jbHVkZXNEb29yKGRvb3JBcnJheSwgZG9vcikge1xuXHRmb3IobGV0IGQgb2YgZG9vckFycmF5KSB7XG5cdFx0aWYoZG9vclswXSA9PSBkWzBdICYmIGRvb3JbMV0gPT0gZFsxXSkgcmV0dXJuIHRydWU7XG5cdH1cblx0cmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBkb29yRGlzdGFuY2UoZDEsIGQyKSB7XG5cdHJldHVybiAoKGQxWzBdIC0gZDJbMF0pICogKGQxWzBdIC0gZDJbMF0pKSArICgoZDFbMV0gLSBkMlsxXSkgKiAoZDFbMV0gLSBkMlsxXSkpO1xufVxuXG5mdW5jdGlvbiBtYWtlUGF0aEJldHdlZW5Eb29ycyhsZXZlbCwgZG9vcjEsIGRvb3IyLCBjb25uZWN0ZWREb29ycykge1xuXHRsZXQgc2VhcmNoZWQgPSBbXTtcblx0bGV0IHNlYXJjaGluZyA9IFtdO1xuXHRsZXQgZGlzdEZyb21TdGFydCA9IHt9O1xuXHRsZXQgZmluYWxDb3N0ID0ge307XG5cblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBsZXZlbC5sZW5ndGg7IGkrKykge1xuXHRcdGZvciAobGV0IGogPSAwOyBqIDwgbGV2ZWxbMF0ubGVuZ3RoOyBqKyspIHtcblx0XHRcdGRpc3RGcm9tU3RhcnRbbGV2ZWxbaV1bal1dID0gTEFSR0VfVkFMVUU7XG5cdFx0XHRmaW5hbENvc3RbbGV2ZWxbaV1bal1dID0gTEFSR0VfVkFMVUU7XG5cdFx0fVxuXHR9XG5cblx0bGV0IHN0YXJ0ID0gZ2V0QWRqYWNlbnROb2RlKGxldmVsLCBkb29yMSk7XG5cdGxldCBlbmQgPSBnZXRBZGphY2VudE5vZGUobGV2ZWwsIGRvb3IyKTtcblxuXHRpZihzdGFydCA9PSB1bmRlZmluZWQgfHwgZW5kID09IHVuZGVmaW5lZCkgcmV0dXJuIGZhbHNlO1xuXG5cdHNlYXJjaGluZy5wdXNoKHN0YXJ0KTtcblx0ZGlzdEZyb21TdGFydFtzdGFydF0gPSAwO1xuXHRmaW5hbENvc3Rbc3RhcnRdID0gbm9kZURpc3RhbmNlKHN0YXJ0LCBlbmQpO1xuXHRzdGFydC5jYW1lRnJvbSA9IHVuZGVmaW5lZDtcblxuXHR3aGlsZSAoc2VhcmNoaW5nLmxlbmd0aCA+IDApIHtcblx0XHRsZXQgY3VycmVudCA9IHNlYXJjaGluZ1swXTtcblx0XHRmb3IgKGxldCBzIG9mIHNlYXJjaGluZykge1xuXHRcdFx0aWYgKGZpbmFsQ29zdFtzXSA8IGZpbmFsQ29zdFtjdXJyZW50XSkgY3VycmVudCA9IHM7XG5cdFx0fVxuXG5cdFx0aWYgKGN1cnJlbnQgPT0gZW5kKSB7XG5cdFx0XHRkcmF3Tm9kZVBhdGgobGV2ZWwsIGN1cnJlbnQsIGNvbm5lY3RlZERvb3JzKTtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblxuXHRcdHNlYXJjaGluZy5zcGxpY2Uoc2VhcmNoaW5nLmluZGV4T2YoY3VycmVudCksIDEpO1xuXHRcdHNlYXJjaGVkLnB1c2goY3VycmVudCk7XG5cblx0XHRsZXQgY3VycmVudE5laWdoYm9ycyA9IGdldFN1cnJvdW5kaW5nTm9kZXMobGV2ZWwsIGN1cnJlbnQpO1xuXHRcdGZvciAobGV0IG4gb2YgY3VycmVudE5laWdoYm9ycykge1xuXHRcdFx0aWYgKHNlYXJjaGVkLmluY2x1ZGVzKG4pKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGxldCBlc3RpbWF0ZWREaXN0RnJvbVN0YXJ0ID0gZGlzdEZyb21TdGFydFtjdXJyZW50XSArIDE7XG5cblx0XHRcdFx0aWYgKCFzZWFyY2hpbmcuaW5jbHVkZXMobikpIHtcblx0XHRcdFx0XHRzZWFyY2hpbmcucHVzaChuKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIGlmIChlc3RpbWF0ZWREaXN0RnJvbVN0YXJ0ID49IGRpc3RGcm9tU3RhcnRbbl0pIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdG4uY2FtZUZyb20gPSBjdXJyZW50O1xuXHRcdFx0XHRkaXN0RnJvbVN0YXJ0W25dID0gZXN0aW1hdGVkRGlzdEZyb21TdGFydDtcblx0XHRcdFx0ZmluYWxDb3N0W25dID0gZGlzdEZyb21TdGFydFtuXSArIG5vZGVEaXN0YW5jZShzdGFydCwgZW5kKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBnZXRBZGphY2VudE5vZGUobGV2ZWwsIGRvb3IpIHtcblx0aWYgKGRvb3JbMF0gJSAyID09IDEgJiYgZG9vclsxXSAlIDIgPT0gMSkgcmV0dXJuIGxldmVsW2Rvb3JbMF1dW2Rvb3JbMV1dO1xuXHRpZiAoZG9vclswXSA+IDEgJiYgbGV2ZWxbZG9vclswXSAtIDFdW2Rvb3JbMV1dIGluc3RhbmNlb2YgTm9kZSkgcmV0dXJuIGxldmVsW2Rvb3JbMF0gLSAxXVtkb29yWzFdXTtcblx0aWYgKGRvb3JbMV0gPiAxICYmIGxldmVsW2Rvb3JbMF1dW2Rvb3JbMV0gLSAxXSBpbnN0YW5jZW9mIE5vZGUpIHJldHVybiBsZXZlbFtkb29yWzBdXVtkb29yWzFdIC0gMV07XG5cdGlmIChkb29yWzBdIDwgbGV2ZWwubGVuZ3RoIC0gMiAmJiBsZXZlbFtkb29yWzBdICsgMV1bZG9vclsxXV0gaW5zdGFuY2VvZiBOb2RlKSByZXR1cm4gbGV2ZWxbZG9vclswXSArIDFdW2Rvb3JbMV1dO1xuXHRpZiAoZG9vclsxXSA8IGxldmVsLmxlbmd0aCAtIDIgJiYgbGV2ZWxbZG9vclswXV1bZG9vclsxXSArIDFdIGluc3RhbmNlb2YgTm9kZSkgcmV0dXJuIGxldmVsW2Rvb3JbMF1dW2Rvb3JbMV0gKyAxXTtcbn1cblxuZnVuY3Rpb24gbm9kZURpc3RhbmNlKHN0YXJ0LCBlbmQpIHtcblx0cmV0dXJuIGFicyhzdGFydC54IC0gZW5kLngpICsgYWJzKHN0YXJ0LnkgLSBlbmQueSk7XG59XG5cbmZ1bmN0aW9uIGdldFN1cnJvdW5kaW5nTm9kZXMobGV2ZWwsIG5vZGUpIHtcblx0bGV0IG5laWdoYm9ycyA9IFtdO1xuXHRpZiAobm9kZS54ID4gMSAmJiBsZXZlbFtub2RlLnggLSAyXVtub2RlLnldIGluc3RhbmNlb2YgTm9kZSkgbmVpZ2hib3JzLnB1c2gobGV2ZWxbbm9kZS54IC0gMl1bbm9kZS55XSk7XG5cdGlmIChub2RlLnkgPiAxICYmIGxldmVsW25vZGUueF1bbm9kZS55IC0gMl0gaW5zdGFuY2VvZiBOb2RlKSBuZWlnaGJvcnMucHVzaChsZXZlbFtub2RlLnhdW25vZGUueSAtIDJdKTtcblx0aWYgKG5vZGUueCA8IGxldmVsLmxlbmd0aCAtIDIgJiYgbGV2ZWxbbm9kZS54ICsgMl1bbm9kZS55XSBpbnN0YW5jZW9mIE5vZGUpIG5laWdoYm9ycy5wdXNoKGxldmVsW25vZGUueCArIDJdW25vZGUueV0pO1xuXHRpZiAobm9kZS55IDwgbGV2ZWwubGVuZ3RoIC0gMiAmJiBsZXZlbFtub2RlLnhdW25vZGUueSArIDJdIGluc3RhbmNlb2YgTm9kZSkgbmVpZ2hib3JzLnB1c2gobGV2ZWxbbm9kZS54XVtub2RlLnkgKyAyXSk7XG5cdHJldHVybiBuZWlnaGJvcnM7XG59XG5cbmZ1bmN0aW9uIGRyYXdOb2RlUGF0aChsZXZlbCwgbm9kZSkge1xuXHQvLyBsZXZlbFtub2RlLnhdW25vZGUueV0gPSBzcXVhcmVfZmxvb3I7XG5cdGxldmVsW25vZGUueF1bbm9kZS55XS5jb25uZWN0ZWQgPSB0cnVlO1xuXHR3aGlsZShub2RlLmNhbWVGcm9tICE9IHVuZGVmaW5lZCkge1xuXHRcdGZpbGxCZXR3ZWVuTm9kZXMobGV2ZWwsIG5vZGUsIG5vZGUuY2FtZUZyb20pO1xuXHRcdG5vZGUgPSBub2RlLmNhbWVGcm9tO1xuXHRcdC8vIGxldmVsW25vZGUueF1bbm9kZS55XSA9IHNxdWFyZV9mbG9vcjtcblx0XHRsZXZlbFtub2RlLnhdW25vZGUueV0uY29ubmVjdGVkID0gdHJ1ZTtcblx0fVxufVxuXG5mdW5jdGlvbiBmaWxsQmV0d2Vlbk5vZGVzKGxldmVsLCBub2RlMSwgbm9kZTIpIHtcblx0bGV2ZWxbbm9kZTEueCArICgobm9kZTIueCAtIG5vZGUxLngpIC8gMildW25vZGUxLnkgKyAoKG5vZGUyLnkgLSBub2RlMS55KSAvIDIpXSA9IHNxdWFyZV9mbG9vcjtcbn1cblxuZnVuY3Rpb24gcG9wdWxhdGVSb29tcyhsZXZlbCwgcm9vbXMsIHRvcmNoZXMpIHtcbn1cblxuXG5mdW5jdGlvbiBmaW5hbGl6ZUxldmVsKGxldmVsLCBzdGFpclVwLCBzdGFpckRvd24pIHtcblx0bGV2ZWxbc3RhaXJVcC54XVtzdGFpclVwLnldID0gc3F1YXJlX2xldmVsX29yaWdpbjtcblx0bGV2ZWxbc3RhaXJEb3duLnhdW3N0YWlyRG93bi55XSA9IHNxdWFyZV9zdGFpcjtcblxuXHRmb3IobGV0IGkgPSAwOyBpIDwgbGV2ZWwubGVuZ3RoOyBpKyspIHtcblx0XHRmb3IobGV0IGogPSAwOyBqIDwgbGV2ZWwubGVuZ3RoOyBqKyspIHtcblx0XHRcdGlmKGxldmVsW2ldW2pdIGluc3RhbmNlb2YgTm9kZSkge1xuXHRcdFx0XHRpZihsZXZlbFtpXVtqXS5jb25uZWN0ZWQpIHtcblx0XHRcdFx0XHRsZXZlbFtpXVtqXSA9IHNxdWFyZV9mbG9vcjtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNle1xuXHRcdFx0XHRcdGxldmVsW2ldW2pdID0gc3F1YXJlX3dhbGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGxldmVsW2ldW2pdID0gU3F1YXJlVGVtcGxhdGUoaSwgaiwgbGV2ZWxbaV1bal0pO1xuXHRcdFx0Ly8gc3dpdGNoKGxldmVsW2ldW2pdKSB7XG5cdFx0XHQvLyBcdGNhc2Ugc3F1YXJlX2Zsb29yOlxuXHRcdFx0Ly8gXHRcdGxldmVsW2ldW2pdID0gU3F1YXJlVGVtcGxhdGUoaSwgaiwgc3F1YXJlX2Zsb29yKTtcblx0XHRcdC8vIFx0XHRicmVhaztcblx0XHRcdC8vIFx0Y2FzZSBzcXVhcmVfd2FsbDpcblx0XHRcdC8vIFx0XHRsZXZlbFtpXVtqXSA9IFNxdWFyZVRlbXBsYXRlKGksIGosIHNxdWFyZV9mbG9vcik7XG5cdFx0XHQvLyBcdFx0YnJlYWs7XG5cdFx0XHQvLyBcdGNhc2Ugc3F1YXJlX2Rvb3I6XG5cdFx0XHQvLyBcdFx0bGV2ZWxbaV1bal0gPSBTcXVhcmVUZW1wbGF0ZShpLCBqLCBzcXVhcmVfZmxvb3IpO1xuXHRcdFx0Ly8gXHRcdGJyZWFrO1xuXHRcdFx0Ly8gXHRjYXNlIHNxdWFyZV9zdGFpcl91cDpcblx0XHRcdC8vIFx0XHRsZXZlbFtpXVtqXSA9IFNxdWFyZVRlbXBsYXRlKGksIGosIHNxdWFyZV9mbG9vcik7XG5cdFx0XHQvLyBcdFx0YnJlYWs7XG5cdFx0XHQvLyBcdGNhc2Ugc3F1YXJlX3N0YWlyX2Rvd246XG5cdFx0XHQvLyBcdFx0bGV2ZWxbaV1bal0gPSBTcXVhcmVUZW1wbGF0ZShpLCBqLCBzcXVhcmVfZmxvb3IpO1xuXHRcdFx0Ly8gXHRcdGJyZWFrO1xuXHRcdFx0Ly8gXHRjYXNlIHNxdWFyZV9sb290OlxuXHRcdFx0Ly8gXHRcdGxldmVsW2ldW2pdID0gU3F1YXJlVGVtcGxhdGUoaSwgaiwgc3F1YXJlX2Zsb29yKTtcblx0XHRcdC8vIFx0XHRicmVhaztcblx0XHRcdC8vIFx0ZGVmYXVsdDpcblx0XHRcdC8vIFx0XHRjb25zb2xlLmxvZygnTm90IHJlY29nbml6ZWQgc3F1YXJldHlwZTogJyArIGxldmVsW2ldW2pdKTtcblx0XHRcdC8vIFx0XHRsZXZlbFtpXVtqXSA9IFNxdWFyZVRlbXBsYXRlKGksIGosIHNxdWFyZV9mbG9vcik7XG5cdFx0XHQvLyBcdFx0YnJlYWs7XG5cdFx0XHQvLyB9XG5cdFx0fVxuXHR9XG5cblxuXHQvLyBsZXQgYmxhbmtzID0gW107XG5cblx0Ly8gZm9yKGxldCBpID0gMTsgaSA8IGxldmVsLmxlbmd0aCAtIDE7IGkrKykge1xuXHQvLyBcdGZvcihsZXQgaiA9IDE7IGogPCBsZXZlbC5sZW5ndGggLSAxOyBqKyspIHtcblx0Ly8gXHRcdGlmKGxldmVsW2ldW2pdIGluc3RhbmNlb2YgV2FsbFNxdWFyZSAmJiAhKGxldmVsW2kgLSAxXVtqIC0gMV0gaW5zdGFuY2VvZiBGbG9vclNxdWFyZSB8fCBsZXZlbFtpXVtqIC0gMV0gaW5zdGFuY2VvZiBGbG9vclNxdWFyZSB8fCBsZXZlbFtpICsgMV1baiAtIDFdIGluc3RhbmNlb2YgRmxvb3JTcXVhcmUgfHwgbGV2ZWxbaSAtIDFdW2pdIGluc3RhbmNlb2YgRmxvb3JTcXVhcmUgfHwgbGV2ZWxbaSArIDFdW2pdIGluc3RhbmNlb2YgRmxvb3JTcXVhcmUgfHwgbGV2ZWxbaSAtIDFdW2ogKyAxXSBpbnN0YW5jZW9mIEZsb29yU3F1YXJlIHx8IGxldmVsW2ldW2ogKyAxXSBpbnN0YW5jZW9mIEZsb29yU3F1YXJlIHx8IGxldmVsW2kgKyAxXVtqICsgMV0gaW5zdGFuY2VvZiBGbG9vclNxdWFyZSkpe1xuXHQvLyBcdFx0XHRibGFua3MucHVzaChsZXZlbFtpXVtqXSk7XG5cdC8vIFx0XHR9XG5cdC8vIFx0fVxuXHQvLyB9XG5cblx0Ly8gZm9yKGxldCBpID0gMTsgaSA8IGxldmVsLmxlbmd0aCAtIDE7IGkrKykge1xuXHQvLyBcdGlmKCEobGV2ZWxbaSAtIDFdWzFdIGluc3RhbmNlb2YgRmxvb3JTcXVhcmUgfHwgbGV2ZWxbaV1bMV0gaW5zdGFuY2VvZiBGbG9vclNxdWFyZSB8fCBsZXZlbFtpICsgMV1bMV0gaW5zdGFuY2VvZiBGbG9vclNxdWFyZSkpe1xuXHQvLyBcdFx0YmxhbmtzLnB1c2gobGV2ZWxbaV1bMF0pO1xuXHQvLyBcdH1cblx0Ly8gXHRpZighKGxldmVsWzFdW2kgLSAxXSBpbnN0YW5jZW9mIEZsb29yU3F1YXJlIHx8IGxldmVsWzFdW2ldIGluc3RhbmNlb2YgRmxvb3JTcXVhcmUgfHwgbGV2ZWxbMV1baSArIDFdIGluc3RhbmNlb2YgRmxvb3JTcXVhcmUpKXtcblx0Ly8gXHRcdGJsYW5rcy5wdXNoKGxldmVsWzBdW2ldKTtcblx0Ly8gXHR9XG5cdC8vIFx0aWYoIShsZXZlbFtpIC0gMV1bbGV2ZWwubGVuZ3RoIC0gMl0gaW5zdGFuY2VvZiBGbG9vclNxdWFyZSB8fCBsZXZlbFtpXVtsZXZlbC5sZW5ndGggLSAyXSBpbnN0YW5jZW9mIEZsb29yU3F1YXJlIHx8IGxldmVsW2kgKyAxXVtsZXZlbC5sZW5ndGggLSAyXSBpbnN0YW5jZW9mIEZsb29yU3F1YXJlKSl7XG5cdC8vIFx0XHRibGFua3MucHVzaChsZXZlbFtpXVtsZXZlbC5sZW5ndGggLSAxXSk7XG5cdC8vIFx0fVxuXHQvLyBcdGlmKCEobGV2ZWxbbGV2ZWwubGVuZ3RoIC0gMl1baSAtIDFdIGluc3RhbmNlb2YgRmxvb3JTcXVhcmUgfHwgbGV2ZWxbbGV2ZWwubGVuZ3RoIC0gMl1baV0gaW5zdGFuY2VvZiBGbG9vclNxdWFyZSB8fCBsZXZlbFtsZXZlbC5sZW5ndGggLSAyXVtpICsgMV0gaW5zdGFuY2VvZiBGbG9vclNxdWFyZSkpe1xuXHQvLyBcdFx0YmxhbmtzLnB1c2gobGV2ZWxbbGV2ZWwubGVuZ3RoIC0gMV1baV0pO1xuXHQvLyBcdH1cblx0Ly8gfVxuXG5cdC8vIGZvcihsZXQgYiBvZiBibGFua3MpIHtcblx0Ly8gXHRsZXZlbFtiLnBvc2l0aW9uLnhdW2IucG9zaXRpb24ueV0gPSBuZXcgQmxhbmtTcXVhcmUoYi5wb3NpdGlvbi54LCBiLnBvc2l0aW9uLnkpO1xuXHQvLyB9XG59XG5cbmZ1bmN0aW9uIE5vZGUoeCwgeSwgY29ubmVjdGVkKSB7XG5cdHRoaXMueCA9IHg7XG5cdHRoaXMueSA9IHk7XG5cdHRoaXMuY29ubmVjdGVkID0gY29ubmVjdGVkO1xufVxuIiwiZnVuY3Rpb24gUm9vbSh0ZW1wbGF0ZSwgeCwgeSkge1xuXG5cdC8qXG5cdCAqXG5cdCAqICAgMDAwVDAwMCAgIFQgPSAoMywgMCkgICBXID0gN1xuXHQgKiAgIDAwMDAwMDAgICBMID0gKDAsIDIpICAgSCA9IDVcblx0ICogICBMMDBDMDAwUiAgQyA9ICgzLCAyKVxuXHQgKiAgIDAwMDAwMDAgICBSID0gKDcsIDIpXG5cdCAqICAgMDAwMDAwMCAgIEIgPSAoMywgNSlcblx0ICogICAgICBCXG5cdCAqXG5cdCAqL1xuXG5cdHRoaXMud2lkdGggPSB0ZW1wbGF0ZS53aWR0aDtcblx0dGhpcy5oZWlnaHQgPSB0ZW1wbGF0ZS5oZWlnaHQ7XG5cblx0dGhpcy5sZWZ0ID0geCAtIGZsb29yKHRoaXMud2lkdGggLyAyKTsgLy94IGNvb3JkaW5hdGUgb2YgbGVmdCBtb3N0IHNxdWFyZXNcblx0dGhpcy50b3AgPSB5IC0gZmxvb3IodGhpcy5oZWlnaHQgLyAyKTsgLy90b3AgbW9zdFxuXHR0aGlzLmxlZnQgKz0gKHRoaXMubGVmdCAlIDIpIC0gMTtcblx0dGhpcy50b3AgKz0gKHRoaXMudG9wICUgMikgLSAxO1xuXHR0aGlzLnJpZ2h0ID0gdGhpcy5sZWZ0ICsgdGhpcy53aWR0aDsgLy94IGNvb3JkIG9mIGZpcnN0IHdhbGwgb24gcmlnaHRcblx0dGhpcy5ib3R0b20gPSB0aGlzLnRvcCArIHRoaXMuaGVpZ2h0OyAvL3ggY29vcmQgb2YgZmlyc3Qgd2FsbCBvbiByaWdodFxuXG5cdHRoaXMueCA9IHRoaXMubGVmdCArIGZsb29yKHRoaXMud2lkdGggLyAyKTtcblx0dGhpcy55ID0gdGhpcy50b3AgKyBmbG9vcih0aGlzLmhlaWdodCAvIDIpO1xuXG5cdHRoaXMuc3F1YXJlcyA9IHRlbXBsYXRlLnNxdWFyZXMuc2xpY2UoMCk7XG5cdHRoaXMuZG9vcnMgPSBuZXcgQXJyYXkodGVtcGxhdGUuZG9vcnMubGVuZ3RoKTtcblxuXHRmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5kb29ycy5sZW5ndGg7IGkrKyl7XG5cdFx0dGhpcy5kb29yc1tpXSA9IFt0ZW1wbGF0ZS5kb29yc1tpXVswXSArIHRoaXMubGVmdCwgdGVtcGxhdGUuZG9vcnNbaV1bMV0gKyB0aGlzLnRvcF07XG5cdH1cbn1cbiIsImNsYXNzIEFJU3lzdGVtIGV4dGVuZHMgR2FtZVN5c3RlbSB7XG5cblx0Y29uc3RydWN0b3IoY29uZmlnKSB7XG5cdFx0c3VwZXIoW2NvbXBvbmVudF9haV0pO1xuXHRcdHRoaXMuY29uZmlnID0gY29uZmlnO1xuXHR9XG5cblx0cnVuKGVuZ2luZSkge1xuXHRcdGZvcihsZXQgZW50aXR5IG9mIHRoaXMuZW50aXRpZXMpIHtcblx0XHRcdGlmKFV0aWxpdHkuZGlzdGFuY2UoZW50aXR5LnBvc2l0aW9uLCBlbmdpbmUuZ2V0UGxheWVyKCkucG9zaXRpb24pIDwgZW50aXR5X2FjdGl2ZV9yYW5nZSkge1xuXHRcdFx0XHRpZihlbnRpdHkuYWkubm90aWNlZFBsYXllcikge1xuXHRcdFx0XHRcdHRoaXMuaGFuZGxlQWN0aXZlRW50aXR5KGVuZ2luZSwgZW50aXR5LCBlbmdpbmUuZ2V0UGxheWVyKCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuaGFuZGxlSWRsZUVudGl0eShlbmdpbmUsIGVudGl0eSwgZW5naW5lLmdldFBsYXllcigpKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdGhhbmRsZUV2ZW50KGVuZ2luZSwgZXZlbnRJRCwgZGF0YSkge1xuXHRcdHN3aXRjaChldmVudElEKSB7XG5cdFx0XHQvLyBjYXNlIGV2ZW50X2VudGl0eV9hdHRhY2tlZDpcblx0XHRcdC8vIFx0aWYoZGF0YS5hdHRhY2tlciBpbnN0YW5jZW9mIFBsYXllcikge1xuXHRcdFx0Ly8gXHRcdGxldCB0YXJnZXQgPSBkYXRhLnRhcmdldDtcblx0XHRcdC8vIFx0XHRsZXQgc2VsZiA9IHRoaXM7XG5cdFx0XHQvLyBcdFx0dGFyZ2V0LmFpLmlkbGVUaW1lciA9IDEwMDtcblx0XHRcdC8vIFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0Ly8gXHRcdFx0dGFyZ2V0LmFpLm5vdGljZWRQbGF5ZXIgPSB0cnVlO1xuXHRcdFx0Ly8gXHRcdH0sIHRoaXMuY29uZmlnLk1PQl9SRUFDVElPTl9USU1FKTtcblx0XHRcdC8vIFx0fVxuXHRcdFx0Ly8gXHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfc3VjY2Vzc2Z1bF9hY3Rpb246XG5cdFx0XHRcdGxldCBlbnRpdHkgPSBkYXRhLmVudGl0eTtcblx0XHRcdFx0aWYoZW50aXR5IGluc3RhbmNlb2YgTW9iICYmICFlbnRpdHkuYWkubm90aWNlZFBsYXllciAmJiBlbnRpdHkuZGlzcGxheS52aXNpYmxlKSB7XG5cdFx0XHRcdFx0bGV0IHNlbGYgPSB0aGlzO1xuXHRcdFx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRlbnRpdHkuYWkubm90aWNlZFBsYXllciA9IHNlbGYuY2hlY2tOb3RpY2VQbGF5ZXIoZW5naW5lLCBlbnRpdHksIGVuZ2luZS5nZXRQbGF5ZXIoKSk7XG5cdFx0XHRcdFx0fSwgdGhpcy5jb25maWcuTU9CX1JFQUNUSU9OX1RJTUUpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdGhhbmRsZUFjdGl2ZUVudGl0eShlbmdpbmUsIGVudGl0eSwgcGxheWVyKSB7XG5cdFx0aWYoZW50aXR5LmFjdGlvbnMuYnVzeSA9PSAwKSB7XG5cdFx0XHRlbnRpdHkuYWN0aW9ucy5uZXh0QWN0aW9uID0gdGhpcy5kZXRlcm1pbmVBY3Rpb24oZW5naW5lLCBlbnRpdHksIHBsYXllcik7XG5cdFx0fVxuXHR9XG5cblx0ZGV0ZXJtaW5lQWN0aW9uKGVuZ2luZSwgZW50aXR5LCBwbGF5ZXIpIHtcblx0XHRyZXR1cm4gcmFuZG9tSW50KDExLCAxNCk7XG5cdFx0Ly8gaWYoVXRpbGl0eS5lbnRpdHlEaXN0YW5jZShlbnRpdHksIHBsYXllcikgPD0gZW50aXR5LmFpLmF0dGFja1JhbmdlKSB7XG5cdFx0Ly8gXHRyZXR1cm4gdGhpcy5nZXRBdHRhY2tBY3Rpb24oZW50aXR5LCBwbGF5ZXIpO1xuXHRcdC8vIH1cblx0XHQvLyBlbHNle1xuXHRcdC8vIFx0cmV0dXJuIHRoaXMuZ2V0TW92ZUNsb3NlckFjdGlvbihlbmdpbmUsIGVudGl0eSwgcGxheWVyKTtcblx0XHQvLyB9XG5cdH1cblxuXHRnZXRBdHRhY2tBY3Rpb24oZW50aXR5LCBwbGF5ZXIpIHtcblx0XHRsZXQgZGlyID0gVXRpbGl0eS5nZXREaXJlY3Rpb25Ub0VudGl0eShlbnRpdHksIHBsYXllcik7XG5cdFx0ZW50aXR5LmRpcmVjdGlvbi5kaXJlY3Rpb24gPSBkaXI7XG5cdFx0cmV0dXJuIGRpcmVjdGlvbl90b19hdHRhY2tbZGlyXTtcblx0fVxuXG5cdGdldE1vdmVDbG9zZXJBY3Rpb24oZW5naW5lLCBlbnRpdHksIHBsYXllcikge1xuXHRcdC8vIFV0aWxpdHkuc2hvcnRlc3RQYXRoKGVuZ2luZS5nZXRNYXAoKSwgZW50aXR5LnBvc2l0aW9uLCBwbGF5ZXIucG9zaXRpb24pO1xuXHRcdHJldHVybiBkaXJlY3Rpb25fdG9fbW92ZW1lbnRbVXRpbGl0eS5nZXREaXJlY3Rpb25Ub0VudGl0eShlbnRpdHksIHBsYXllcildO1xuXHR9XG5cblx0aGFuZGxlSWRsZUVudGl0eShlbmdpbmUsIGVudGl0eSwgcGxheWVyKSB7XG5cdFx0aWYoZW50aXR5LmFpLmlkbGVUaW1lciA9PSAwKSB7XG5cdFx0XHRlbnRpdHkuYWN0aW9ucy5uZXh0QWN0aW9uID0gdGhpcy5kZXRlcm1pbmVJZGxlQWN0aW9uKGVuZ2luZSwgZW50aXR5KTtcblx0XHRcdGVudGl0eS5haS5pZGxlVGltZXIgPSByYW5kb21JbnQodGhpcy5jb25maWcuTUlOX0lETEVfVElNRSwgdGhpcy5jb25maWcuTUFYX0lETEVfVElNRSk7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0ZW50aXR5LmFpLmlkbGVUaW1lci0tO1xuXHRcdH1cblx0fVxuXG5cdGNoZWNrTm90aWNlUGxheWVyKGVuZ2luZSwgZW50aXR5LCBwbGF5ZXIpIHtcblx0XHRzd2l0Y2goZW50aXR5LmRpcmVjdGlvbi5kaXJlY3Rpb24pIHtcblx0XHRcdGNhc2UgZGlyZWN0aW9uX3VwOlxuXHRcdFx0XHRpZihlbnRpdHkuY29sbGlzaW9uLnRvcCArIDEgPj0gcGxheWVyLmNvbGxpc2lvbi5ib3R0b20pIHtcblx0XHRcdFx0XHRyZXR1cm4gVmlzaW9uU3lzdGVtLmxpbmVPZlNpZ2h0KGVuZ2luZSwgZW50aXR5LnBvc2l0aW9uLCBwbGF5ZXIucG9zaXRpb24pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fcmlnaHQ6XG5cdFx0XHRcdGlmKGVudGl0eS5jb2xsaXNpb24ucmlnaHQgLSAxIDw9IHBsYXllci5jb2xsaXNpb24ubGVmdCkge1xuXHRcdFx0XHRcdHJldHVybiBWaXNpb25TeXN0ZW0ubGluZU9mU2lnaHQoZW5naW5lLCBlbnRpdHkucG9zaXRpb24sIHBsYXllci5wb3NpdGlvbik7XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGRpcmVjdGlvbl9kb3duOlxuXHRcdFx0XHRpZihlbnRpdHkuY29sbGlzaW9uLmJvdHRvbSAtIDEgPD0gcGxheWVyLmNvbGxpc2lvbi50b3ApIHtcblx0XHRcdFx0XHRyZXR1cm4gVmlzaW9uU3lzdGVtLmxpbmVPZlNpZ2h0KGVuZ2luZSwgZW50aXR5LnBvc2l0aW9uLCBwbGF5ZXIucG9zaXRpb24pO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBkaXJlY3Rpb25fbGVmdDpcblx0XHRcdFx0aWYoZW50aXR5LmNvbGxpc2lvbi5sZWZ0ICsgMSA+PSBwbGF5ZXIuY29sbGlzaW9uLnJpZ2h0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIFZpc2lvblN5c3RlbS5saW5lT2ZTaWdodChlbmdpbmUsIGVudGl0eS5wb3NpdGlvbiwgcGxheWVyLnBvc2l0aW9uKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiQ2Fubm90IGRldGVybWluZSBlbnRpdHkgZGlyZWN0aW9uOiBcIiArIGVudGl0eS5kaXJlY3Rpb24uZGlyZWN0aW9uKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRkZXRlcm1pbmVJZGxlQWN0aW9uKGVuZ2luZSwgZW50aXR5KSB7XG5cdFx0bGV0IHJhbmRvbU1vdmVBY3Rpb24gPSBhY3Rpb25fbW92ZSArIHJhbmRvbUludCgxLCA1KTtcblx0XHRpZihNb3ZlbWVudFN5c3RlbS52YWxpZE1vdmUoZW5naW5lLCBlbnRpdHksIE1vdmVtZW50U3lzdGVtLmdldERlc3RpbmF0aW9uKGVudGl0eSwgcmFuZG9tTW92ZUFjdGlvbikpKSB7XG5cdFx0XHRyZXR1cm4gcmFuZG9tTW92ZUFjdGlvbjtcblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHQvLyBjb25zb2xlLmxvZyhcInRlc3RcIik7XG5cdFx0XHRpZihyYW5kb21Nb3ZlQWN0aW9uID09IGFjdGlvbl9tb3ZlX3VwKSB7XG5cdFx0XHRcdHJldHVybiBhY3Rpb25fbW92ZV9kb3duO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZihyYW5kb21Nb3ZlQWN0aW9uID09IGFjdGlvbl9tb3ZlX3JpZ2h0KSB7XG5cdFx0XHRcdHJldHVybiBhY3Rpb25fbW92ZV9sZWZ0O1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZihyYW5kb21Nb3ZlQWN0aW9uID09IGFjdGlvbl9tb3ZlX2Rvd24pIHtcblx0XHRcdFx0cmV0dXJuIGFjdGlvbl9tb3ZlX3VwO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZihyYW5kb21Nb3ZlQWN0aW9uID09IGFjdGlvbl9tb3ZlX2xlZnQpIHtcblx0XHRcdFx0cmV0dXJuIGFjdGlvbl9tb3ZlX3JpZ2h0O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGFjdGlvbl9ub25lO1xuXHRcdH1cblx0fVxufVxuIiwiY2xhc3MgQWJpbGl0eVN5c3RlbSBleHRlbmRzIEdhbWVTeXN0ZW0ge1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKFtjb21wb25lbnRfYWJpbGl0aWVzXSk7XG5cdH1cblxuXHRydW4oZW5naW5lKSB7XG5cdFx0Zm9yKGxldCBlbnRpdHkgb2YgdGhpcy5vYmplY3RzKSB7XG5cdFx0XHRzd2l0Y2goZW50aXR5LmFjdGlvbnMuY3VycmVudEFjdGlvbikge1xuXHRcdFx0XHRjYXNlIGFjdGlvbl9hYmlsaXR5X29uZTpcblx0XHRcdFx0XHR0aGlzLmhhbmRsZUFiaWxpdHkoZW5naW5lLCBlbnRpdHksIGVudGl0eS5hYmlsaXRpZXMuYWJpbGl0aWVzWzBdKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBhY3Rpb25fYWJpbGl0eV90d286XG5cdFx0XHRcdFx0dGhpcy5oYW5kbGVBYmlsaXR5KGVuZ2luZSwgZW50aXR5LCBlbnRpdHkuYWJpbGl0aWVzLmFiaWxpdGllc1sxXSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgYWN0aW9uX2FiaWxpdHlfdGhyZWU6XG5cdFx0XHRcdFx0dGhpcy5oYW5kbGVBYmlsaXR5KGVuZ2luZSwgZW50aXR5LCBlbnRpdHkuYWJpbGl0aWVzLmFiaWxpdGllc1syXSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aGFuZGxlRXZlbnQoZW5naW5lLCBldmVudElELCBkYXRhKSB7IH1cblxuXHRoYW5kbGVBYmlsaXR5KGVuZ2luZSwgZW50aXR5LCBhYmlsaXR5KSB7XG5cdFx0aWYoYWJpbGl0eSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRzd2l0Y2goYWJpbGl0eS5hYmlsaXR5VHlwZSkge1xuXHRcdFx0XHRjYXNlIGFiaWxpdHlfdHlwZV9tZWxlZTpcblx0XHRcdFx0XHR0aGlzLmhhbmRsZU1lbGVlQWJpbGl0eShlbmdpbmUsIGVudGl0eSwgYWJpbGl0eSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgYWJpbGl0eV90eXBlX2FvZTpcblx0XHRcdFx0XHR0aGlzLmhhbmRsZUFPRUFiaWxpdHkoZW5naW5lLCBlbnRpdHksIGFiaWxpdHkpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIGFiaWxpdHlfdHlwZV9hb2VfcmFuZ2VkOlxuXHRcdFx0XHRcdHRoaXMuaGFuZGxlQU9FUmFuZ2VkQWJpbGl0eShlbmdpbmUsIGVudGl0eSwgYWJpbGl0eSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgYWJpbGl0eV90eXBlX3NraWxsc2hvdDpcblx0XHRcdFx0XHR0aGlzLmhhbmRsZVNraWxsc2hvdEFiaWxpdHkoZW5naW5lLCBlbnRpdHksIGFiaWxpdHkpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIGFiaWxpdHlfdHlwZV9zbWl0ZTpcblx0XHRcdFx0XHR0aGlzLmhhbmRsZVNtaXRlQWJpbGl0eShlbmdpbmUsIGVudGl0eSwgYWJpbGl0eSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gYWRkIGVmZmVjdHMsIGJ1ZmZzXG5cblx0aGFuZGxlTWVsZWVBYmlsaXR5KGVuZ2luZSwgZW50aXR5LCBhYmlsaXR5KSB7XG5cdFx0bGV0IHNxdWFyZXMgPSBVdGlsaXR5LmdldFNxdWFyZXNJbkZyb250KGVuZ2luZSwgZW50aXR5LnBvc2l0aW9uLCBlbnRpdHkuZGlyZWN0aW9uLmRpcmVjdGlvbiwgYWJpbGl0eS5yYW5nZSk7XG5cdFx0bGV0IHRhcmdldHMgPSBVdGlsaXR5LmdldEVudGl0aWVzSW5TcXVhcmVzKGVuZ2luZSwgc3F1YXJlcyk7XG5cdFx0bGV0IGRpck9mZnNldCA9IDA7XG5cdFx0d2hpbGUodGFyZ2V0cy5sZW5ndGggPT0gMCAmJiBkaXJPZmZzZXQgPCA0KSB7XG5cdFx0XHRkaXJPZmZzZXQrKztcblx0XHRcdHNxdWFyZXMgPSBVdGlsaXR5LmdldFNxdWFyZXNJbkZyb250KGVuZ2luZSwgZW50aXR5LnBvc2l0aW9uLCAoZW50aXR5LmRpcmVjdGlvbi5kaXJlY3Rpb24gKyBkaXJPZmZzZXQpICUgNCwgYWJpbGl0eS5yYW5nZSk7XG5cdFx0XHR0YXJnZXRzID0gVXRpbGl0eS5nZXRFbnRpdGllc0luU3F1YXJlcyhlbmdpbmUsIHNxdWFyZXMpO1xuXHRcdH1cblxuXHRcdGlmKHRhcmdldHMubGVuZ3RoID4gMCkge1xuXHRcdFx0ZW50aXR5LmRpcmVjdGlvbi5kaXJlY3Rpb24gPSAoZW50aXR5LmRpcmVjdGlvbi5kaXJlY3Rpb24gKyBkaXJPZmZzZXQpICUgNDtcblx0XHRcdGZvcihsZXQgdCBvZiB0YXJnZXRzKSB7XG5cdFx0XHRcdGlmKHQgIT0gZW50aXR5ICYmIHQuY29tcG9uZW50cy5pbmNsdWRlcyhjb21wb25lbnRfY29tYmF0KSkge1xuXHRcdFx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfbWVsZWVfYWJpbGl0eSwgeydlbnRpdHknOiBlbnRpdHksICd0YXJnZXQnOiB0LCAnYWJpbGl0eSc6IGFiaWxpdHl9KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9zdWNjZXNzZnVsX2FjdGlvbiwgeydhY3Rpb24nOiBlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uLCAnZW50aXR5JzogZW50aXR5IH0pO1xuXHRcdH1cblx0fVxuXG5cdGhhbmRsZUFPRUFiaWxpdHkoZW5naW5lLCBlbnRpdHksIGFiaWxpdHkpIHtcblx0XHRsZXQgc3F1YXJlcyA9IFV0aWxpdHkuZ2V0U3F1YXJlc0Fyb3VuZChlbmdpbmUsIGVudGl0eS5wb3NpdGlvbiwgYWJpbGl0eS5yYW5nZSk7XG5cdFx0bGV0IHRhcmdldHMgPSBVdGlsaXR5LmdldEVudGl0aWVzSW5TcXVhcmVzKGVuZ2luZSwgc3F1YXJlcyk7XG5cdFx0Zm9yKGxldCB0IG9mIHRhcmdldHMpIHtcblx0XHRcdGlmKHQgIT0gZW50aXR5ICYmIHQuY29tcG9uZW50cy5pbmNsdWRlcyhjb21wb25lbnRfY29tYmF0KSkge1xuXHRcdFx0XHRlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X21lbGVlX2FiaWxpdHksIHsnZW50aXR5JzogZW50aXR5LCAndGFyZ2V0JzogdCwgJ2FiaWxpdHknOiBhYmlsaXR5fSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYodGFyZ2V0cy5sZW5ndGggPiAwKSB7XG5cdFx0XHRlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X3N1Y2Nlc3NmdWxfYWN0aW9uLCB7J2FjdGlvbic6IGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb24sICdlbnRpdHknOiBlbnRpdHkgfSk7XG5cdFx0fVxuXHR9XG5cblx0aGFuZGxlQU9FUmFuZ2VkQWJpbGl0eShlbmdpbmUsIGVudGl0eSwgYWJpbGl0eSkge1xuXHRcdGNvbnNvbGUubG9nKFwiYW9lIHJhbmdlZDogXCIgKyBlbnRpdHkpO1xuXG5cdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9zdWNjZXNzZnVsX2FjdGlvbiwgeydhY3Rpb24nOiBlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uLCAnZW50aXR5JzogZW50aXR5IH0pO1xuXHR9XG5cblx0aGFuZGxlU2tpbGxzaG90QWJpbGl0eShlbmdpbmUsIGVudGl0eSwgYWJpbGl0eSkge1xuXHRcdGNvbnNvbGUubG9nKFwic2tpbGxzaG90OiBcIiArIGVudGl0eSk7XG5cblx0XHRlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X3N1Y2Nlc3NmdWxfYWN0aW9uLCB7J2FjdGlvbic6IGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb24sICdlbnRpdHknOiBlbnRpdHkgfSk7XG5cdH1cblxuXHRoYW5kbGVTbWl0ZUFiaWxpdHkoZW5naW5lLCBlbnRpdHksIGFiaWxpdHkpIHtcblx0XHRjb25zb2xlLmxvZyhcInNtaXRlOiBcIiArIGVudGl0eSk7XG5cblx0XHRlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X3N1Y2Nlc3NmdWxfYWN0aW9uLCB7J2FjdGlvbic6IGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb24sICdlbnRpdHknOiBlbnRpdHkgfSk7XG5cdH1cblxufVxuIiwiY2xhc3MgQWN0aW9uU3lzdGVtIGV4dGVuZHMgR2FtZVN5c3RlbSB7XG5cblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0c3VwZXIoW2NvbXBvbmVudF9hY3Rpb25zXSk7XG5cdH1cblxuXHRpbml0KGVuZ2luZSkge1xuXHRcdHRoaXMuaGl0c3R1blRpbWVyID0gMDtcblx0fVxuXG5cdHJ1bihlbmdpbmUpIHtcblx0XHRpZih0aGlzLmhpdHN0dW5UaW1lciA9PSAwKSB7XG5cdFx0XHRmb3IobGV0IGVudGl0eSBvZiB0aGlzLm9iamVjdHMpIHtcblxuXHRcdFx0XHRmb3IobGV0IGEgaW4gZW50aXR5LmFjdGlvbnMuYWN0aW9ucykge1xuXHRcdFx0XHRcdGlmKGVudGl0eS5hY3Rpb25zLmFjdGlvbnNbYV0uY3VycmVudENvb2xkb3duID4gMCkge1xuXHRcdFx0XHRcdFx0ZW50aXR5LmFjdGlvbnMuYWN0aW9uc1thXS5jdXJyZW50Q29vbGRvd24tLTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZihlbnRpdHkuYWN0aW9ucy5idXN5ID4gMCkge1xuXHRcdFx0XHRcdGVudGl0eS5hY3Rpb25zLmJ1c3ktLTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNle1xuXHRcdFx0XHRcdHRoaXMuc2V0Q3VycmVudEFjdGlvbihlbnRpdHksIGVuZ2luZSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHR0aGlzLmhpdHN0dW5UaW1lci0tO1xuXHRcdH1cblx0fVxuXG5cdGhhbmRsZUV2ZW50KGVuZ2luZSwgZXZlbnRJRCwgZGF0YSkge1xuXHRcdHN3aXRjaChldmVudElEKSB7XG5cdFx0XHRjYXNlIGV2ZW50X3N1Y2Nlc3NmdWxfYWN0aW9uOlxuXHRcdFx0XHR0aGlzLmhhbmRsZVN1Y2Nlc3NmdWxBY3Rpb24oZW5naW5lLCBkYXRhLmVudGl0eSwgZGF0YS5hY3Rpb24pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfZmFpbGVkX2FjdGlvbjpcblx0XHRcdFx0dGhpcy5oYW5kbGVGYWlsZWRBY3Rpb24oZW5naW5lLCBkYXRhLmVudGl0eSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9oaXRzdHVuOlxuXHRcdFx0XHR0aGlzLmhpdHN0dW5UaW1lciA9IGRhdGEudGlja3M7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdHNldEN1cnJlbnRBY3Rpb24oZW50aXR5LCBlbmdpbmUpIHtcblx0XHRlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uID0gZW50aXR5LmFjdGlvbnMubmV4dEFjdGlvbjtcblx0XHRlbnRpdHkuYWN0aW9ucy5uZXh0QWN0aW9uID0gYWN0aW9uX25vbmU7XG5cdH1cblxuXHRzZXRDb29sZG93bnMoZW50aXR5LCBhY3Rpb24pIHtcblx0XHRlbnRpdHkuYWN0aW9ucy5idXN5ID0gZW50aXR5LmFjdGlvbnMuYWN0aW9uc1thY3Rpb25dLnRpbWU7XG5cdFx0ZW50aXR5LmFjdGlvbnMuYWN0aW9uc1thY3Rpb25dLmN1cnJlbnRDb29sZG93biA9IGVudGl0eS5hY3Rpb25zLmFjdGlvbnNbYWN0aW9uXS5jb29sZG93bjtcblx0fVxuXG5cdGhhbmRsZVN1Y2Nlc3NmdWxBY3Rpb24oZW5naW5lLCBlbnRpdHksIGFjdGlvbikge1xuXHRcdHRoaXMuc2V0Q29vbGRvd25zKGVudGl0eSwgYWN0aW9uKTtcblxuXHRcdGlmKGFjdGlvbl90b19hbmltYXRpb25bYWN0aW9uXSAhPT0gdW5kZWZpbmVkICYmIGVudGl0eS5hbmltYXRpb24uYW5pbWF0aW9uc1thY3Rpb25fdG9fYW5pbWF0aW9uW2FjdGlvbl1dICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdGVudGl0eS5hbmltYXRpb24uYW5pbWF0aW9uID0gYWN0aW9uX3RvX2FuaW1hdGlvblthY3Rpb25dO1xuXHRcdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9uZXdfYW5pbWF0aW9uLCBlbnRpdHkpO1xuXHRcdH1cblxuXHRcdGVudGl0eS5hY3Rpb25zLmxhc3RBY3Rpb25GYWlsZWQgPSBmYWxzZTtcblx0XHRlbnRpdHkuYWN0aW9ucy5sYXN0QWN0aW9uID0gYWN0aW9uO1xuXHRcdGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb24gPSBhY3Rpb25fbm9uZTtcblx0fVxuXG5cdGhhbmRsZUZhaWxlZEFjdGlvbihlbmdpbmUsIGVudGl0eSkge1xuXHRcdHRoaXMuc2V0Q29vbGRvd25zKGVudGl0eSwgYWN0aW9uX25vbmUpO1xuXG5cdFx0Ly8gZW50aXR5LmFuaW1hdGlvbi5hbmltYXRpb24gPSBhY3Rpb25fdG9fYW5pbWF0aW9uW2VudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb25dO1xuXHRcdC8vIGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfbmV3X2FuaW1hdGlvbiwgZW50aXR5KTtcblxuXHRcdGVudGl0eS5hY3Rpb25zLmxhc3RBY3Rpb25GYWlsZWQgPSB0cnVlO1xuXHRcdGVudGl0eS5hY3Rpb25zLmxhc3RBY3Rpb24gPSBlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uO1xuXHRcdGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb24gPSBhY3Rpb25fbm9uZTtcblx0fVxufVxuIiwiY2xhc3MgQW5pbWF0aW9uU3lzdGVtIGV4dGVuZHMgR2FtZVN5c3RlbSB7XG5cblx0Y29uc3RydWN0b3IoY29uZmlnKSB7XG5cdFx0c3VwZXIoW2NvbXBvbmVudF9kaXNwbGF5LCBjb21wb25lbnRfYW5pbWF0aW9uXSk7XG5cdFx0dGhpcy5jb25maWcgPSBjb25maWc7XG5cdH1cblxuXHRpbml0KGVuZ2luZSkge1xuXHRcdHRoaXMuYW5pbWF0aW9uQ291bnRlciA9IDA7XG5cdFx0dGhpcy5pZGxlQW5pbWF0aW9uQ291bnRlciA9IDA7XG5cdH1cblxuXHRydW4oZW5naW5lKSB7XG5cdFx0Ly8gZm9yKGxldCBvIG9mIHRoaXMub2JqZWN0cykge1xuXHRcdC8vIFx0aWYoby5hbmltYXRpb24ubmV3QW5pbWF0aW9uKSB7XG5cdFx0Ly8gXHRcdHN0YXJ0QW5pbWF0aW9uKG8pO1xuXHRcdC8vIFx0fVxuXHRcdC8vIH1cblx0XHRpZih0aGlzLmFuaW1hdGlvbkNvdW50ZXIgPT0gdGhpcy5jb25maWcuQU5JTUFUSU9OX1NQRUVEKSB7XG5cdFx0XHR0aGlzLmFuaW1hdGlvbkNvdW50ZXIgPSAwO1xuXHRcdFx0aWYodGhpcy5pZGxlQW5pbWF0aW9uQ291bnRlciA9PSB0aGlzLmNvbmZpZy5JRExFX0FOSU1BVElPTl9TTE9XX0ZBQ1RPUikge1xuXHRcdFx0XHR0aGlzLmlkbGVBbmltYXRpb25Db3VudGVyID0gMDtcblx0XHRcdH1cblx0XHRcdGZvcihsZXQgbyBvZiB0aGlzLm9iamVjdHMpIHtcblx0XHRcdFx0aWYoby5hbmltYXRpb24uYW5pbWF0aW9uID09IGFuaW1hdGlvbl9pZGxlKSB7XG5cdFx0XHRcdFx0aWYodGhpcy5pZGxlQW5pbWF0aW9uQ291bnRlciA9PSAwKSB7XG5cdFx0XHRcdFx0XHRvLmFuaW1hdGlvbi5zdGFnZSsrO1xuXHRcdFx0XHRcdFx0aWYoby5hbmltYXRpb24uc3RhZ2UgPT0gby5hbmltYXRpb24uYW5pbWF0aW9uc1tvLmFuaW1hdGlvbi5hbmltYXRpb25dLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnN0YXJ0SWRsZUFuaW1hdGlvbihvKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHRoaXMudXBkYXRlQW5pbWF0aW9uKG8pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRvLmFuaW1hdGlvbi5zdGFnZSsrO1xuXHRcdFx0XHRcdGlmKG8uYW5pbWF0aW9uLnN0YWdlID09IG8uYW5pbWF0aW9uLmFuaW1hdGlvbnNbby5hbmltYXRpb24uYW5pbWF0aW9uXS5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdHRoaXMuc3RhcnRJZGxlQW5pbWF0aW9uKG8pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR0aGlzLnVwZGF0ZUFuaW1hdGlvbihvKTtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBpZigoby5hbmltYXRpb24ubmV4dEFuaW1hdGlvbiA9PSBhbmltYXRpb25faWRsZSAmJiB0aGlzLmlkbGVBbmltYXRpb25Db3VudGVyID09IDApIHx8IG8uYW5pbWF0aW9uLm5leHRBbmltYXRpb24gIT0gYW5pbWF0aW9uX2lkbGUpIHtcblx0XHRcdFx0Ly8gXHRpZihvLmFuaW1hdGlvbi5zdGFnZSA9PSBvLmFuaW1hdGlvbi5hbmltYXRpb25zW28uYW5pbWF0aW9uLmFuaW1hdGlvbl0ubGVuZ3RoKSB7XG5cdFx0XHRcdC8vIFx0XHR0aGlzLnN0YXJ0QW5pbWF0aW9uKG8sIGFjdGlvbl9ub25lKTtcblx0XHRcdFx0Ly8gXHR9XG5cdFx0XHRcdC8vIH1cblx0XHRcdH1cblx0XHRcdHRoaXMuaWRsZUFuaW1hdGlvbkNvdW50ZXIrKztcblx0XHR9XG5cdFx0dGhpcy5hbmltYXRpb25Db3VudGVyKys7XG5cdH1cblxuXHRoYW5kbGVFdmVudChlbmdpbmUsIGV2ZW50SUQsIGRhdGEpIHtcblx0XHRzd2l0Y2goZXZlbnRJRCkge1xuXHRcdFx0Y2FzZSBldmVudF9uZXdfYW5pbWF0aW9uOlxuXHRcdFx0XHR0aGlzLnN0YXJ0QW5pbWF0aW9uKGRhdGEpO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHRzdGFydElkbGVBbmltYXRpb24oZW50aXR5KSB7XG5cdFx0ZW50aXR5LmFuaW1hdGlvbi5hbmltYXRpb24gPSBhbmltYXRpb25faWRsZTtcblx0XHRlbnRpdHkuYW5pbWF0aW9uLnN0YWdlID0gMDtcblx0XHR0aGlzLnVwZGF0ZUFuaW1hdGlvbihlbnRpdHkpO1xuXHR9XG5cblx0dXBkYXRlQW5pbWF0aW9uKGVudGl0eSkge1xuXHRcdGVudGl0eS5hbmltYXRpb24ub2Zmc2V0WCA9IGVudGl0eS5hbmltYXRpb24uYW5pbWF0aW9uc1tlbnRpdHkuYW5pbWF0aW9uLmFuaW1hdGlvbl1bZW50aXR5LmFuaW1hdGlvbi5zdGFnZV0ub3g7XG5cdFx0ZW50aXR5LmFuaW1hdGlvbi5vZmZzZXRZID0gZW50aXR5LmFuaW1hdGlvbi5hbmltYXRpb25zW2VudGl0eS5hbmltYXRpb24uYW5pbWF0aW9uXVtlbnRpdHkuYW5pbWF0aW9uLnN0YWdlXS5veTtcblx0XHRlbnRpdHkuYW5pbWF0aW9uLnNwcml0ZSA9IGVudGl0eS5hbmltYXRpb24uYW5pbWF0aW9uc1tlbnRpdHkuYW5pbWF0aW9uLmFuaW1hdGlvbl1bZW50aXR5LmFuaW1hdGlvbi5zdGFnZV0uc3ByaXRlO1xuXHRcdC8vIGlmKGVudGl0eS5hbmltYXRpb24ub2Zmc2V0WCA9PSB1bmRlZmluZWQpIHtlbnRpdHkuYW5pbWF0aW9uLm9mZnNldFggPSAwO31cblx0XHQvLyBpZihlbnRpdHkuYW5pbWF0aW9uLm9mZnNldFkgPT0gdW5kZWZpbmVkKSB7ZW50aXR5LmFuaW1hdGlvbi5vZmZzZXRZID0gMDt9XG5cdH1cblxuXHRzdGFydEFuaW1hdGlvbihvYmplY3QpIHtcblx0XHRvYmplY3QuYW5pbWF0aW9uLnN0YWdlID0gMDtcblx0XHR0aGlzLnVwZGF0ZUFuaW1hdGlvbihvYmplY3QpO1xuXHR9XG59XG4iLCJmdW5jdGlvbiBBdWRpb01hbmFnZXIoKSB7XG4gICAgY29uc3QgbW0gPSBuZXcgTXVzaWNNYW5hZ2VyKCk7XG4gICAgbGV0IHNvdW5kcyA9IFtdO1xufVxuIiwiY2xhc3MgQ2FtZXJhU3lzdGVtIGV4dGVuZHMgR2FtZVN5c3RlbSB7XG5cblx0Y29uc3RydWN0b3IoY29uZmlnKSB7XG5cdFx0c3VwZXIoW2NvbXBvbmVudF9wb3NpdGlvbiwgY29tcG9uZW50X2NhbWVyYV0pO1xuXHRcdHRoaXMuY29uZmlnID0gY29uZmlnO1xuXHR9XG5cblx0aW5pdChlbmdpbmUpIHtcblx0XHR0aGlzLmNhbWVyYVpvb21UaW1lciA9IHVuZGVmaW5lZDtcblx0XHR0aGlzLmNhbWVyYVNoYWtlVGltZXIgPSB1bmRlZmluZWQ7XG5cdFx0dGhpcy5jYW1lcmFNb3ZpbmcgPSBmYWxzZTtcblx0fVxuXG5cdHJ1bihlbmdpbmUpIHtcblx0XHQvLyBmb3IobGV0IElEIGluIHRoaXMuZW50aXRpZXMpIHtcblx0XHQvLyBcdHRoaXMuY2VudGVyQ2FtZXJhKHRoaXMuZW50aXRpZXNbSURdW2NvbXBvbmVudF9wb3NpdGlvbl0pO1xuXHRcdC8vIH1cblxuXHRcdC8vIGlmKHRoaXMuY2FtZXJhLnggIT0gdGhpcy5jYW1lcmEudGFyZ2V0WCB8fCB0aGlzLmNhbWVyYS55ICE9IHRoaXMuY2FtZXJhLnRhcmdldFkpIHtcblx0XHQvLyBcdHRoaXMucGFuQ2FtZXJhKGVuZ2luZSk7XG5cdFx0Ly8gfVxuXG5cdFx0Zm9yKGxldCBJRCBpbiB0aGlzLmVudGl0aWVzKSB7XG5cdFx0XHR0aGlzLnVwZGF0ZUNhbWVyYShlbmdpbmUsIHRoaXMuZW50aXRpZXNbSURdKTtcblx0XHR9XG5cdH1cblxuXHRoYW5kbGVFdmVudChlbmdpbmUsIGV2ZW50SUQsIGRhdGEpIHtcblx0XHRzd2l0Y2goZXZlbnRJRCkge1xuXHRcdFx0Y2FzZSBldmVudF9iZWdpbl9sZXZlbDpcblx0XHRcdFx0Zm9yKGxldCBJRCBpbiB0aGlzLmVudGl0aWVzKSB7XG5cdFx0XHRcdFx0dGhpcy5zbmFwQ2FtZXJhKGVuZ2luZSwgdGhpcy5lbnRpdGllc1tJRF0pO1xuXHRcdFx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfY2FtZXJhX3VwZGF0ZWQsIHtjYW1lcmE6IHRoaXMuZW50aXRpZXNbSURdW2NvbXBvbmVudF9jYW1lcmFdfSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGV2ZW50X3BsYXllcl9tb3ZlZDpcblx0XHRcdFx0Zm9yKGxldCBJRCBpbiB0aGlzLmVudGl0aWVzKSB7XG5cdFx0XHRcdFx0dGhpcy5lbnRpdGllc1tJRF1bY2FtZXJhX2NvbXBvbmVudF0uc21vb3RoRnJhbWVzID0gdGhpcy5jb25maWcuQ0FNRVJBX01PVkVfU1BFRUQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0cGFuQ2FtZXJhKGVuZ2luZSkge1xuXHRcdHRoaXMuY2FtZXJhLnggKz0gKHRoaXMuY2FtZXJhLnRhcmdldFggLSB0aGlzLmNhbWVyYS54KSAvIDU7XG5cdFx0dGhpcy5jYW1lcmEueSArPSAodGhpcy5jYW1lcmEudGFyZ2V0WSAtIHRoaXMuY2FtZXJhLnkpIC8gNTtcblx0XHRpZih0aGlzLmNhbWVyYS50YXJnZXRYIC0gdGhpcy5jYW1lcmEueCA8IC4xKSB7XG5cdFx0XHR0aGlzLmNhbWVyYS54ID0gdGhpcy5jYW1lcmEudGFyZ2V0WDtcblx0XHR9XG5cdFx0aWYodGhpcy5jYW1lcmEudGFyZ2V0WSAtIHRoaXMuY2FtZXJhLnkgPCAuMSkge1xuXHRcdFx0dGhpcy5jYW1lcmEueSA9IHRoaXMuY2FtZXJhLnRhcmdldFk7XG5cdFx0fVxuXHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfY2FtZXJhX21vdmVkLCB7Y2FtZXJhOiB0aGlzLmNhbWVyYX0pO1xuXHR9XG5cblx0dXBkYXRlQ2FtZXJhKGVuZ2luZSwgZW50aXR5KSB7XG5cdFx0aWYoZW50aXR5W2NvbXBvbmVudF9jYW1lcmFdLnNtb290aEZyYW1lID4gMCkge1xuXHRcdFx0bGV0IGRpZlggPSBlbnRpdHlbY29tcG9uZW50X3Bvc2l0aW9uXS54IC0gZW50aXR5W2NvbXBvbmVudF9jYW1lcmFdLmNhbWVyYVg7XG5cdFx0XHRsZXQgZGlmWSA9IGVudGl0eVtjb21wb25lbnRfcG9zaXRpb25dLnkgLSBlbnRpdHlbY29tcG9uZW50X2NhbWVyYV0uY2FtZXJhWTtcblx0XHRcdGRpZlggPSAoZGlmWCAvIHRoaXMuY29uZmlnLkNBTUVSQV9NT1ZFX1NQRUVEKSAqIGVudGl0eVtjb21wb25lbnRfY2FtZXJhXS5zbW9vdGhGcmFtZVxuXHRcdFx0ZGlmWSA9IChkaWZZIC8gdGhpcy5jb25maWcuQ0FNRVJBX01PVkVfU1BFRUQpICogZW50aXR5W2NvbXBvbmVudF9jYW1lcmFdLnNtb290aEZyYW1lXG5cdFx0XHRlbnRpdHlbY29tcG9uZW50X2NhbWVyYV0uY2FtZXJhWCArPSBkaWZYO1xuXHRcdFx0ZW50aXR5W2NvbXBvbmVudF9jYW1lcmFdLmNhbWVyYVkgKz0gZGlmWTtcblx0XHRcdGVudGl0eVtjb21wb25lbnRfY2FtZXJhXS5zbW9vdGhGcmFtZS0tO1xuXHRcdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9jYW1lcmFfdXBkYXRlZCwge2NhbWVyYTogdGhpcy5lbnRpdGllc1tJRF1bY29tcG9uZW50X2NhbWVyYV19KTtcblx0XHR9XG5cdH1cblxuXHRzbmFwQ2FtZXJhKGVuZ2luZSwgZW50aXR5KSB7XG5cdFx0ZW50aXR5W2NvbXBvbmVudF9jYW1lcmFdLmNhbWVyYVggPSBlbnRpdHlbY29tcG9uZW50X3Bvc2l0aW9uXS54O1xuXHRcdGVudGl0eVtjb21wb25lbnRfY2FtZXJhXS5jYW1lcmFZID0gZW50aXR5W2NvbXBvbmVudF9wb3NpdGlvbl0ueTtcblx0XHRlbnRpdHlbY29tcG9uZW50X2NhbWVyYV0uc21vb3RoRnJhbWUgPSAwO1xuXHR9XG5cbn1cbiIsImNsYXNzIENvbWJhdFN5c3RlbSBleHRlbmRzIEdhbWVTeXN0ZW0ge1xuXG5cdGNvbnN0cnVjdG9yKGNvbmZpZykge1xuXHRcdHN1cGVyKFtjb21wb25lbnRfY29tYmF0XSk7XG5cdFx0dGhpcy5jb25maWcgPSBjb25maWc7XG5cdH1cblxuXHRpbml0KGVuZ2luZSkge1xuXHRcdHRoaXMuaW5Db21iYXQgPSBmYWxzZTtcblx0XHR0aGlzLmNvbWJhdFRpbWVyID0gMDtcblx0fVxuXG5cdHJ1bihlbmdpbmUpIHtcblx0XHRpZih0aGlzLmNvbWJhdFRpbWVyID4gMCkge1xuXHRcdFx0dGhpcy5jb21iYXRUaW1lci0tO1xuXHRcdFx0aWYodGhpcy5jb21iYXRUaW1lciA9PSAwKSB7XG5cdFx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfZW5kX2NvbWJhdCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aGFuZGxlRXZlbnQoZW5naW5lLCBldmVudElELCBkYXRhKSB7XG5cdFx0c3dpdGNoKGV2ZW50SUQpIHtcblx0XHRcdGNhc2UgZXZlbnRfbWVsZWVfYWJpbGl0eTpcblx0XHRcdFx0dGhpcy5tZWxlZUF0dGFjayhlbmdpbmUsIGRhdGEuZW50aXR5LCBkYXRhLnRhcmdldCwgZGF0YS5hYmlsaXR5KTtcblx0XHRcdFx0dGhpcy5yZXNldENvbWJhdFRpbWVyKGVuZ2luZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9tZWxlZV9hYmlsaXR5OlxuXHRcdFx0XHR0aGlzLm1lbGVlQXR0YWNrKGVuZ2luZSwgZGF0YS5lbnRpdHksIGRhdGEudGFyZ2V0LCBkYXRhLmFiaWxpdHkpO1xuXHRcdFx0XHR0aGlzLnJlc2V0Q29tYmF0VGltZXIoZW5naW5lKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0cmVzZXRDb21iYXRUaW1lcihlbmdpbmUpIHtcblx0XHRpZih0aGlzLmNvbWJhdFRpbWVyID09IDApIHtcblx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfYmVnaW5fY29tYmF0KTtcblx0XHR9XG5cdFx0dGhpcy5jb21iYXRUaW1lciA9IHRoaXMuY29uZmlnLkNPTUJBVF9USU1FUjtcblx0fVxuXG5cdGRldGVybWluZUF0dGFja0RpcmVjdGlvbihlbnRpdHksIG9iamVjdHMpIHtcblx0XHRmb3IobGV0IG8gb2Ygb2JqZWN0cykge1xuXHRcdFx0bGV0IGRpciA9IFV0aWxpdHkuZW50aXR5QWRqYWNlbnQoZW50aXR5LCBvKTtcblx0XHRcdGlmKGRpciAhPT0gLTEpIHtcblx0XHRcdFx0cmV0dXJuIGRpcjtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIC0xO1xuXHR9XG5cblx0bWVsZWVBdHRhY2soZW5naW5lLCBlbnRpdHksIHRhcmdldCwgYWJpbGl0eSkge1xuXHRcdGxldCBoZWFsdGhMb3N0ID0gbWF4KDAsIGVudGl0eS5jb21iYXQuYXR0YWNrRGFtYWdlIC0gdGFyZ2V0LmNvbWJhdC5hcm1vcik7XG5cdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9lbnRpdHlfdGFrZV9kYW1hZ2UsIHsnZW50aXR5JzogdGFyZ2V0LCAnaGVhbHRoTG9zdCc6IGhlYWx0aExvc3QgfSk7XG5cdFx0Ly8gdGhpcy5iZWdpbkNvbWJhdChlbmdpbmUpO1xuXHRcdHJldHVybjtcblx0fVxuXG5cdHNwaW5BdHRhY2soZW5naW5lLCBlbnRpdHksIG9iamVjdHMpIHtcblx0XHRsZXQgdGFyZ2V0cyA9IFtdO1xuXHRcdGZvcihsZXQgbyBvZiBvYmplY3RzKSB7XG5cdFx0XHRpZihlbnRpdHkgIT0gbyAmJiB0aGlzLmVudGl0eUFyb3VuZChlbnRpdHksIG8pKSB7XG5cdFx0XHRcdHRhcmdldHMucHVzaChvKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYodGFyZ2V0cy5sZW5ndGggPiAwKSB7XG5cdFx0XHRpZihlbnRpdHkgaW5zdGFuY2VvZiBQbGF5ZXIpIHtcblx0XHRcdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9wbGF5ZXJfc3Bpbl9hdHRhY2spO1xuXHRcdFx0fVxuXHRcdFx0Zm9yKGxldCBvIG9mIHRhcmdldHMpIHtcblx0XHRcdFx0bGV0IGhlYWx0aExvc3QgPSBtYXgoMCwgZW50aXR5LmNvbWJhdC5tZWxlZUF0dGFja1Bvd2VyIC0gby5jb21iYXQubWVsZWVEZWZlbnNlUG93ZXIpO1xuXHRcdFx0XHRlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X2VudGl0eV9hdHRhY2tlZCwgeyAnYXR0YWNrZXInOiBlbnRpdHksICd0YXJnZXQnOiBvLCAnaGVhbHRoTG9zdCc6IGhlYWx0aExvc3QgfSk7XG5cdFx0XHR9XG5cdFx0XHRlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X3N1Y2Nlc3NmdWxfYWN0aW9uLCB7ICdhY3Rpb24nOiBlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uLCAnZW50aXR5JzogZW50aXR5IH0pO1xuXHRcdFx0dGhpcy5iZWdpbkNvbWJhdChlbmdpbmUpO1xuXHRcdH1cblx0fVxuXG5cdGVudGl0eUFyb3VuZChlbnRpdHksIG90aGVyRW50aXR5KSB7XG5cdFx0cmV0dXJuIFV0aWxpdHkuY29sbGlzaW9uKG5ldyBDb2xsaXNpb25Db21wb25lbnQoZW50aXR5LnBvc2l0aW9uLnggLSAxLCBlbnRpdHkucG9zaXRpb24ueSAtIDEsIDMpLCBvdGhlckVudGl0eS5jb2xsaXNpb24pO1xuXHR9XG5cblx0c3RhdGljIHZhbGlkTWVsZWVBdHRhY2soZW5naW5lLCBlbnRpdHkpIHtcblx0XHRmb3IobGV0IG8gb2YgZW5naW5lLmdldEVudGl0aWVzKCkpIHtcblx0XHRcdGlmKGVudGl0eSAhPSBvKSB7XG5cdFx0XHRcdGlmKFV0aWxpdHkuZW50aXR5QWRqYWNlbnQoZW50aXR5LCBvKSAhPSAtMSkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuIiwiY2xhc3MgRGlzcGxheVN5c3RlbSBleHRlbmRzIEdhbWVTeXN0ZW0ge1xuXG5cdGNvbnN0cnVjdG9yKGNvbmZpZywgaW1hZ2VzKSB7XG5cdFx0c3VwZXIoW2NvbXBvbmVudF9wb3NpdGlvbiwgY29tcG9uZW50X2Rpc3BsYXldKTtcblx0XHR0aGlzLmNvbmZpZyA9IGNvbmZpZztcblx0XHR0aGlzLnRleHR1cmVzID0gaW1hZ2VzO1xuXHR9XG5cblx0aW5pdChlbmdpbmUpIHtcblx0XHR0aGlzLmNhbWVyYVpvb21UaW1lciA9IHVuZGVmaW5lZDtcblx0XHR0aGlzLmNhbWVyYVNoYWtlVGltZXIgPSB1bmRlZmluZWQ7XG5cdFx0dGhpcy5jYW1lcmFNb3ZpbmcgPSBmYWxzZTtcblxuXHRcdHRoaXMubGlnaHRPZmZzZXQgPSAwO1xuXHRcdHRoaXMubGlnaHRPZmZzZXRTY2FsZSA9IC4wMjtcblx0XHR0aGlzLmxpZ2h0T2Zmc2V0U3BlZWQgPSA2MDA7XG5cblx0XHR0aGlzLmNlbnRlclggPSBmbG9vcih3aWR0aCAvIDIpO1xuXHRcdHRoaXMuY2VudGVyWSA9IGZsb29yKGhlaWdodCAvIDIpO1xuXG5cdFx0dGhpcy5jYW52YXMgPSB7XG5cdFx0XHRyZWFkeTogZmFsc2UsXG5cdFx0XHRjZW50ZXJYOiB0aGlzLmNlbnRlclgsXG5cdFx0XHRjZW50ZXJZOiB0aGlzLmNlbnRlclksXG5cdFx0XHR6b29tOiAxXG5cdFx0fVxuXG5cdFx0dGhpcy5ncmlkU2l6ZSA9IHRoaXMuY29uZmlnLkdSSURfU0laRTtcblx0XHR0aGlzLmhhbGZHcmlkU2l6ZSA9IHRoaXMuZ3JpZFNpemUgLyAyO1xuXHR9XG5cblx0cnVuKGVuZ2luZSkge1xuXHRcdGJhY2tncm91bmQoMCk7XG5cblx0XHQvLyBpZih0aGlzLmNhbnZhcy5yZWFkeSkge1xuXHRcdC8vIGxldCBwbGF5ZXIgPSBlbmdpbmUuZ2V0UGxheWVyKCk7XG5cdFx0Ly8gaWYocGxheWVyLmFuaW1hdGlvbi5hbmltYXRpb24gPT0gYW5pbWF0aW9uX2lkbGUpIHsgdGhpcy5jYW1lcmFNb3ZpbmcgPSBmYWxzZTsgfVxuXHRcdC8vIHRoaXMuY2VudGVyQ2FtZXJhKHRoaXMuY2FtZXJhLCBwbGF5ZXIpO1xuXG5cdFx0Ly9tb3ZlIHRvIGNhbWVyYSBldmVudCBoYW5kbGVyXG5cdFx0Ly8gY2FudmFzLnRyYW5zbGF0ZShkYXRhLmNhbWVyYS54LCBkYXRhLmNhbWVyYS55KTtcblx0XHQvLyBjYW52YXMuc2NhbGUoZGF0YS5jYW1lcmEuem9vbSwgZGF0YS5jYW1lcmEuem9vbSk7XG5cblx0XHRjYW52YXMudHJhbnNsYXRlKHRoaXMuY2VudGVyWCAtICh0aGlzLmdyaWRTaXplICogdGhpcy5jYW52YXMuY2VudGVyWCksIHRoaXMuY2VudGVyWSAtICh0aGlzLmdyaWRTaXplICogdGhpcy5jYW52YXMuY2VudGVyWSkpO1xuXHRcdGNhbnZhcy5zY2FsZSh0aGlzLmNhbnZhcy56b29tLCB0aGlzLmNhbnZhcy56b29tKTtcblxuXHRcdGZvcihsZXQgSUQgaW4gdGhpcy5lbnRpdGllcykge1xuXHRcdFx0aWYoIVV0aWxpdHkuZW50aXR5SGFzQ29tcG9uZW50KHRoaXMuZW50aXRpZXNbSURdLCBjb21wb25lbnRfYW5pbWF0aW9uKSkge1xuXHRcdFx0XHR0aGlzLmRyYXdFbnRpdHlXaXRob3V0QW5pbWF0aW9uKHRoaXMuZW50aXRpZXNbSURdKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0Zm9yKGxldCBJRCBpbiB0aGlzLmVudGl0aWVzKSB7XG5cdFx0XHRpZihVdGlsaXR5LmVudGl0eUhhc0NvbXBvbmVudCh0aGlzLmVudGl0aWVzW0lEXSwgY29tcG9uZW50X2FuaW1hdGlvbikpIHtcblx0XHRcdFx0dGhpcy5kcmF3RW50aXR5V2l0aEFuaW1hdGlvbih0aGlzLmVudGl0aWVzW0lEXSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gdGhpcy5kcmF3U3F1YXJlcyhlbmdpbmUuZ2V0TWFwKCkpO1xuXHRcdC8vIHRoaXMuZHJhd0VudGl0aWVzKGVuZ2luZS5nZXRFbnRpdGllcygpKTtcblx0XHQvLyB0aGlzLmRyYXdMaWdodHModGhpcy5vYmplY3RzKTtcblx0XHQvLyB0aGlzLmRyYXdNb2JIZWFsdGgodGhpcy5vYmplY3RzKTtcblxuXHRcdGNhbnZhcy5zZXRUcmFuc2Zvcm0oKTtcblxuXHRcdC8vIH1cblxuXG5cdFx0Ly8gbGV0IGV0ID0gbWlsbGlzKCkgLSBzdDtcblx0XHQvLyBjb25zb2xlLmxvZyhcIlRpbWUgZm9yIGRyYXcgbG9vcDogXCIgKyBldCk7XG5cblxuXHRcdC8vIGNhbnZhcy50cmFuc2xhdGUod2lkdGgvMiwgaGVpZ2h0LzIpO1xuXHRcdC8vIGNhbnZhcy5yb3RhdGUoNDUgKiBNYXRoLlBJIC8gMTgwKTtcblx0XHQvLyBjYW52YXMuc2hhZG93Qmx1ciA9IDEwO1xuXHRcdC8vIGNhbnZhcy5zaGFkb3dDb2xvciA9ICdibGFjayc7XG5cdFx0Ly8gY2FudmFzLnNoYWRvd09mZnNldFggPSA1O1xuXHRcdC8vIGNhbnZhcy5zZXRUcmFuc2Zvcm0oKTtcblx0fVxuXG5cdGhhbmRsZUV2ZW50KGVuZ2luZSwgZXZlbnRJRCwgZGF0YSkge1xuXHRcdHN3aXRjaChldmVudElEKSB7XG5cdFx0XHRjYXNlIGV2ZW50X2JlZ2luX2xldmVsOlxuXHRcdFx0XHQvLyBNT1ZFIFRISVMgVE8gVEVYVFVSRSBTWVNURU1cblx0XHRcdFx0Ly8gdGhpcy5kZXRlcm1pbmVTcXVhcmVUZXh0dXJlcyhlbmdpbmUuZ2V0TWFwKCkpO1xuXHRcdFx0XHQvLyB0aGlzLmNhbWVyYU1vdmluZyA9IHRydWU7XG5cdFx0XHRcdC8vIHRoaXMuY2FtZXJhLmRpc3BsYXkgPSB0cnVlO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfY2FtZXJhX3VwZGF0ZWQ6XG5cdFx0XHRcdHRoaXMuY2FudmFzLmNlbnRlclggPSBkYXRhLmNhbWVyYS5jYW1lcmFYO1xuXHRcdFx0XHR0aGlzLmNhbnZhcy5jZW50ZXJZID0gZGF0YS5jYW1lcmEuY2FtZXJhWTtcblx0XHRcdFx0dGhpcy5jYW52YXMuem9vbSA9IGRhdGEuY2FtZXJhLnpvb207XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHQvLyBjYXNlIGV2ZW50X2NhbWVyYV9yZWFkeTpcblx0XHRcdFx0Ly8gXHRjYW52YXMudHJhbnNsYXRlKHRoaXMuY2FudmFzLmNlbnRlclgsIHRoaXMuY2FudmFzLmNlbnRlclkpO1xuXHRcdFx0XHQvLyBcdGNhbnZhcy5zY2FsZSh0aGlzLmNhbnZhcy56b29tLCB0aGlzLmNhbnZhcy56b29tKTtcblx0XHRcdFx0Ly8gXHR0aGlzLmNhbnZhcy5yZWFkeSA9IHRydWU7XG5cdFx0XHRcdC8vIFx0dGhpcy5jYW52YXMuem9vbSA9IGRhdGEuY2FtZXJhLnpvb207XG5cdFx0XHRcdC8vIFx0dGhpcy5jYW52YXMuY2VudGVyWCA9IHRoaXMuY2FudmFzLnpvb20gKiAoZGF0YS5jYW1lcmEueCAqIHRoaXMuZ3JpZFNpemUpO1xuXHRcdFx0XHQvLyBcdHRoaXMuY2FudmFzLmNlbnRlclkgPSB0aGlzLmNhbnZhcy56b29tICogKGRhdGEuY2FtZXJhLnkgKiB0aGlzLmdyaWRTaXplKTtcblx0XHRcdFx0Ly8gXHRicmVhaztcblx0XHRcdFx0Ly8gY2FzZSBldmVudF9jYW1lcmFfbW92ZWQ6XG5cdFx0XHRcdC8vIFx0dGhpcy5jYW52YXMuem9vbSA9IGRhdGEuY2FtZXJhLnpvb207XG5cdFx0XHRcdC8vIFx0dGhpcy5jYW52YXMuY2VudGVyWCA9IHRoaXMuY2FudmFzLnpvb20gKiAoZGF0YS5jYW1lcmEueCAqIHRoaXMuZ3JpZFNpemUpO1xuXHRcdFx0XHQvLyBcdHRoaXMuY2FudmFzLmNlbnRlclkgPSB0aGlzLmNhbnZhcy56b29tICogKGRhdGEuY2FtZXJhLnkgKiB0aGlzLmdyaWRTaXplKTtcblx0XHRcdFx0Ly8gXHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfZG93bl9sZXZlbDpcblx0XHRcdFx0dGhpcy5jYW1lcmEuZGlzcGxheSA9IGZhbHNlO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfd2luZG93X3Jlc2l6ZWQ6XG5cdFx0XHRcdHRoaXMucmVzaXplKCk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHQvLyBjYXNlIGV2ZW50X2JlZ2luX2NvbWJhdDpcblx0XHRcdFx0Ly8gXHR0aGlzLmNhbWVyYS5jb21iYXQgPSB0cnVlO1xuXHRcdFx0XHQvLyBcdHRoaXMuZGVjaWRlQ2FtZXJhWm9vbVN0YXRlKHRoaXMuY2FtZXJhKTtcblx0XHRcdFx0Ly8gXHRicmVhaztcblx0XHRcdFx0Ly8gY2FzZSBldmVudF9lbmRfY29tYmF0OlxuXHRcdFx0XHQvLyBcdHRoaXMuY2FtZXJhLmNvbWJhdCA9IGZhbHNlO1xuXHRcdFx0XHQvLyBcdHRoaXMuZGVjaWRlQ2FtZXJhWm9vbVN0YXRlKHRoaXMuY2FtZXJhKTtcblx0XHRcdFx0Ly8gXHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfcGxheWVyX3N0YXJ0X3NwcmludGluZzpcblx0XHRcdFx0dGhpcy5jYW1lcmEuc3ByaW50aW5nID0gdHJ1ZTtcblx0XHRcdFx0dGhpcy5kZWNpZGVDYW1lcmFab29tU3RhdGUodGhpcy5jYW1lcmEpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfcGxheWVyX3N0b3Bfc3ByaW50aW5nOlxuXHRcdFx0XHR0aGlzLmNhbWVyYS5zcHJpbnRpbmcgPSBmYWxzZTtcblx0XHRcdFx0dGhpcy5kZWNpZGVDYW1lcmFab29tU3RhdGUodGhpcy5jYW1lcmEpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdFx0Ly8gY2FzZSBldmVudF9wbGF5ZXJfbWVsZWVfYXR0YWNrOlxuXHRcdFx0XHQvLyBcdHRoaXMuc2hha2VDYW1lcmEodGhpcy5jYW1lcmEsIHRoaXMuY29uZmlnLkNBTUVSQV9TSEFLRV9NRURJVU1fU01BTEwpO1xuXHRcdFx0XHQvLyBcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfaGl0c3R1biwgeyBcInRpY2tzXCI6IDQgfSk7XG5cdFx0XHRcdC8vIFx0YnJlYWs7XG5cdFx0XHRcdC8vIGNhc2UgZXZlbnRfcGxheWVyX3NwaW5fYXR0YWNrOlxuXHRcdFx0XHQvLyBcdHRoaXMuc2hha2VDYW1lcmEodGhpcy5jYW1lcmEsIHRoaXMuY29uZmlnLkNBTUVSQV9TSEFLRV9TTUFMTCk7XG5cdFx0XHRcdC8vIFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9oaXRzdHVuLCB7IFwidGlja3NcIjogMiB9KTtcblx0XHRcdFx0Ly8gXHRicmVhaztcblx0XHRcdFx0Ly9ldmVudF9lbnRpdHlfdGFrZV9kYW1hZ2Vcblx0XHRcdGNhc2UgZXZlbnRfZW50aXR5X3Rha2VfZGFtYWdlOlxuXHRcdFx0XHR0aGlzLnNoYWtlQ2FtZXJhKHRoaXMuY2FtZXJhLCBkYXRhLmhlYWx0aExvc3QpO1xuXHRcdFx0XHQvLyBlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X2hpdHN0dW4sIHsgXCJ0aWNrc1wiOiA2IH0pO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHRnZXREcmF3Qm91bmRzKGVudGl0eSkge1xuXHRcdGxldCBib3VuZHMgPSB7fTtcblx0XHRib3VuZHMueCA9ICh0aGlzLmdyaWRTaXplICogKGVudGl0eVtjb21wb25lbnRfcG9zaXRpb25dLnggKyBlbnRpdHlbY29tcG9uZW50X2Rpc3BsYXldLm9mZnNldFgpKSAtIHRoaXMuY2FudmFzLmNlbnRlclg7XG5cdFx0Ym91bmRzLnkgPSAodGhpcy5ncmlkU2l6ZSAqIChlbnRpdHlbY29tcG9uZW50X3Bvc2l0aW9uXS55ICsgZW50aXR5W2NvbXBvbmVudF9kaXNwbGF5XS5vZmZzZXRZKSkgLSB0aGlzLmNhbnZhcy5jZW50ZXJZO1xuXHRcdGJvdW5kcy53ID0gZW50aXR5W2NvbXBvbmVudF9kaXNwbGF5XS53aWR0aCAqIHRoaXMuZ3JpZFNpemU7XG5cdFx0Ym91bmRzLmggPSBlbnRpdHlbY29tcG9uZW50X2Rpc3BsYXldLmhlaWdodCAqIHRoaXMuZ3JpZFNpemU7XG5cdFx0cmV0dXJuIGJvdW5kcztcblx0fVxuXG5cdG9uU2NyZWVuKGJvdW5kcywgc2NhbGUpIHtcblx0XHRjb25zdCBib3JkZXIgPSBtYXgoYm91bmRzLncsIGJvdW5kcy5oKSArIDEwO1xuXHRcdGNvbnN0IHQgPSAtKGhlaWdodCAvIHNjYWxlIC8gMikgLSBib3JkZXI7XG5cdFx0Y29uc3QgciA9ICh3aWR0aCAvIHNjYWxlIC8gMikgKyBib3JkZXI7XG5cdFx0Y29uc3QgYiA9IChoZWlnaHQgLyBzY2FsZSAvIDIpICsgYm9yZGVyO1xuXHRcdGNvbnN0IGwgPSAtKHdpZHRoIC8gc2NhbGUgLyAyKSAtIGJvcmRlcjtcblx0XHRyZXR1cm4gYm91bmRzLnkgPiB0ICYmIGJvdW5kcy54ICsgYm91bmRzLncgPCByICYmIGJvdW5kcy55ICsgYm91bmRzLmggPCBiICYmIGJvdW5kcy54ID4gbDtcblx0fVxuXG5cdGRyYXdFbnRpdHlXaXRoQW5pbWF0aW9uKGVudGl0eSkge1xuXHRcdGxldCBib3VuZHMgPSB0aGlzLmdldERyYXdCb3VuZHMoZW50aXR5KTtcblx0XHRsZXQgeCA9IGJvdW5kcy54LCB5ID0gYm91bmRzLnksIHcgPSBib3VuZHMudywgaCA9IGJvdW5kcy5oO1xuXHRcdGZpbGwoMjU1LCAwLCAwKTtcblx0XHRyZWN0KHgsIHksIHcsIGgpO1xuXHR9XG5cblx0ZHJhd0VudGl0eVdpdGhvdXRBbmltYXRpb24oZW50aXR5KSB7XG5cdFx0Ly8gaWYoc3F1YXJlRW50aXR5W2NvbXBvbmVudF9kaXNwbGF5XS5kaXNjb3ZlcmVkKSB7XG5cdFx0bGV0IGJvdW5kcyA9IHRoaXMuZ2V0RHJhd0JvdW5kcyhlbnRpdHkpO1xuXHRcdHRoaXMuZHJhd1RleHR1cmUoZW50aXR5LCBib3VuZHMpO1xuXHR9XG5cblx0ZHJhd1RleHR1cmUoZW50aXR5LCBib3VuZHMpIHtcblx0XHRsZXQgeCA9IGJvdW5kcy54LCB5ID0gYm91bmRzLnksIHcgPSBib3VuZHMudywgaCA9IGJvdW5kcy5oO1xuXHRcdC8vIGZvcihsZXQgdGV4dHVyZSBvZiBvYmplY3QudGV4dHVyZXMpIHtcblx0XHQvLyBcdGZvcihsZXQgdGV4dHVyZUVsZW1lbnQgb2YgdGV4dHVyZS50ZXh0dXJlRWxlbWVudHMpIHtcblx0XHRsZXQgdGV4dHVyZSA9IGVudGl0eVtjb21wb25lbnRfdGV4dHVyZV07XG5cdFx0Ly8gY29uc29sZS5sb2codGhpcy50ZXh0dXJlc1t0ZXh0dXJlLnR5cGVdKTtcblx0XHRpZih0aGlzLnRleHR1cmVzW3RleHR1cmUudHlwZV1bdGV4dHVyZS5zdWJ0eXBlXSA9PSB1bmRlZmluZWQpIHtcblx0XHRcdGNvbnNvbGUubG9nKFwidW5kZWZpbmVkXCIpO1xuXHRcdFx0aW1hZ2UodGhpcy50ZXh0dXJlc1t0ZXh0dXJlLnR5cGVdW3RleHR1cmVfZGVmYXVsdF0sIHgsIHksIHcsIGgpO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdGltYWdlKHRoaXMudGV4dHVyZXNbdGV4dHVyZS50eXBlXVt0ZXh0dXJlLnN1YnR5cGVdLCB4LCB5LCB3LCBoKTtcblx0XHR9XG5cdFx0Ly8gfVxuXHRcdC8vIH1cblx0fVxuXG5cdHN0YXRpYyB0ZXh0dXJlc0Nvbm5lY3QodDEsIHQyKSB7XG5cdFx0aWYodDIgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRpZih0MSBpbnN0YW5jZW9mIFdhbGxTcXVhcmUpIHtcblx0XHRcdHJldHVybiAodDIgaW5zdGFuY2VvZiBXYWxsU3F1YXJlKTtcblx0XHR9XG5cdFx0ZWxzZSBpZih0MSBpbnN0YW5jZW9mIEZsb29yU3F1YXJlKSB7XG5cdFx0XHRyZXR1cm4gISh0MiBpbnN0YW5jZW9mIFdhbGxTcXVhcmUpO1xuXHRcdH1cblx0fVxuXG5cdHN0YXRpYyBkZXRlcm1pbmVUZXh0dXJlVHlwZShzcXVhcmUsIHRleHR1cmUsIG1hcCkge1xuXHRcdGxldCBUT1AgPSBmYWxzZSwgUklHSFQgPSBmYWxzZSwgQk9UVE9NID0gZmFsc2UsIExFRlQgPSBmYWxzZTtcblx0XHRsZXQgbnVtTmVpZ2hib3JzID0gMDtcblx0XHRpZihzcXVhcmUucG9zaXRpb24ueSA+IDApIHtcblx0XHRcdFRPUCA9IERpc3BsYXlTeXN0ZW0udGV4dHVyZXNDb25uZWN0KHNxdWFyZSwgbWFwW3NxdWFyZS5wb3NpdGlvbi54XVtzcXVhcmUucG9zaXRpb24ueSAtIDFdKTtcblx0XHRcdGlmKFRPUCkgeyBudW1OZWlnaGJvcnMrKzsgfVxuXHRcdH1cblx0XHRpZihzcXVhcmUucG9zaXRpb24ueCA8IG1hcC5sZW5ndGggLSAxKSB7XG5cdFx0XHRSSUdIVCA9IERpc3BsYXlTeXN0ZW0udGV4dHVyZXNDb25uZWN0KHNxdWFyZSwgbWFwW3NxdWFyZS5wb3NpdGlvbi54ICsgMV1bc3F1YXJlLnBvc2l0aW9uLnldKTtcblx0XHRcdGlmKFJJR0hUKSB7IG51bU5laWdoYm9ycysrOyB9XG5cdFx0fVxuXHRcdGlmKHNxdWFyZS5wb3NpdGlvbi55IDwgbWFwLmxlbmd0aCAtIDEpIHtcblx0XHRcdEJPVFRPTSA9IERpc3BsYXlTeXN0ZW0udGV4dHVyZXNDb25uZWN0KHNxdWFyZSwgbWFwW3NxdWFyZS5wb3NpdGlvbi54XVtzcXVhcmUucG9zaXRpb24ueSArIDFdKTtcblx0XHRcdGlmKEJPVFRPTSkgeyBudW1OZWlnaGJvcnMrKzsgfVxuXHRcdH1cblx0XHRpZihzcXVhcmUucG9zaXRpb24ueCA+IDApIHtcblx0XHRcdExFRlQgPSBEaXNwbGF5U3lzdGVtLnRleHR1cmVzQ29ubmVjdChzcXVhcmUsIG1hcFtzcXVhcmUucG9zaXRpb24ueCAtIDFdW3NxdWFyZS5wb3NpdGlvbi55XSk7XG5cdFx0XHRpZihMRUZUKSB7IG51bU5laWdoYm9ycysrOyB9XG5cdFx0fVxuXG5cdFx0c3dpdGNoKG51bU5laWdoYm9ycykge1xuXHRcdFx0Y2FzZSAwOlxuXHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX2Nyb3NzLCAwLCAwKSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAxOlxuXHRcdFx0XHRpZihUT1ApIHtcblx0XHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX1VfdG9wLCAwLCAwKSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZihSSUdIVCkge1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfVV9yaWdodCwgMCwgMCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2UgaWYoQk9UVE9NKSB7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9VX2JvdHRvbSwgMCwgMCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2UgaWYoTEVGVCkge1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfVV9sZWZ0LCAwLCAwKSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIDI6XG5cdFx0XHRcdGlmKExFRlQgJiYgUklHSFQpIHtcblx0XHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX3NpZGVfdG9wLCAwLCAwKSk7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9zaWRlX2JvdHRvbSwgMCwgMCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2UgaWYoVE9QICYmIEJPVFRPTSkge1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfc2lkZV9yaWdodCwgMCwgMCkpO1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfc2lkZV9sZWZ0LCAwLCAwKSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZihUT1AgJiYgUklHSFQpIHtcblx0XHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX2luX2Nvcm5lcl9ib3R0b21fbGVmdCwgMCwgMCkpO1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfb3V0X2Nvcm5lcl90b3BfcmlnaHQsIDAsIDApKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIGlmKEJPVFRPTSAmJiBSSUdIVCkge1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfaW5fY29ybmVyX3RvcF9sZWZ0LCAwLCAwKSk7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9vdXRfY29ybmVyX2JvdHRvbV9yaWdodCwgMCwgMCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2UgaWYoQk9UVE9NICYmIExFRlQpIHtcblx0XHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX2luX2Nvcm5lcl90b3BfcmlnaHQsIDAsIDApKTtcblx0XHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX291dF9jb3JuZXJfYm90dG9tX2xlZnQsIDAsIDApKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIGlmKExFRlQgJiYgVE9QKSB7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9pbl9jb3JuZXJfYm90dG9tX3JpZ2h0LCAwLCAwKSk7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9vdXRfY29ybmVyX3RvcF9sZWZ0LCAwLCAwKSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIDM6XG5cdFx0XHRcdGlmKCFUT1ApIHtcblx0XHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX291dF9jb3JuZXJfYm90dG9tX3JpZ2h0LCAwLCAwKSk7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9vdXRfY29ybmVyX2JvdHRvbV9sZWZ0LCAwLCAwKSk7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9zaWRlX3RvcCwgMCwgMCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2UgaWYoIVJJR0hUKSB7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9vdXRfY29ybmVyX3RvcF9sZWZ0LCAwLCAwKSk7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9vdXRfY29ybmVyX2JvdHRvbV9sZWZ0LCAwLCAwKSk7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9zaWRlX3JpZ2h0LCAwLCAwKSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZighQk9UVE9NKSB7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9vdXRfY29ybmVyX3RvcF9yaWdodCwgMCwgMCkpO1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfb3V0X2Nvcm5lcl90b3BfbGVmdCwgMCwgMCkpO1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfc2lkZV9ib3R0b20sIDAsIDApKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIGlmKCFMRUZUKSB7XG5cdFx0XHRcdFx0dGV4dHVyZS50ZXh0dXJlRWxlbWVudHMucHVzaChuZXcgVGV4dHVyZUVsZW1lbnRDb21wb25lbnQodGV4dHVyZV9vdXRfY29ybmVyX2JvdHRvbV9yaWdodCwgMCwgMCkpO1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfb3V0X2Nvcm5lcl90b3BfcmlnaHQsIDAsIDApKTtcblx0XHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX3NpZGVfbGVmdCwgMCwgMCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSA0OlxuXHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX2RlZmF1bHQsIDAsIDApKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHR0ZXh0dXJlLnRleHR1cmVFbGVtZW50cy5wdXNoKG5ldyBUZXh0dXJlRWxlbWVudENvbXBvbmVudCh0ZXh0dXJlX2RlZmF1bHQsIDAsIDApKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXG5cdFx0Ly8gaWYoc3F1YXJlLnBvc2l0aW9uLnkgPiAwICYmIHNxdWFyZS5wb3NpdGlvbi54IDwgbWFwLmxlbmd0aCAtIDEpIHtcblx0XHQvLyBcdHRvcHJpZ2h0ID0gdGV4dHVyZXNDb25uZWN0KHNxdWFyZSwgbWFwW3NxdWFyZS5wb3NpdGlvbi54ICsgMV1bc3F1YXJlLnBvc2l0aW9uLnkgLSAxXSk7XG5cdFx0Ly8gfVxuXHRcdC8vIGlmKHNxdWFyZS5wb3NpdGlvbi54IDwgbWFwLmxlbmd0aCAtIDEgJiYgc3F1YXJlLnBvc2l0aW9uLnkgPCBtYXAubGVuZ3RoIC0gMSkge1xuXHRcdC8vIFx0Ym90dG9tcmlnaHQgPSB0ZXh0dXJlc0Nvbm5lY3Qoc3F1YXJlLCBtYXBbc3F1YXJlLnBvc2l0aW9uLnggKyAxXVtzcXVhcmUucG9zaXRpb24ueSArIDFdKTtcblx0XHQvLyB9XG5cdFx0Ly8gaWYoc3F1YXJlLnBvc2l0aW9uLnkgPCBtYXAubGVuZ3RoIC0gMSAmJiBzcXVhcmUucG9zaXRpb24ueCA+IDApIHtcblx0XHQvLyBcdGJvdHRvbWxlZnQgPSB0ZXh0dXJlc0Nvbm5lY3Qoc3F1YXJlLCBtYXBbc3F1YXJlLnBvc2l0aW9uLnggLSAxXVtzcXVhcmUucG9zaXRpb24ueSArIDFdKTtcblx0XHQvLyB9XG5cdFx0Ly8gaWYoc3F1YXJlLnBvc2l0aW9uLnggPiAwICYmIHNxdWFyZS5wb3NpdGlvbi55ID4gMCkge1xuXHRcdC8vIFx0dG9wbGVmdCA9IHRleHR1cmVzQ29ubmVjdChzcXVhcmUsIG1hcFtzcXVhcmUucG9zaXRpb24ueCAtIDFdW3NxdWFyZS5wb3NpdGlvbi55IC0gMV0pO1xuXHRcdC8vIH1cblx0fVxuXG5cdGRldGVybWluZVNxdWFyZVRleHR1cmVzKG1hcCkge1xuXHRcdGZvcihsZXQgaSA9IDA7IGkgPCBtYXAubGVuZ3RoOyBpKyspIHtcblx0XHRcdGZvcihsZXQgaiA9IDA7IGogPCBtYXAubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0bGV0IHNxdWFyZSA9IG1hcFtpXVtqXTtcblx0XHRcdFx0Zm9yKGxldCB0ZXh0dXJlIG9mIHNxdWFyZS50ZXh0dXJlcykge1xuXHRcdFx0XHRcdHN3aXRjaCh0ZXh0dXJlLnR5cGUpIHtcblx0XHRcdFx0XHRcdGNhc2UgdGV4dHVyZV93YWxsOiBjYXNlIHRleHR1cmVfZmxvb3I6XG5cdFx0XHRcdFx0XHRcdERpc3BsYXlTeXN0ZW0uZGV0ZXJtaW5lVGV4dHVyZVR5cGUoc3F1YXJlLCB0ZXh0dXJlLCBtYXApO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzLnB1c2gobmV3IFRleHR1cmVFbGVtZW50Q29tcG9uZW50KHRleHR1cmVfZGVmYXVsdCwgMCwgMCkpO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYodGV4dHVyZS50ZXh0dXJlRWxlbWVudHMubGVuZ3RoID09IDEgJiYgdGV4dHVyZS50ZXh0dXJlRWxlbWVudHNbMF0uZWxlbWVudCA9PSB0ZXh0dXJlX2RlZmF1bHQpIHtcblx0XHRcdFx0XHRcdHRoaXMuc2V0VGV4dHVyZUFsdCh0ZXh0dXJlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRzZXRUZXh0dXJlQWx0KHRleHR1cmUpIHtcblx0XHRpZih0aGlzLnRleHR1cmVzW3RleHR1cmUudHlwZV1bdGV4dHVyZV9udW1fYWx0c10gPiAwKSB7XG5cdFx0XHRsZXQgcmFuZCA9IHJhbmRvbSh0ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvblt0aGlzLnRleHR1cmVzW3RleHR1cmUudHlwZV1bdGV4dHVyZV9udW1fYWx0c10gKyAxXSk7XG5cdFx0XHRmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy50ZXh0dXJlc1t0ZXh0dXJlLnR5cGVdW3RleHR1cmVfbnVtX2FsdHNdICsgMTsgaSsrKSB7XG5cdFx0XHRcdGlmKHJhbmQgPCB0ZXh0dXJlX3Byb2JhYmlsaXR5X2Rpc3RyaWJ1dGlvbltpXSkge1xuXHRcdFx0XHRcdHRleHR1cmUudGV4dHVyZUVsZW1lbnRzWzBdLmVsZW1lbnQgPSB0ZXh0dXJlX2RlZmF1bHQgKyBpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdGRyYXdTcXVhcmUoc3F1YXJlRW50aXR5KSB7XG5cdFx0aWYoc3F1YXJlRW50aXR5W2NvbXBvbmVudF9kaXNwbGF5XS5kaXNjb3ZlcmVkKSB7XG5cdFx0XHRsZXQgYm91bmRzID0gdGhpcy5nZXREcmF3Qm91bmRzKHMpO1xuXHRcdFx0aWYodGhpcy5vblNjcmVlbihib3VuZHMsIHRoaXMuY2FtZXJhLnpvb20pKSB7XG5cdFx0XHRcdHRoaXMuZHJhd1RleHR1cmUocywgYm91bmRzKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXG5cdGRyYXdFbnRpdGllcyhlbnRpdGllcykge1xuXHRcdGZvcihsZXQgZSBvZiBlbnRpdGllcykge1xuXHRcdFx0aWYoZS5kaXNwbGF5LnZpc2libGUpIHtcblx0XHRcdFx0bGV0IGJvdW5kcyA9IHRoaXMuZ2V0RHJhd0JvdW5kcyhlKTtcblx0XHRcdFx0aWYodGhpcy5vblNjcmVlbihib3VuZHMsIHRoaXMuY2FtZXJhLnpvb20pKSB7XG5cdFx0XHRcdFx0aWYoZS5jb21wb25lbnRzLmluZGV4T2YoY29tcG9uZW50X2FuaW1hdGlvbikgIT09IC0xKSB7XG5cdFx0XHRcdFx0XHR0aGlzLmRyYXdBbmltYXRpb24oZSwgYm91bmRzKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSBpZihlLmNvbXBvbmVudHMuaW5kZXhPZihjb21wb25lbnRfdGV4dHVyZSkgIT09IC0xKSB7XG5cdFx0XHRcdFx0XHR0aGlzLmRyYXdBbmltYXRpb24oZSwgYm91bmRzKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHQvLz09PT09PT09TkVFRCBURVhUVVJFUz09PT09PT09XG5cdFx0XHRcdFx0XHRsZXQgeCA9IGJvdW5kcy54LCB5ID0gYm91bmRzLnksIHcgPSBib3VuZHMudywgaCA9IGJvdW5kcy5oO1xuXHRcdFx0XHRcdFx0aWYoZSBpbnN0YW5jZW9mIFRvcmNoKSB7XG5cdFx0XHRcdFx0XHRcdGZpbGwoMjU1LCAyMjAsIDEzMCwgLjc1KTtcblx0XHRcdFx0XHRcdFx0c3dpdGNoKGUuZGlyZWN0aW9uLmRpcmVjdGlvbikge1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgZGlyZWN0aW9uX3VwOlxuXHRcdFx0XHRcdFx0XHRcdFx0YXJjKHgsIHksIHcsIE1hdGguUEksIDIgKiBNYXRoLlBJKTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgZGlyZWN0aW9uX3JpZ2h0OlxuXHRcdFx0XHRcdFx0XHRcdFx0YXJjKHgsIHksIGgsIE1hdGguUEkgLyAyLCAxLjUgKiBNYXRoLlBJLCB0cnVlKTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgZGlyZWN0aW9uX2Rvd246XG5cdFx0XHRcdFx0XHRcdFx0XHRhcmMoeCwgeSwgdywgMCwgTWF0aC5QSSk7XG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRjYXNlIGRpcmVjdGlvbl9sZWZ0OlxuXHRcdFx0XHRcdFx0XHRcdFx0YXJjKHgsIHksIGgsIE1hdGguUEkgLyAyLCAxLjUgKiBNYXRoLlBJKTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRcdFx0ZmlsbCgyNTUsIDEwMCwgMTAwKTtcblx0XHRcdFx0XHRcdFx0cmVjdCh4LCB5LCB3LCBoKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRkcmF3QW5pbWF0aW9uKG9iamVjdCwgYm91bmRzKSB7XG5cdFx0bGV0IHggPSBib3VuZHMueCwgeSA9IGJvdW5kcy55LCB3ID0gYm91bmRzLncsIGggPSBib3VuZHMuaDtcblx0XHR4ICs9IHRoaXMuZ3JpZFNpemUgKiBvYmplY3QuYW5pbWF0aW9uLm9mZnNldFg7XG5cdFx0eSArPSB0aGlzLmdyaWRTaXplICogb2JqZWN0LmFuaW1hdGlvbi5vZmZzZXRZO1xuXHRcdGxldCBzID0gb2JqZWN0LmFuaW1hdGlvbi5zcHJpdGU7XG5cdFx0aWYocyA9PSB1bmRlZmluZWQpIHtcblx0XHRcdGZpbGwoMjApO1xuXHRcdFx0cmVjdCh4ICsgKHRoaXMuZ3JpZFNpemUgLyA4KSAtIDIsIHkgKyAodGhpcy5ncmlkU2l6ZSAvIDgpIC0gMiwgdyAtICh0aGlzLmdyaWRTaXplIC8gNCkgKyA0LCBoIC0gKHRoaXMuZ3JpZFNpemUgLyA0KSArIDQpO1xuXHRcdFx0aWYob2JqZWN0IGluc3RhbmNlb2YgUGxheWVyKSB7XG5cdFx0XHRcdGZpbGwoMCwgMjAwLCAyMzApO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZXtcblx0XHRcdFx0ZmlsbCgyMDAsIDIwLCA0MCk7XG5cdFx0XHR9XG5cdFx0XHRyZWN0KHggKyAodGhpcy5ncmlkU2l6ZSAvIDgpLCB5ICsgKHRoaXMuZ3JpZFNpemUgLyA4KSwgdyAtICh0aGlzLmdyaWRTaXplIC8gNCksIGggLSAodGhpcy5ncmlkU2l6ZSAvIDQpKTtcblx0XHRcdGlmKG9iamVjdCBpbnN0YW5jZW9mIFBsYXllcikge1xuXHRcdFx0XHRmaWxsKDI1NSwgMjU1LCAwKTtcblx0XHRcdFx0c3dpdGNoKG9iamVjdC5kaXJlY3Rpb24uZGlyZWN0aW9uKSB7XG5cdFx0XHRcdFx0Y2FzZSBkaXJlY3Rpb25fdXA6XG5cdFx0XHRcdFx0XHRlbGxpcHNlKHggKyAodGhpcy5ncmlkU2l6ZSAvIDIpLCB5ICsgKHRoaXMuZ3JpZFNpemUgLyAyKSAtICh0aGlzLmdyaWRTaXplIC8gMyksICh0aGlzLmdyaWRTaXplIC8gNiksICh0aGlzLmdyaWRTaXplIC8gNikpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0Y2FzZSBkaXJlY3Rpb25fcmlnaHQ6XG5cdFx0XHRcdFx0XHRlbGxpcHNlKHggKyAodGhpcy5ncmlkU2l6ZSAvIDIpICsgKHRoaXMuZ3JpZFNpemUgLyAzKSwgeSArICh0aGlzLmdyaWRTaXplIC8gMiksICh0aGlzLmdyaWRTaXplIC8gNiksICh0aGlzLmdyaWRTaXplIC8gNikpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0Y2FzZSBkaXJlY3Rpb25fZG93bjpcblx0XHRcdFx0XHRcdGVsbGlwc2UoeCArICh0aGlzLmdyaWRTaXplIC8gMiksIHkgKyAodGhpcy5ncmlkU2l6ZSAvIDIpICsgKHRoaXMuZ3JpZFNpemUgLyAzKSwgKHRoaXMuZ3JpZFNpemUgLyA2KSwgKHRoaXMuZ3JpZFNpemUgLyA2KSk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlIGRpcmVjdGlvbl9sZWZ0OlxuXHRcdFx0XHRcdFx0ZWxsaXBzZSh4ICsgKHRoaXMuZ3JpZFNpemUgLyAyKSAtICh0aGlzLmdyaWRTaXplIC8gMyksIHkgKyAodGhpcy5ncmlkU2l6ZSAvIDIpLCAodGhpcy5ncmlkU2l6ZSAvIDYpLCAodGhpcy5ncmlkU2l6ZSAvIDYpKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGVsc2V7XG5cdFx0XHRpbWFnZShhLCB4LCB5LCB3LCBoKTtcblx0XHR9XG5cdH1cblxuXHRkcmF3TGlnaHRzKG9iamVjdHMpIHtcblx0XHRmb3IobGV0IG8gb2Ygb2JqZWN0cykge1xuXHRcdFx0aWYoby5kaXNwbGF5LmRpc2NvdmVyZWQgJiYgby5jb21wb25lbnRzLmluY2x1ZGVzKGNvbXBvbmVudF9saWdodCkpIHtcblx0XHRcdFx0dGhpcy5saWdodFNxdWFyZShvKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRsaWdodFNxdWFyZShvKSB7XG5cdFx0bGV0IGJvdW5kcyA9IHRoaXMuZ2V0RHJhd0JvdW5kcyhvKTtcblx0XHRpZihvLmRpc3BsYXkudmlzaWJsZSkge1xuXHRcdFx0aWYobyBpbnN0YW5jZW9mIFdhbGxTcXVhcmUgfHwgbyBpbnN0YW5jZW9mIERvb3JTcXVhcmUpIHtcblx0XHRcdFx0Y2FudmFzLmZpbGxTdHlsZSA9IGxpZ2h0X2xldmVsX3RvX2xpZ2h0WzJdO1xuXHRcdFx0XHRyZWN0KGJvdW5kcy54LCBib3VuZHMueSwgYm91bmRzLncsIGJvdW5kcy5oKTtcblx0XHRcdFx0Y2FudmFzLmZpbGxTdHlsZSA9IGxpZ2h0X2xldmVsX3RvX3NoYWRvd1syXTtcblx0XHRcdFx0cmVjdChib3VuZHMueCwgYm91bmRzLnksIGJvdW5kcy53LCBib3VuZHMuaCk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0Y2FudmFzLmZpbGxTdHlsZSA9IGxpZ2h0X2xldmVsX3RvX2xpZ2h0W28ubGlnaHQubGV2ZWxdO1xuXHRcdFx0XHRyZWN0KGJvdW5kcy54LCBib3VuZHMueSwgYm91bmRzLncsIGJvdW5kcy5oKTtcblx0XHRcdFx0Y2FudmFzLmZpbGxTdHlsZSA9IGxpZ2h0X2xldmVsX3RvX3NoYWRvd1tvLmxpZ2h0LmxldmVsXTtcblx0XHRcdFx0cmVjdChib3VuZHMueCwgYm91bmRzLnksIGJvdW5kcy53LCBib3VuZHMuaCk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0Y2FudmFzLmZpbGxTdHlsZSA9IGxpZ2h0X2xldmVsX3RvX2xpZ2h0WzBdO1xuXHRcdFx0cmVjdChib3VuZHMueCwgYm91bmRzLnksIGJvdW5kcy53LCBib3VuZHMuaCk7XG5cdFx0XHRjYW52YXMuZmlsbFN0eWxlID0gbGlnaHRfbGV2ZWxfdG9fc2hhZG93WzBdO1xuXHRcdFx0cmVjdChib3VuZHMueCwgYm91bmRzLnksIGJvdW5kcy53LCBib3VuZHMuaCk7XG5cdFx0XHRmaWxsKDAsIDAsIDAsIC4yNSk7XG5cdFx0XHRyZWN0KGJvdW5kcy54LCBib3VuZHMueSwgYm91bmRzLncsIGJvdW5kcy5oKTtcblx0XHR9XG5cdH1cblxuXHRkcmF3TW9iSGVhbHRoKG9iamVjdHMpIHtcblx0XHRjb25zdCBIRUFMVEhfQkFSX09GRlNFVCA9IDM7XG5cdFx0Y29uc3QgSEVBTFRIX0JBUl9IRUlHSFQgPSA0O1xuXHRcdGZvcihsZXQgbW9iIG9mIG9iamVjdHMpIHtcblx0XHRcdGlmKG1vYiBpbnN0YW5jZW9mIE1vYiAmJiBtb2IuY29tcG9uZW50cy5pbmNsdWRlcyhjb21wb25lbnRfaGVhbHRoKSAmJiBtb2IuZGlzcGxheS52aXNpYmxlKSB7XG5cdFx0XHRcdGxldCBib3VuZHMgPSB0aGlzLmdldERyYXdCb3VuZHMobW9iKTtcblx0XHRcdFx0bGV0IHggPSBib3VuZHMueDtcblx0XHRcdFx0bGV0IHkgPSBib3VuZHMueTtcblx0XHRcdFx0Ly8gbGV0IHggPSAodGhpcy5ncmlkU2l6ZSAqICh0aGlzLmNhbWVyYS54IC0gbW9iLnBvc2l0aW9uLngpKSArIHRoaXMuY2FtZXJhLnNoYWtlT2Zmc2V0WDtcblx0XHRcdFx0Ly8gbGV0IHkgPSAodGhpcy5ncmlkU2l6ZSAqICh0aGlzLmNhbWVyYS55IC0gbW9iLnBvc2l0aW9uLnkpKSArIHRoaXMuY2FtZXJhLnNoYWtlT2Zmc2V0WTtcblx0XHRcdFx0bGV0IHhvZmYgPSB0aGlzLmdyaWRTaXplICogbW9iLmFuaW1hdGlvbi5vZmZzZXRYO1xuXHRcdFx0XHRsZXQgeW9mZiA9IHRoaXMuZ3JpZFNpemUgKiBtb2IuYW5pbWF0aW9uLm9mZnNldFk7XG5cdFx0XHRcdGxldCBoZWFsdGhCYXJXaWR0aCA9IG1vYi5kaXNwbGF5LndpZHRoICogdGhpcy5ncmlkU2l6ZSAtICh0aGlzLmdyaWRTaXplIC8gNCk7XG5cdFx0XHRcdGZpbGwoNDAsMCwwKTtcblx0XHRcdFx0cmVjdCh4b2ZmICsgeCArICh0aGlzLmdyaWRTaXplIC8gOCksIHlvZmYgKyB5IC0gSEVBTFRIX0JBUl9PRkZTRVQsIGhlYWx0aEJhcldpZHRoLCBIRUFMVEhfQkFSX0hFSUdIVCk7XG5cdFx0XHRcdGhlYWx0aEJhcldpZHRoID0gaGVhbHRoQmFyV2lkdGggKiBIZWFsdGhTeXN0ZW0uZ2V0SGVhbHRoUGVyY2VudChtb2IpO1xuXHRcdFx0XHRmaWxsKDUwLCAyMjAsIDEyMCk7XG5cdFx0XHRcdHJlY3QoeG9mZiArIHggKyAodGhpcy5ncmlkU2l6ZSAvIDgpLCB5b2ZmICsgeSAtIEhFQUxUSF9CQVJfT0ZGU0VULCBoZWFsdGhCYXJXaWR0aCwgSEVBTFRIX0JBUl9IRUlHSFQpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cblx0ZGVjaWRlQ2FtZXJhWm9vbVN0YXRlKGNhbWVyYSkge1xuXHRcdGlmKGNhbWVyYS5jb21iYXQpIHtcblx0XHRcdGlmKGNhbWVyYS5zcHJpbnRpbmcpIHtcblx0XHRcdFx0dGhpcy5jaGFuZ2Vab29tKGNhbWVyYSwgdGhpcy5jb25maWcuQ0FNRVJBX1pPT01fU1RFUFNfU0xPVywgdGhpcy5jb25maWcuQ0FNRVJBX0NPTUJBVF9aT09NKTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHR0aGlzLmNoYW5nZVpvb20oY2FtZXJhLCB0aGlzLmNvbmZpZy5DQU1FUkFfWk9PTV9TVEVQU19NRURJVU0sIHRoaXMuY29uZmlnLkNBTUVSQV9DT01CQVRfWk9PTSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGVsc2UgaWYoY2FtZXJhLnNwcmludGluZykge1xuXHRcdFx0dGhpcy5jaGFuZ2Vab29tKGNhbWVyYSwgdGhpcy5jb25maWcuQ0FNRVJBX1pPT01fU1RFUFNfTUVESVVNLCB0aGlzLmNvbmZpZy5DQU1FUkFfU1BSSU5UX1pPT00pO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdHRoaXMuY2hhbmdlWm9vbShjYW1lcmEsIHRoaXMuY29uZmlnLkNBTUVSQV9aT09NX1NURVBTX01FRElVTSwgdGhpcy5jb25maWcuQ0FNRVJBX0RFRkFVTFRfWk9PTSk7XG5cdFx0fVxuXHR9XG5cblx0Y2hhbmdlWm9vbShjYW1lcmEsIHN0ZXBzLCB6b29tKSB7XG5cdFx0aWYoY2FtZXJhLnpvb20gIT0gem9vbSkge1xuXHRcdFx0Y2xlYXJUaW1lb3V0KHRoaXMuY2FtZXJhWm9vbVRpbWVyKTtcblx0XHRcdHRoaXMucmVjdXJzaXZlWm9vbShjYW1lcmEsIHRoaXMuY29uZmlnLkNBTUVSQV9aT09NX1NQRUVELCB6b29tLCAoem9vbSAtIGNhbWVyYS56b29tKSAvIHN0ZXBzKTtcblx0XHR9XG5cdH1cblxuXHRyZWN1cnNpdmVab29tKGNhbWVyYSwgc3BlZWQsIHpvb20sIGRpZikge1xuXHRcdGxldCBzZWxmID0gdGhpcztcblx0XHRpZihkaWYgPD0gMCAmJiB6b29tIC0gY2FtZXJhLnpvb20gPj0gMCkge1xuXHRcdFx0Y2FtZXJhLnpvb20gPSB6b29tO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRlbHNlIGlmKGRpZiA+IDAgJiYgem9vbSAtIGNhbWVyYS56b29tIDw9IDApIHtcblx0XHRcdGNhbWVyYS56b29tID0gem9vbTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHRjYW1lcmEuem9vbSArPSBkaWY7XG5cdFx0XHR0aGlzLmNhbWVyYVpvb21UaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHNlbGYucmVjdXJzaXZlWm9vbShjYW1lcmEsIHNwZWVkLCB6b29tLCBkaWYpOyB9LCBzcGVlZCk7XG5cdFx0fVxuXHR9XG5cblx0c2hha2VDYW1lcmEoY2FtZXJhLCBzaGFrZUFtb3VudCkge1xuXHRcdGNsZWFyVGltZW91dCh0aGlzLmNhbWVyYVNoYWtlVGltZXIpO1xuXHRcdHRoaXMuc2hha2VDYW1lcmFIZWxwZXIoY2FtZXJhLCByYW5kb20oMiAqIE1hdGguUEkpLCBzaGFrZUFtb3VudCk7XG5cdH1cblxuXHRzaGFrZUNhbWVyYUhlbHBlcihjYW1lcmEsIGFuZ2xlLCBzaGFrZUFtb3VudCkge1xuXHRcdGxldCBzZWxmID0gdGhpcztcblx0XHRpZihzaGFrZUFtb3VudCA+IDIpIHtcblx0XHRcdC8vIGNhbWVyYS5zaGFrZU9mZnNldFggPSAoKHN0ZXAgJSAyID09IDApID8gLTEgOiAxKSAqIChyYW5kb21JbnQoc2hha2VBbW91bnQgLSAuMSwgc2hha2VBbW91bnQpICogc3RlcCAvIDUpO1xuXHRcdFx0Ly8gY2FtZXJhLnNoYWtlT2Zmc2V0WSA9ICgoc3RlcCAlIDIgPT0gMCkgPyAtMSA6IDEpICogKHJhbmRvbUludChzaGFrZUFtb3VudCAtIC4xLCBzaGFrZUFtb3VudCkgKiBzdGVwIC8gNSk7XG5cdFx0XHRjYW1lcmEuc2hha2VPZmZzZXRYID0gc2hha2VBbW91bnQgKiBNYXRoLmNvcyhhbmdsZSk7XG5cdFx0XHRjYW1lcmEuc2hha2VPZmZzZXRZID0gc2hha2VBbW91bnQgKiBNYXRoLnNpbihhbmdsZSk7XG5cdFx0XHRhbmdsZSArPSByYW5kb20oTWF0aC5QSSAqIC44LCBNYXRoLlBJICogMS4yKTtcblx0XHRcdGlmKGFuZ2xlID4gKDIgKiBNYXRoLlBJKSkge1xuXHRcdFx0XHRhbmdsZSA9IGFuZ2xlIC0gKDIgKiBNYXRoLlBJKTtcblx0XHRcdH1cblx0XHRcdHRoaXMuY2FtZXJhU2hha2VUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHNlbGYuc2hha2VDYW1lcmFIZWxwZXIoY2FtZXJhLCBhbmdsZSwgc2hha2VBbW91bnQgKiAuOCk7IH0sIHRoaXMuY29uZmlnLkNBTUVSQV9TSEFLRV9TUEVFRCk7XG5cdFx0fVxuXHRcdGVsc2V7XG5cdFx0XHRjYW1lcmEuc2hha2VPZmZzZXRYID0gMDtcblx0XHRcdGNhbWVyYS5zaGFrZU9mZnNldFkgPSAwO1xuXHRcdFx0dGhpcy5jYW1lcmFTaGFrZVRpbWVyID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXG5cdHJlc2l6ZSgpIHtcblx0XHRsZXQgdyA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtcblx0XHRsZXQgaCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ7XG5cdFx0cmVzaXplQ2FudmFzKHcsIGgpO1xuXHRcdHdpZHRoID0gdztcblx0XHRoZWlnaHQgPSBoO1xuXHRcdHRoaXMuY2VudGVyWCA9IGZsb29yKHcgLyAyKTtcblx0XHR0aGlzLmNlbnRlclkgPSBmbG9vcihoIC8gMik7XG5cdH1cbn1cbiIsImNsYXNzIEVudGl0eVN5c3RlbSBleHRlbmRzIEdhbWVTeXN0ZW0ge1xuXG5cdGNvbnN0cnVjdG9yKGNvbmZpZywgcGxheWVyX2RhdGEsIGVudGl0eV9kYXRhLCBib3NzX2RhdGEpIHtcblx0XHRzdXBlcihbY29tcG9uZW50X2FjdGlvbnNdKTtcblxuXHRcdHRoaXMuY29uZmlnID0gY29uZmlnO1xuXHRcdHRoaXMucGxheWVyRGF0YSA9IHBsYXllcl9kYXRhO1xuXHRcdHRoaXMuZW50aXR5RGF0YSA9IGVudGl0eV9kYXRhO1xuXHRcdHRoaXMuYm9zc0RhdGEgPSBib3NzX2RhdGE7XG5cdH1cblxuXHRoYW5kbGVFdmVudChlbmdpbmUsIGV2ZW50SUQsIGRhdGEpIHtcblx0XHRzd2l0Y2goZXZlbnRJRCkge1xuXHRcdFx0Y2FzZSBldmVudF9uZXdfcGxheWVyOlxuXHRcdFx0XHR0aGlzLmdlbmVyYXRlUGxheWVyKGVuZ2luZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9sZXZlbF9nZW5lcmF0ZWQ6XG5cdFx0XHRcdGZvcihsZXQgSUQgaW4gdGhpcy5lbnRpdGllcykge1xuXHRcdFx0XHRcdGlmKGNvbXBvbmVudF9jb250cm9sbGVyIGluIHRoaXMuZW50aXRpZXNbSURdKSB7XG5cdFx0XHRcdFx0XHR0aGlzLmVudGl0aWVzW0lEXVtjb21wb25lbnRfcG9zaXRpb25dLnggPSBkYXRhLmxldmVsT3JpZ2luLng7XG5cdFx0XHRcdFx0XHR0aGlzLmVudGl0aWVzW0lEXVtjb21wb25lbnRfcG9zaXRpb25dLnkgPSBkYXRhLmxldmVsT3JpZ2luLnk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9zcGF3bl9lbmVteV9jbG9zZTpcblx0XHRcdFx0dGhpcy5nZW5lcmF0ZUVuZW15KGVuZ2luZSwgZW5naW5lLmdldFBsYXllcigpLnBvc2l0aW9uLnggLSByYW5kb21JbnQoLTQsIDQpLCBlbmdpbmUuZ2V0UGxheWVyKCkucG9zaXRpb24ueSAtIHJhbmRvbUludCgyLCA0KSwgZW5naW5lLmdldERlcHRoKCksIHRoaXMuZW50aXR5RGF0YVtyYW5kb20oT2JqZWN0LmtleXModGhpcy5lbnRpdHlEYXRhKSldKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0Z2VuZXJhdGVQbGF5ZXIoZW5naW5lKSB7XG5cdFx0bGV0IHBsYXllckNsYXNzID0gY2xhc3Nfd2Fycmlvcjtcblx0XHRsZXQgY29uZmlnID0gdGhpcy5wbGF5ZXJEYXRhW3BsYXllckNsYXNzXTtcblx0XHRsZXQgYW5pbWF0aW9ucyA9IFV0aWxpdHkuY29udmVydEFuaW1hdGlvbnNGcm9tQ29uZmlnKGNvbmZpZy5hbmltYXRpb25zKTtcblx0XHRsZXQgcGxheWVyID0gUGxheWVyVGVtcGxhdGUoLTEsIC0xLCAwLCAxLCBjb25maWcuaGVhbHRoLCBjb25maWcuYXR0YWNrRGFtYWdlLCBjb25maWcubWFnaWNEYW1hZ2UsIGNvbmZpZy5hcm1vciwgY29uZmlnLmFiaWxpdGllcywgYW5pbWF0aW9ucyk7XG5cdFx0ZW5naW5lLmNyZWF0ZUVudGl0eShwbGF5ZXIpO1xuXHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfcGxheWVyX2dlbmVyYXRlZCwge30sIDEpO1xuXHR9XG5cblx0Z2VuZXJhdGVFbnRpdGllcyhlbmdpbmUsIGxldmVsLCBkZXB0aCkge1xuXHRcdGxldCBjb25maWcsIGVudGl0eVBvc2l0aW9uO1xuXHRcdGxldCBudW1FbnRpdGllcyA9IGZsb29yKHJhbmRvbShsZXZlbC5yb29tcy5sZW5ndGggKiAuNzUsIGxldmVsLnJvb21zLmxlbmd0aCAqIDEuNSkpO1xuXHRcdGxldCBlbnRpdGllcyA9IFtdO1xuXG5cdFx0d2hpbGUobnVtRW50aXRpZXMgPiAwKSB7XG5cdFx0XHRjb25maWcgPSB0aGlzLmVudGl0eURhdGFbcmFuZG9tKE9iamVjdC5rZXlzKHRoaXMuZW50aXR5RGF0YSkpXTtcblx0XHRcdGVudGl0eVBvc2l0aW9uID0gdGhpcy5maW5kU2FmZVNwYXduTG9jYXRpb24oY29uZmlnLnNpemUsIGVudGl0aWVzW2RlcHRoXSwgbGV2ZWwuc3RhaXJVcCwgbGV2ZWwubWFwLm1hcCk7XG5cdFx0XHRpZihlbnRpdHlQb3NpdGlvbiAhPSB1bmRlZmluZWQpIHtcblx0XHRcdFx0dGhpcy5nZW5lcmF0ZUVuZW15KGVuZ2luZSwgZW50aXR5UG9zaXRpb24ueCwgZW50aXR5UG9zaXRpb24ueSwgZGVwdGgsIGNvbmZpZyk7XG5cdFx0XHR9XG5cdFx0XHRudW1FbnRpdGllcy0tO1xuXHRcdH1cblx0fVxuXG5cdGdlbmVyYXRlRW5lbXkoZW5naW5lLCB4LCB5LCBkZXB0aCwgY29uZmlnKSB7XG5cdFx0bGV0IGFuaW1hdGlvbnMgPSBVdGlsaXR5LmNvbnZlcnRBbmltYXRpb25zRnJvbUNvbmZpZyhjb25maWcuYW5pbWF0aW9ucyk7XG5cdFx0aWYodGhpcy5zYWZlU3Bhd25Mb2NhdGlvbih4LCB5LCBjb25maWcuc2l6ZSwgZW5naW5lLmdldEVudGl0aWVzKCksIGVuZ2luZS5nZXRNYXAoKSkpIHtcblx0XHRcdGxldCBtb2IgPSBuZXcgTW9iKHgsIHksIGRlcHRoLCBjb25maWcsIGNvbmZpZy5hY3Rpb25zLCBhbmltYXRpb25zKTtcblx0XHRcdGVuZ2luZS5jcmVhdGVFbnRpdHkobW9iKTtcblx0XHR9XG5cdH1cblxuXHRmaW5kU2FmZVNwYXduTG9jYXRpb24oc2l6ZSwgZW50aXRpZXMsIHN0YWlyVXAsIG1hcCkge1xuXHRcdGxldCB2YWxpZFNxdWFyZXMgPSBbXTtcblx0XHRmb3IobGV0IGkgPSAwOyBpIDwgbWFwLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRmb3IobGV0IGogPSAwOyBqIDwgbWFwWzBdLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGlmKChhYnMoc3RhaXJVcC54IC0gaSkgKyBhYnMoc3RhaXJVcC55IC0gaikpID4gdGhpcy5jb25maWcuU0FGRV9ESVNUQU5DRV9GUk9NX1BMQVlFUiAmJiB0aGlzLnNhZmVTcGF3bkxvY2F0aW9uKGksIGosIHNpemUsIGVudGl0aWVzLCBtYXApKSB7XG5cdFx0XHRcdFx0dmFsaWRTcXVhcmVzLnB1c2gobWFwW2ldW2pdLnBvc2l0aW9uKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gcmFuZG9tKHZhbGlkU3F1YXJlcyk7XG5cdH1cblxuXHRzYWZlU3Bhd25Mb2NhdGlvbih4LCB5LCBzaXplLCBlbnRpdGllcywgbWFwKSB7XG5cdFx0Zm9yKGxldCBpID0geDsgaSA8IHggKyBzaXplOyBpKyspIHtcblx0XHRcdGZvcihsZXQgaiA9IHk7IGogPCB5ICsgc2l6ZTsgaisrKSB7XG5cdFx0XHRcdGlmKG1hcFtpXVtqXS5jb21wb25lbnRzLmluY2x1ZGVzKGNvbXBvbmVudF9jb2xsaXNpb24pKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGxldCBjb2wgPSBuZXcgQ29sbGlzaW9uQ29tcG9uZW50KHgsIHksIHNpemUpO1xuXHRcdGlmKGVudGl0aWVzICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdGZvcihsZXQgZSBvZiBlbnRpdGllcykge1xuXHRcdFx0XHRpZihVdGlsaXR5LmNvbGxpc2lvbihjb2wsIGUuY29sbGlzaW9uKSkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGdlbmVyYXRlQm9zc2VzKGVuZ2luZSwgZW50aXRpZXMsIGxldmVscywgYm9zc0RhdGEsIGRlcHRoLCBwbGF5ZXIpIHtcblx0XHRsZXQgY29uZmlnLCBlbnRpdHlQb3NpdGlvbjtcblx0XHRsZXQgbnVtQm9zc2VzID0gMTtcblx0XHRlbnRpdGllcy5wdXNoKFtdKTtcblxuXHRcdHdoaWxlKG51bUJvc3NlcyA+IDApIHtcblx0XHRcdGNvbmZpZyA9IGJvc3NEYXRhW3JhbmRvbShPYmplY3Qua2V5cyhib3NzRGF0YSkpXTtcblx0XHRcdGVudGl0eVBvc2l0aW9uID0gdGhpcy5maW5kU2FmZVNwYXduTG9jYXRpb24oY29uZmlnLnNpemUsIGVudGl0aWVzW2RlcHRoXSwgcGxheWVyLCBsZXZlbHNbZGVwdGhdLm1hcC5tYXApO1xuXHRcdFx0aWYoZW50aXR5UG9zaXRpb24gIT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdHRoaXMuZ2VuZXJhdGVFbmVteShlbmdpbmUsIGVudGl0eVBvc2l0aW9uLngsIGVudGl0eVBvc2l0aW9uLnksIGRlcHRoLCBjb25maWcpO1xuXHRcdFx0fVxuXHRcdFx0bnVtRW50aXRpZXMtLTtcblx0XHR9XG5cdH1cblxuXHR1cGRhdGVFbnRpdGllcyhlbmdpbmUpIHtcblx0XHQvLyBmb3IobGV0IGUgb2YgdGhpcy5lbnRpdGllc1tlbmdpbmUuZ2V0RGVwdGgoKV0pIHtcblx0XHQvLyBcdGVuZ2luZS5jcmVhdGVFbnRpdHkoZSk7XG5cdFx0Ly8gfVxuXHRcdC8vIGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfZW50aXRpZXNfbG9hZGVkLCAwLCAxKTtcblx0fVxufVxuIiwiY2xhc3MgSGVhbHRoU3lzdGVtIGV4dGVuZHMgR2FtZVN5c3RlbSB7XG5cblx0Y29uc3RydWN0b3IoY29uZmlnKSB7XG5cdFx0c3VwZXIoW2NvbXBvbmVudF9oZWFsdGhdKTtcblx0XHR0aGlzLmNvbmZpZyA9IGNvbmZpZztcblx0fVxuXG5cdGluaXQoZW5naW5lKSB7XG5cdFx0dGhpcy5oZWFsdGhSZWdlbkNvdW50ZXIgPSAwO1xuXHRcdHRoaXMuaGVhbHRoUmVnZW4gPSB0cnVlO1xuXHR9XG5cblx0cnVuKGVuZ2luZSkge1xuXHRcdGlmKHRoaXMuaGVhbHRoUmVnZW4pIHtcblx0XHRcdGlmKHRoaXMuaGVhbHRoUmVnZW5Db3VudGVyICUgdGhpcy5jb25maWcuSEVBTFRIX1JFR0VOX1RJTUVSID09IDApIHtcblx0XHRcdFx0Zm9yKGxldCBvIG9mIHRoaXMub2JqZWN0cykge1xuXHRcdFx0XHRcdGlmKG8uaGVhbHRoLmhlYWx0aCA8IG8uaGVhbHRoLm1heEhlYWx0aCkge1xuXHRcdFx0XHRcdFx0by5oZWFsdGguaGVhbHRoICs9IDI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuaGVhbHRoUmVnZW5Db3VudGVyID0gMTtcblx0XHRcdH1cblx0XHRcdHRoaXMuaGVhbHRoUmVnZW5Db3VudGVyKys7XG5cdFx0fVxuXHR9XG5cblx0aGFuZGxlRXZlbnQoZW5naW5lLCBldmVudElELCBkYXRhKSB7XG5cdFx0c3dpdGNoKGV2ZW50SUQpIHtcblx0XHRcdGNhc2UgZXZlbnRfZW50aXR5X3Rha2VfZGFtYWdlOlxuXHRcdFx0XHR0aGlzLmFwcGx5RGFtYWdlKGVuZ2luZSwgZGF0YS5lbnRpdHksIGRhdGEuaGVhbHRoTG9zdCk7XG5cdFx0XHRcdGlmKGRhdGEuZW50aXR5IGluc3RhbmNlb2YgUGxheWVyKSB7XG5cdFx0XHRcdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9wbGF5ZXJfdGFrZV9kYW1hZ2UpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9iZWdpbl9jb21iYXQ6XG5cdFx0XHRcdHRoaXMuaGVhbHRoUmVnZW4gPSBmYWxzZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGV2ZW50X2VuZF9jb21iYXQ6XG5cdFx0XHRcdHRoaXMuaGVhbHRoUmVnZW4gPSB0cnVlO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHRhcHBseURhbWFnZShlbmdpbmUsIG9iamVjdCwgaGVhbHRoTG9zdCkge1xuXHRcdG9iamVjdC5oZWFsdGguaGVhbHRoIC09IGhlYWx0aExvc3Q7XG5cdFx0dGhpcy5jaGVja0RlYWQoZW5naW5lLCBvYmplY3QpO1xuXHR9XG5cblx0Y2hlY2tEZWFkKGVuZ2luZSwgb2JqZWN0KSB7XG5cdFx0aWYob2JqZWN0LmhlYWx0aC5oZWFsdGggPD0gMCkge1xuXHRcdFx0ZW5naW5lLnJlbW92ZU9iamVjdChvYmplY3QpO1xuXHRcdFx0aWYob2JqZWN0IGluc3RhbmNlb2YgUGxheWVyKSB7XG5cdFx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfZ2FtZV9vdmVyKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuIiwiY2xhc3MgSW5wdXRTeXN0ZW0gZXh0ZW5kcyBHYW1lU3lzdGVtIHtcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRzdXBlcihbY29tcG9uZW50X2NvbnRyb2xsZXJdKTtcblx0fVxuXG5cdGluaXQoZW5naW5lKSB7XG5cdFx0dGhpcy5tb2JTcGF3bkNvb2xkb3duID0gMDtcblx0XHR0aGlzLmlucHV0cyA9IFtdO1xuXG5cdFx0bGV0IHNlbGYgPSB0aGlzO1xuXHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRzZWxmLmtleURvd24oZSk7XG5cdFx0fSk7XG5cblx0XHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgZnVuY3Rpb24gKGUpIHtcblx0XHRcdHNlbGYua2V5VXAoZSk7XG5cdFx0fSk7XG5cdH1cblxuXHRydW4oZW5naW5lKSB7XG5cdFx0Zm9yKGxldCBJRCBpbiB0aGlzLmVudGl0aWVzKSB7XG5cdFx0XHRjb25zb2xlLmxvZyh0aGlzLmVudGl0aWVzW0lEXSk7XG5cdFx0XHR0aGlzLnNldEFjdGlvbihlbmdpbmUsIHRoaXMuZW50aXRpZXNbSURdLCB0aGlzLmlucHV0cyk7XG5cdFx0fVxuXHR9XG5cblx0YWRkT2JqZWN0KG9iamVjdCkgeyB9XG5cblx0a2V5RG93bihldmVudCkge1xuXHRcdGlmKCF0aGlzLmlucHV0cy5pbmNsdWRlcyhldmVudC5rZXlDb2RlKSkge1xuXHRcdFx0dGhpcy5pbnB1dHMudW5zaGlmdChldmVudC5rZXlDb2RlKTtcblx0XHR9XG5cdH1cblxuXHRrZXlVcChldmVudCkge1xuXHRcdGlmKHRoaXMuaW5wdXRzLmluY2x1ZGVzKGV2ZW50LmtleUNvZGUpKSB7XG5cdFx0XHR0aGlzLmlucHV0cy5zcGxpY2UodGhpcy5pbnB1dHMuaW5kZXhPZihldmVudC5rZXlDb2RlKSwgMSk7XG5cdFx0fVxuXHR9XG5cblx0c2V0QWN0aW9uKGVuZ2luZSwgZW50aXR5LCBpbnB1dHMpIHtcblx0XHRpZihpbnB1dHMubGVuZ3RoID4gMCkge1xuXHRcdFx0bGV0IGhpZ2hlc3RQcmlvcml0eSA9IDA7XG5cdFx0XHRsZXQgcGxheWVyQWN0aW9uID0gYWN0aW9uX25vbmU7XG5cdFx0XHRmb3IobGV0IGtleSBvZiBpbnB1dHMpIHtcblx0XHRcdFx0bGV0IGFjdGlvbiA9IGtleUNvZGVfdG9fYWN0aW9uW2tleV07XG5cdFx0XHRcdGxldCBwcmlvcml0eSA9IGFjdGlvbl90b19wcmlvcml0eVthY3Rpb25dO1xuXHRcdFx0XHRwcmlvcml0eSA9IHRoaXMuZml4UHJpb3JpdHkoZW5naW5lLCBlbnRpdHksIGFjdGlvbiwgcHJpb3JpdHkpO1xuXHRcdFx0XHRpZihwcmlvcml0eSA+IGhpZ2hlc3RQcmlvcml0eSAmJiBlbnRpdHlbY29tcG9uZW50X2FjdGlvbnNdLmFjdGlvbnNbYWN0aW9uXS5jdXJyZW50Q29vbGRvd24gPT0gMCkge1xuXHRcdFx0XHRcdHBsYXllckFjdGlvbiA9IGFjdGlvbjtcblx0XHRcdFx0XHRoaWdoZXN0UHJpb3JpdHkgPSBwcmlvcml0eTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0ZW50aXR5W2NvbXBvbmVudF9hY3Rpb25zXS5uZXh0QWN0aW9uID0gcGxheWVyQWN0aW9uO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdGVudGl0eVtjb21wb25lbnRfYWN0aW9uc10ubmV4dEFjdGlvbiA9IGFjdGlvbl9ub25lO1xuXHRcdH1cblx0fVxuXG5cdGZpeFByaW9yaXR5KGVuZ2luZSwgZW50aXR5LCBhY3Rpb24sIHByaW9yaXR5KSB7XG5cdFx0aWYoZW50aXR5W2NvbXBvbmVudF9hY3Rpb25zXS5sYXN0QWN0aW9uID09IGFjdGlvbikge1xuXHRcdFx0aWYoZW50aXR5W2NvbXBvbmVudF9hY3Rpb25zXS5sYXN0QWN0aW9uRmFpbGVkKSB7XG5cdFx0XHRcdHJldHVybiAwO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdHJldHVybiBwcmlvcml0eSAtIC4xO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gcHJpb3JpdHk7XG5cdH1cblxuXG5cdGFjdGlvbkVxdWFsc0xhc3RBY3Rpb24ocGxheWVyLCBhKSB7XG5cdFx0cmV0dXJuIGs7XG5cdH1cbn1cbiIsImNsYXNzIExldmVsU3lzdGVtIGV4dGVuZHMgR2FtZVN5c3RlbSB7XG5cblx0Ly9IQU5ETEUgTEVWRUwgRVZFTlRTIExJS0UgRE9PUlMsIENIRVNUUywgU1RBSVJTLCBJTlRFUkFDVEFCTEVTXG5cblx0Y29uc3RydWN0b3IoY29uZmlnLCByb29tX3Bvb2wsIHN0YWlyX3Jvb21fcG9vbCkge1xuXHRcdHN1cGVyKFtdKTtcblx0XHR0aGlzLmNvbmZpZyA9IGNvbmZpZztcblx0XHR0aGlzLnJvb21Qb29sID0gcm9vbV9wb29sO1xuXHRcdHRoaXMuc3RhaXJSb29tUG9vbCA9IHN0YWlyX3Jvb21fcG9vbDtcblx0fVxuXG5cdGhhbmRsZUV2ZW50KGVuZ2luZSwgZXZlbnRJRCwgZGF0YSkge1xuXHRcdHN3aXRjaChldmVudElEKSB7XG5cdFx0XHRjYXNlIGV2ZW50X25ld19sZXZlbDpcblx0XHRcdFx0bGV0IGxldmVsT3JpZ2luID0gdGhpcy5nZW5lcmF0ZUxldmVsKGVuZ2luZSwgZGF0YS5kZXB0aCk7XG5cdFx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfbGV2ZWxfZ2VuZXJhdGVkLCB7bGV2ZWxPcmlnaW46IGxldmVsT3JpZ2lufSwgMSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdGdlbmVyYXRlTGV2ZWwoZW5naW5lLCBkZXB0aCkge1xuXHRcdGxldCBsZXZlbCA9IGdlbmVyYXRlTGV2ZWwodGhpcy5jb25maWcsIGRlcHRoLCB0aGlzLnJvb21Qb29sLCB0aGlzLnN0YWlyUm9vbVBvb2wpO1xuXHRcdGZvcihsZXQgcm93IG9mIGxldmVsLnNxdWFyZXMpIHtcblx0XHRcdGZvcihsZXQgc3F1YXJlIG9mIHJvdykge1xuXHRcdFx0XHRlbmdpbmUuY3JlYXRlRW50aXR5KHNxdWFyZSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBsZXZlbC5sZXZlbF9vcmlnaW47XG5cdH1cblxufVxuIiwiY2xhc3MgTGlnaHRTeXN0ZW0gZXh0ZW5kcyBHYW1lU3lzdGVtIHtcblxuXHRjb25zdHJ1Y3Rvcihjb25maWcpIHtcblx0XHRzdXBlcihbY29tcG9uZW50X2xpZ2h0X2VtaXR0ZXJdKTtcblx0XHR0aGlzLmNvbmZpZyA9IGNvbmZpZztcblx0fVxuXG5cdHJ1bihlbmdpbmUpIHsgfVxuXG5cdGhhbmRsZUV2ZW50KGVuZ2luZSwgZXZlbnRJRCwgZGF0YSkge1xuXHRcdHN3aXRjaCAoZXZlbnRJRCkge1xuXHRcdFx0Y2FzZSBldmVudF9zcGF3bl9lbmVteV9jbG9zZTpcblx0XHRcdFx0dGhpcy5saWdodChlbmdpbmUuZ2V0TWFwKCkpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfcGxheWVyX21vdmVkOlxuXHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHRoaXMubGlnaHQoZW5naW5lLmdldE1hcCgpKTtcblx0XHRcdFx0fS5iaW5kKHRoaXMpLCA1MCk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9iZWdpbl9sZXZlbDpcblx0XHRcdFx0dGhpcy5saWdodChlbmdpbmUuZ2V0TWFwKCkpO1xuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHRnZW5lcmF0ZVRvcmNoZXMoZW5naW5lLCBsZXZlbCwgcm9vbXMpIHtcblx0XHRpZihET19MRVZFTF9HRU4pIHtcblx0XHRcdGZvcihsZXQgcm9vbSBvZiByb29tcykge1xuXHRcdFx0XHRpZihyb29tLndpZHRoID49IDUgJiYgcm9vbS5oZWlnaHQgPj0gNSkge1xuXHRcdFx0XHRcdGxldCB0b3JjaENoYW5jZSA9IHRoaXMuY29uZmlnLlJPT01fVE9SQ0hfQ0hBTkNFO1xuXHRcdFx0XHRcdGxldCBmdWxsV2FsbHMgPSBbXTtcblx0XHRcdFx0XHR3aGlsZShyYW5kb20oKSA8IHRvcmNoQ2hhbmNlICYmIGZ1bGxXYWxscy5sZW5ndGggPCAzKSB7XG5cdFx0XHRcdFx0XHRsZXQgZGlyID0gcmFuZG9tSW50KDQpO1xuXHRcdFx0XHRcdFx0d2hpbGUoZnVsbFdhbGxzLmluY2x1ZGVzKGRpcikpIHtcblx0XHRcdFx0XHRcdFx0ZGlyID0gcmFuZG9tSW50KDQpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0ZnVsbFdhbGxzLnB1c2goZGlyKTtcblx0XHRcdFx0XHRcdGxldCB4ID0gMCwgeSA9IDA7XG5cdFx0XHRcdFx0XHRzd2l0Y2goZGlyKSB7XG5cdFx0XHRcdFx0XHRcdGNhc2UgZGlyZWN0aW9uX3VwOlxuXHRcdFx0XHRcdFx0XHRcdHggPSByb29tLmxlZnQgKyByYW5kb21JbnQoMiwgcm9vbS53aWR0aCAtIDIpO1xuXHRcdFx0XHRcdFx0XHRcdHkgPSByb29tLnRvcDtcblx0XHRcdFx0XHRcdFx0XHRkaXIgPSBkaXJlY3Rpb25fZG93bjtcblx0XHRcdFx0XHRcdFx0XHRpZihsZXZlbFt4XVtyb29tLnRvcCAtIDFdIGluc3RhbmNlb2YgRG9vclNxdWFyZSkgeyBjb250aW51ZTsgfVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRjYXNlIGRpcmVjdGlvbl9yaWdodDpcblx0XHRcdFx0XHRcdFx0XHR4ID0gcm9vbS5yaWdodCAtIDE7XG5cdFx0XHRcdFx0XHRcdFx0eSA9IHJvb20udG9wICsgcmFuZG9tSW50KDIsIHJvb20uaGVpZ2h0IC0gMik7XG5cdFx0XHRcdFx0XHRcdFx0ZGlyID0gZGlyZWN0aW9uX2xlZnQ7XG5cdFx0XHRcdFx0XHRcdFx0aWYobGV2ZWxbcm9vbS5yaWdodF1beV0gaW5zdGFuY2VvZiBEb29yU3F1YXJlKSB7IGNvbnRpbnVlOyB9XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdGNhc2UgZGlyZWN0aW9uX2Rvd246XG5cdFx0XHRcdFx0XHRcdFx0eCA9IHJvb20ubGVmdCArIHJhbmRvbUludCgyLCByb29tLndpZHRoIC0gMik7XG5cdFx0XHRcdFx0XHRcdFx0eSA9IHJvb20uYm90dG9tIC0gMTtcblx0XHRcdFx0XHRcdFx0XHRkaXIgPSBkaXJlY3Rpb25fdXA7XG5cdFx0XHRcdFx0XHRcdFx0aWYobGV2ZWxbeF1bcm9vbS5ib3R0b21dIGluc3RhbmNlb2YgRG9vclNxdWFyZSkgeyBjb250aW51ZTsgfVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRjYXNlIGRpcmVjdGlvbl9sZWZ0OlxuXHRcdFx0XHRcdFx0XHRcdHggPSByb29tLmxlZnQ7XG5cdFx0XHRcdFx0XHRcdFx0eSA9IHJvb20udG9wICsgcmFuZG9tSW50KDIsIHJvb20uaGVpZ2h0IC0gMik7XG5cdFx0XHRcdFx0XHRcdFx0ZGlyID0gZGlyZWN0aW9uX3JpZ2h0O1xuXHRcdFx0XHRcdFx0XHRcdGlmKGxldmVsW3Jvb20ubGVmdCAtIDFdW3ldIGluc3RhbmNlb2YgRG9vclNxdWFyZSkgeyBjb250aW51ZTsgfVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRlbmdpbmUuYWRkT2JqZWN0KG5ldyBUb3JjaCh4LCB5LCBkaXIsIGVuZ2luZS5nZXREZXB0aCgpKSk7XG5cdFx0XHRcdFx0XHR0b3JjaENoYW5jZSAtPSB0aGlzLmNvbmZpZy5DSEFOQ0VfQURESVRJT05BTF9UT1JDSDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRsaWdodChtYXApIHtcblx0XHRmb3IobGV0IHIgb2YgbWFwKSB7XG5cdFx0XHRmb3IobGV0IHMgb2Ygcikge1xuXHRcdFx0XHRzLmxpZ2h0LmxldmVsID0gMDtcblx0XHRcdH1cblx0XHR9XG5cdFx0Zm9yKGxldCBsIG9mIHRoaXMub2JqZWN0cykge1xuXHRcdFx0dGhpcy5zZXRMaWdodExldmVsKG1hcFtsLnBvc2l0aW9uLnhdW2wucG9zaXRpb24ueV0sIGwubGlnaHRFbWl0dGVyLmxldmVsKTtcblx0XHRcdGZvcihsZXQgb2N0YW50ID0gMDsgb2N0YW50IDwgODsgb2N0YW50KyspIHtcblx0XHRcdFx0dGhpcy5saWdodFRyaWFuZ2xlKG1hcCwgb2N0YW50LCBsLnBvc2l0aW9uLngsIGwucG9zaXRpb24ueSwgbC5saWdodEVtaXR0ZXIubGV2ZWwpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHNldExpZ2h0TGV2ZWwob2JqZWN0LCByYW5nZSwgeCwgeSkge1xuXHRcdGxldCBsID0gKHggPT09IHVuZGVmaW5lZCkgPyByYW5nZSA6IHJhbmdlIC0geCAtIGZsb29yKHkgKiAuNCk7XG5cdFx0aWYob2JqZWN0LmxpZ2h0LmxldmVsIDwgbCkge1xuXHRcdFx0b2JqZWN0LmxpZ2h0LmxldmVsID0gbDtcblx0XHR9XG5cdH1cblxuXHRsaWdodFRyaWFuZ2xlKG1hcCwgb2N0YW50LCBzeCwgc3ksIHJhbmdlKSB7XG5cdFx0bGV0IHggPSAxO1xuXHRcdGxldCBzaGFkb3dzID0gW107XG5cdFx0bGV0IHNxdWFyZXNWaXNpYmxlID0gdHJ1ZTtcblxuXHRcdHdoaWxlICh4IDw9IHJhbmdlICYmIHNxdWFyZXNWaXNpYmxlKSB7XG5cdFx0XHRzcXVhcmVzVmlzaWJsZSA9IGZhbHNlO1xuXHRcdFx0bGV0IHkgPSAwO1xuXHRcdFx0bGV0IGN1cnNsb3BlID0gMDtcblx0XHRcdHdoaWxlKGN1cnNsb3BlIDw9IDEpIHtcblx0XHRcdFx0aWYoIVZpc2lvblN5c3RlbS5pblNoYWRvdyh4LCB5LCBzaGFkb3dzKSkge1xuXHRcdFx0XHRcdHNxdWFyZXNWaXNpYmxlID0gdHJ1ZTtcblx0XHRcdFx0XHRsZXQgY3VyID0gVmlzaW9uU3lzdGVtLmdldFRyYW5zbGF0ZWRTcXVhcmUobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSk7XG5cdFx0XHRcdFx0aWYoY3VyID09PSB1bmRlZmluZWQpIHsgYnJlYWs7IH1cblx0XHRcdFx0XHR0aGlzLnNldExpZ2h0TGV2ZWwoY3VyLCByYW5nZSwgeCwgeSk7XG5cdFx0XHRcdFx0aWYoY3VyLmRpc3BsYXkub3BhcXVlKSB7XG5cdFx0XHRcdFx0XHRsZXQgZmlyc3RCbG9ja2VkID0gdGhpcy5nZXRGaXJzdEJsb2NrZWRMaWdodChtYXAsIG9jdGFudCwgeCwgeSwgc3gsIHN5LCBzaGFkb3dzLCByYW5nZSk7XG5cdFx0XHRcdFx0XHRsZXQgbGFzdEJsb2NrZWQgPSB0aGlzLmdldEJsb2NrZWRMaWdodChtYXAsIG9jdGFudCwgeCwgeSwgc3gsIHN5LCBzaGFkb3dzLCByYW5nZSk7XG5cdFx0XHRcdFx0XHRsZXQgc2hhZG93U3RhcnQgPSBWaXNpb25TeXN0ZW0uc2xvcGUoZmlyc3RCbG9ja2VkLngsIGZpcnN0QmxvY2tlZC55LCBCT1RUT01fUklHSFQpO1xuXHRcdFx0XHRcdFx0bGV0IHNoYWRvd0VuZCA9IFZpc2lvblN5c3RlbS5zbG9wZShsYXN0QmxvY2tlZC54LCBsYXN0QmxvY2tlZC55LCBUT1BfTEVGVCk7XG5cdFx0XHRcdFx0XHRzaGFkb3dzLnB1c2goW3NoYWRvd1N0YXJ0LCBzaGFkb3dFbmRdKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZXtcblx0XHRcdFx0XHRcdGxldCBhYm92ZSA9IFZpc2lvblN5c3RlbS5nZXRUcmFuc2xhdGVkU3F1YXJlKG1hcCwgb2N0YW50LCB4LCB5ICsgMSwgc3gsIHN5KTtcblx0XHRcdFx0XHRcdGlmKGFib3ZlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRcdC8vIGFib3ZlLmRpc3BsYXkuZGlzY292ZXJlZCA9IHRoaXMuY29uZmlnLkRJU0NPVkVSRURfTUFYO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHR5Kys7XG5cdFx0XHRcdGN1cnNsb3BlID0gVmlzaW9uU3lzdGVtLnNsb3BlKHgsIHksIENFTlRFUl9TUVVBUkUpO1xuXHRcdFx0fVxuXHRcdFx0eCsrO1xuXHRcdH1cblx0fVxuXG5cdGdldEZpcnN0QmxvY2tlZExpZ2h0KG1hcCwgb2N0YW50LCB4LCB5LCBzeCwgc3ksIHNoYWRvd3MsIHJhbmdlKSB7XG5cdFx0bGV0IGZpcnN0QmxvY2tlZCA9IHt4OngsIHk6eX07XG5cblx0XHRsZXQgY3VycmVudEJsb2NrZWQgPSBWaXNpb25TeXN0ZW0uZ2V0VHJhbnNsYXRlZFNxdWFyZShtYXAsIG9jdGFudCwgeCwgeSwgc3gsIHN5KTtcblxuXHRcdHdoaWxlKGN1cnJlbnRCbG9ja2VkICE9PSB1bmRlZmluZWQgJiYgY3VycmVudEJsb2NrZWQuZGlzcGxheS5vcGFxdWUgJiYgVmlzaW9uU3lzdGVtLnNsb3BlKHgsIHksIENFTlRFUl9TUVVBUkUpID4gMCkge1xuXHRcdFx0Zmlyc3RCbG9ja2VkID0ge3g6eCwgeTp5fTtcblx0XHRcdGlmKCFWaXNpb25TeXN0ZW0uaW5TaGFkb3coeCwgeSwgc2hhZG93cykpIHtcblx0XHRcdFx0dGhpcy5zZXRMaWdodExldmVsKGN1cnJlbnRCbG9ja2VkLCByYW5nZSwgeCwgeSk7XG5cdFx0XHR9XG5cblx0XHRcdHktLTtcblx0XHRcdGN1cnJlbnRCbG9ja2VkID0gVmlzaW9uU3lzdGVtLmdldFRyYW5zbGF0ZWRTcXVhcmUobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSk7XG5cdFx0fVxuXHRcdHJldHVybiBmaXJzdEJsb2NrZWQ7XG5cdH1cblxuXHRnZXRCbG9ja2VkTGlnaHQobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSwgc2hhZG93cywgcmFuZ2UpIHtcblx0XHRsZXQgbGFzdEJsb2NrZWQgPSB7eDp4LCB5Onl9O1xuXG5cdFx0bGV0IGN1cnJlbnRCbG9ja2VkID0gVmlzaW9uU3lzdGVtLmdldFRyYW5zbGF0ZWRTcXVhcmUobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSk7XG5cblx0XHR3aGlsZShjdXJyZW50QmxvY2tlZCAhPT0gdW5kZWZpbmVkICYmIGN1cnJlbnRCbG9ja2VkLmRpc3BsYXkub3BhcXVlICYmIFZpc2lvblN5c3RlbS5zbG9wZSh4LCB5LCBCT1RUT01fUklHSFQpIDwgMSkge1xuXHRcdFx0bGFzdEJsb2NrZWQgPSB7eDp4LCB5Onl9O1xuXHRcdFx0aWYoIVZpc2lvblN5c3RlbS5pblNoYWRvdyh4LCB5LCBzaGFkb3dzKSkge1xuXHRcdFx0XHR0aGlzLnNldExpZ2h0TGV2ZWwoY3VycmVudEJsb2NrZWQsIHJhbmdlLCB4LCB5KTtcblx0XHRcdH1cblxuXHRcdFx0eSsrO1xuXHRcdFx0Y3VycmVudEJsb2NrZWQgPSBWaXNpb25TeXN0ZW0uZ2V0VHJhbnNsYXRlZFNxdWFyZShtYXAsIG9jdGFudCwgeCwgeSwgc3gsIHN5KTtcblx0XHR9XG5cdFx0cmV0dXJuIGxhc3RCbG9ja2VkO1xuXHR9XG59XG4iLCJjbGFzcyBNb3ZlbWVudFN5c3RlbSBleHRlbmRzIEdhbWVTeXN0ZW0ge1xuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKFtjb21wb25lbnRfcG9zaXRpb24sIGNvbXBvbmVudF9jb2xsaXNpb24sIGNvbXBvbmVudF9hY3Rpb25zXSk7XG5cdH1cblxuXHRpbml0KCkge1xuXHRcdHRoaXMubW92ZW1lbnRGcm96ZW4gPSB0cnVlO1xuXHR9XG5cblx0cnVuKGVuZ2luZSkge1xuXHRcdGlmKCF0aGlzLm1vdmVtZW50RnJvemVuKSB7XG5cdFx0XHRmb3IobGV0IGVudGl0eSBvZiB0aGlzLm9iamVjdHMpIHtcblx0XHRcdFx0c3dpdGNoKGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb24pIHtcblx0XHRcdFx0XHRjYXNlIGFjdGlvbl9tb3ZlX3VwOiBjYXNlIGFjdGlvbl9tb3ZlX3JpZ2h0OiBjYXNlIGFjdGlvbl9tb3ZlX2Rvd246IGNhc2UgYWN0aW9uX21vdmVfbGVmdDpcblx0XHRcdFx0XHRcdHRoaXMubW92ZUZyb21BY3Rpb24oZW5naW5lLCBlbnRpdHksIHRoaXMub2JqZWN0cyk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdGhhbmRsZUV2ZW50KGVuZ2luZSwgZXZlbnRJRCwgZGF0YSkge1xuXHRcdHN3aXRjaChldmVudElEKSB7XG5cdFx0XHRjYXNlIGV2ZW50X2xldmVsX2xvYWRlZDpcblx0XHRcdFx0bGV0IHBsYXllciA9IGVuZ2luZS5nZXRQbGF5ZXIoKTtcblx0XHRcdFx0aWYocGxheWVyLmRlcHRoLmRlcHRoIDw9IGVuZ2luZS5nZXREZXB0aCgpKSB7XG5cdFx0XHRcdFx0dGhpcy5maXhQbGF5ZXJQb3NpdGlvbihwbGF5ZXIsIGRhdGEuc3RhaXJVcCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZihwbGF5ZXIuZGVwdGguZGVwdGggPiBlbmdpbmUuZ2V0RGVwdGgoKSkge1xuXHRcdFx0XHRcdHRoaXMuZml4UGxheWVyUG9zaXRpb24ocGxheWVyLCBkYXRhLnN0YWlyRG93bik7XG5cdFx0XHRcdH1cblx0XHRcdFx0cGxheWVyLmRlcHRoLmRlcHRoID0gZW5naW5lLmdldERlcHRoKCk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF91cF9sZXZlbDogY2FzZSBldmVudF9kb3duX2xldmVsOlxuXHRcdFx0XHR0aGlzLm1vdmVtZW50RnJvemVuID0gdHJ1ZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGV2ZW50X2JlZ2luX2xldmVsOlxuXHRcdFx0XHR0aGlzLm1vdmVtZW50RnJvemVuID0gZmFsc2U7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdGZpeFBsYXllclBvc2l0aW9uKHBsYXllciwgc3RhaXIpIHtcblx0XHRwbGF5ZXIucG9zaXRpb24ueCA9IHN0YWlyLng7XG5cdFx0cGxheWVyLnBvc2l0aW9uLnkgPSBzdGFpci55O1xuXHRcdHBsYXllci5jb2xsaXNpb24udG9wID0gc3RhaXIueTtcblx0XHRwbGF5ZXIuY29sbGlzaW9uLnJpZ2h0ID0gc3RhaXIueCArIHBsYXllci5jb2xsaXNpb24ud2lkdGg7XG5cdFx0cGxheWVyLmNvbGxpc2lvbi5ib3R0b20gPSBzdGFpci55ICsgcGxheWVyLmNvbGxpc2lvbi5oZWlnaHQ7XG5cdFx0cGxheWVyLmNvbGxpc2lvbi5sZWZ0ID0gc3RhaXIueDtcblx0fVxuXG5cdG1vdmUoZW5naW5lLCBlbnRpdHksIG9iamVjdHMsIGRlc3RpbmF0aW9uKSB7XG5cdFx0aWYoZGVzdGluYXRpb24gIT0gdW5kZWZpbmVkICYmIE1vdmVtZW50U3lzdGVtLnZhbGlkTW92ZShlbmdpbmUsIGVudGl0eSwgZGVzdGluYXRpb24pKSB7XG5cdFx0XHRlbnRpdHkuZGlyZWN0aW9uLmRpcmVjdGlvbiA9IGFjdGlvbl90b19kaXJlY3Rpb25bZW50aXR5LmFjdGlvbnMuY3VycmVudEFjdGlvbl07XG5cdFx0XHRlbnRpdHkucG9zaXRpb24ueCA9IGRlc3RpbmF0aW9uLng7XG5cdFx0XHRlbnRpdHkucG9zaXRpb24ueSA9IGRlc3RpbmF0aW9uLnk7XG5cblx0XHRcdGVudGl0eS5jb2xsaXNpb24udG9wID0gZGVzdGluYXRpb24ueTtcblx0XHRcdGVudGl0eS5jb2xsaXNpb24ucmlnaHQgPSBkZXN0aW5hdGlvbi54ICsgZW50aXR5LmNvbGxpc2lvbi53aWR0aDtcblx0XHRcdGVudGl0eS5jb2xsaXNpb24uYm90dG9tID0gZGVzdGluYXRpb24ueSArIGVudGl0eS5jb2xsaXNpb24uaGVpZ2h0O1xuXHRcdFx0ZW50aXR5LmNvbGxpc2lvbi5sZWZ0ID0gZGVzdGluYXRpb24ueDtcblxuXHRcdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9zdWNjZXNzZnVsX2FjdGlvbiwgeydhY3Rpb24nOiBlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uLCAnZW50aXR5JzogZW50aXR5IH0pO1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0ZW50aXR5LmRpcmVjdGlvbi5kaXJlY3Rpb24gPSBhY3Rpb25fdG9fZGlyZWN0aW9uW2VudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb25dO1xuXHRcdFx0ZW50aXR5LmFjdGlvbnMubGFzdEFjdGlvbiA9IGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb247XG5cdFx0XHRlbnRpdHkuYWN0aW9ucy5jdXJyZW50QWN0aW9uID0gYWN0aW9uX25vbmU7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9XG5cblx0bW92ZUZyb21BY3Rpb24oZW5naW5lLCBlbnRpdHksIG9iamVjdHMpIHtcblx0XHRsZXQgZGVzdGluYXRpb24gPSBNb3ZlbWVudFN5c3RlbS5nZXREZXN0aW5hdGlvbihlbnRpdHksIGVudGl0eS5hY3Rpb25zLmN1cnJlbnRBY3Rpb24pO1xuXHRcdGlmKHRoaXMubW92ZShlbmdpbmUsIGVudGl0eSwgb2JqZWN0cywgZGVzdGluYXRpb24pKSB7XG5cdFx0XHRpZihlbnRpdHkgaW5zdGFuY2VvZiBQbGF5ZXIpIHtcblx0XHRcdFx0dGhpcy5wbGF5ZXJXYWxrRXZlbnRzKGVuZ2luZSwgZW50aXR5KTtcblx0XHRcdH1cblx0XHRcdGVsc2UgaWYoZW50aXR5IGluc3RhbmNlb2YgTW9iKSB7XG5cdFx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfZW50aXR5X21vdmVkKTtcblx0XHRcdH1cblx0XHR9XG5cblx0fVxuXG5cdHBsYXllcldhbGtFdmVudHMoZW5naW5lLCBwbGF5ZXIpIHtcblx0XHRsZXQgc3F1YXJlID0gZW5naW5lLmdldE1hcCgpW3BsYXllci5wb3NpdGlvbi54XVtwbGF5ZXIucG9zaXRpb24ueV07XG5cdFx0aWYoc3F1YXJlIGluc3RhbmNlb2YgU3RhaXJVcFNxdWFyZSAmJiBlbmdpbmUuZ2V0RGVwdGgoKSA+IDApIHtcblx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfdXBfbGV2ZWwpO1xuXHRcdH1cblx0XHRlbHNlIGlmKHNxdWFyZSBpbnN0YW5jZW9mIFN0YWlyRG93blNxdWFyZSkge1xuXHRcdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9kb3duX2xldmVsKTtcblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHRpZihzcXVhcmUgaW5zdGFuY2VvZiBEb29yU3F1YXJlKSB7XG5cdFx0XHRcdHNxdWFyZS5vcGVuKCk7XG5cdFx0XHR9XG5cdFx0XHRlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X3BsYXllcl9tb3ZlZCk7XG5cdFx0fVxuXHR9XG5cblx0c3RhdGljIGdldERlc3RpbmF0aW9uKGVudGl0eSwgbW92ZW1lbnQpIHtcblx0XHRzd2l0Y2ggKG1vdmVtZW50KSB7XG5cdFx0XHRjYXNlIGFjdGlvbl9tb3ZlX3VwOlxuXHRcdFx0XHRyZXR1cm4gbmV3IFBvc2l0aW9uQ29tcG9uZW50KGVudGl0eS5wb3NpdGlvbi54LCBlbnRpdHkucG9zaXRpb24ueSAtIDEpO1xuXHRcdFx0Y2FzZSBhY3Rpb25fbW92ZV9yaWdodDpcblx0XHRcdFx0cmV0dXJuIG5ldyBQb3NpdGlvbkNvbXBvbmVudChlbnRpdHkucG9zaXRpb24ueCArIDEsIGVudGl0eS5wb3NpdGlvbi55KTtcblx0XHRcdGNhc2UgYWN0aW9uX21vdmVfZG93bjpcblx0XHRcdFx0cmV0dXJuIG5ldyBQb3NpdGlvbkNvbXBvbmVudChlbnRpdHkucG9zaXRpb24ueCwgZW50aXR5LnBvc2l0aW9uLnkgKyAxKTtcblx0XHRcdGNhc2UgYWN0aW9uX21vdmVfbGVmdDpcblx0XHRcdFx0cmV0dXJuIG5ldyBQb3NpdGlvbkNvbXBvbmVudChlbnRpdHkucG9zaXRpb24ueCAtIDEsIGVudGl0eS5wb3NpdGlvbi55KTtcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdObyBkaXJlY3Rpb24nKTtcblx0XHRcdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblxuXHRzdGF0aWMgdmFsaWRNb3ZlKGVuZ2luZSwgZW50aXR5LCBkZXN0aW5hdGlvbikge1xuXHRcdGxldCB2YWxpZE1vdmUgPSB0cnVlO1xuXHRcdGZvcihsZXQgaSA9IGRlc3RpbmF0aW9uLng7IGkgPCBkZXN0aW5hdGlvbi54ICsgZW50aXR5LmNvbGxpc2lvbi53aWR0aDsgaSsrKSB7XG5cdFx0XHRmb3IobGV0IGogPSBkZXN0aW5hdGlvbi55OyBqIDwgZGVzdGluYXRpb24ueSArIGVudGl0eS5jb2xsaXNpb24uaGVpZ2h0OyBqKyspIHtcblx0XHRcdFx0aWYoIVV0aWxpdHkud2Fsa2FibGUoaSwgaiwgZW5naW5lLmdldE1hcCgpLCBlbnRpdHksIGVuZ2luZS5nZXRFbnRpdGllcygpKSkge1xuXHRcdFx0XHRcdHZhbGlkTW92ZSA9IGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiB2YWxpZE1vdmU7XG5cdH1cbn1cbiIsImZ1bmN0aW9uIE11c2ljTWFuYWdlcigpIHtcblxuXHRsZXQgbXVzaWMgPSBNVVNJQztcblx0TVVTSUMgPSBudWxsO1xuXHRsZXQgY3VycmVudExvb3AgPSBtdXNpY1swXTtcblxuXHRsZXQgbG9vcCA9IGZ1bmN0aW9uICgpIHtcblx0XHRjdXJyZW50TG9vcC5lbmRlZCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdGN1cnJlbnRMb29wID0gcGxheVNvdW5kKG11c2ljW3JhbmRvbUludChtdXNpYy5sZW5ndGgpXSk7XG5cdFx0XHRsb29wKCk7XG5cdFx0fTtcblx0fTtcblxuXHRsZXQgaW5pdCA9IChmdW5jdGlvbiAoKSB7XG5cdFx0Ly8gY3VycmVudExvb3AgPSBwbGF5U291bmQoY3VycmVudExvb3ApO1xuXHRcdC8vIGxvb3AoKTtcblx0fSkoKTtcbn1cbiIsImNsYXNzIFNwcmludFN5c3RlbSBleHRlbmRzIEdhbWVTeXN0ZW0ge1xuXG5cdGNvbnN0cnVjdG9yKGNvbmZpZykge1xuXHRcdHN1cGVyKFtjb21wb25lbnRfc3ByaW50XSk7XG5cdFx0dGhpcy5jb25maWcgPSBjb25maWc7XG5cdH1cblxuXHRpbml0KGVuZ2luZSkge1xuXHRcdGZvcihsZXQgZW50aXR5IG9mIHRoaXMub2JqZWN0cykge1xuXHRcdFx0dGhpcy5yZXNldFNwcmludENvdW50ZXIoZW50aXR5KTtcblx0XHR9XG5cdH1cblxuXHRydW4oZW5naW5lKSB7XG5cdFx0Ly8gbGV0IGN1cnJlbnRUaW1lID0gbWlsbGlzKCk7XG5cdFx0Zm9yKGxldCBlbnRpdHkgb2YgdGhpcy5vYmplY3RzKSB7XG5cdFx0XHRpZihlbnRpdHkuc3ByaW50LnNwcmludGluZykge1xuXHRcdFx0XHRpZih0aGlzLnNwcmludFRpbWVyRXhwaXJlZChlbnRpdHksIHRoaXMuY29uZmlnLlNQUklOVF9SRVNFVF9USU1FX1NQUklOVElORykpIHtcblx0XHRcdFx0XHR0aGlzLnN0b3BTcHJpbnRpbmcoZW5naW5lLCBlbnRpdHkpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0aWYodGhpcy5zcHJpbnRUaW1lckV4cGlyZWQoZW50aXR5LCB0aGlzLmNvbmZpZy5TUFJJTlRfUkVTRVRfVElNRV9XQUxLSU5HKSkge1xuXHRcdFx0XHRcdHRoaXMucmVzZXRTcHJpbnRDb3VudGVyKGVudGl0eSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRoYW5kbGVFdmVudChlbmdpbmUsIGV2ZW50SUQsIGRhdGEpIHtcblx0XHRzd2l0Y2goZXZlbnRJRCkge1xuXHRcdFx0Y2FzZSBldmVudF9zdWNjZXNzZnVsX2FjdGlvbjpcblx0XHRcdFx0aWYoZGF0YS5lbnRpdHkuY29tcG9uZW50cy5pbmNsdWRlcyhjb21wb25lbnRfc3ByaW50KSkge1xuXHRcdFx0XHRcdGlmKFV0aWxpdHkuaXNNb3ZlbWVudEFjdGlvbihkYXRhLmFjdGlvbikpIHtcblx0XHRcdFx0XHRcdGlmKGRhdGEuZW50aXR5LnNwcmludC5zcHJpbnRpbmcpIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5oYW5kbGVTcHJpbnRpbmcoZW5naW5lLCBkYXRhLmVudGl0eSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5kZWNyZW1lbnRTcHJpbnRDb3VudGVyKGVuZ2luZSwgZGF0YS5lbnRpdHksIGRhdGEuYWN0aW9uKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHRpZihkYXRhLmVudGl0eS5zcHJpbnQuc3ByaW50aW5nKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMuc3RvcFNwcmludGluZyhlbmdpbmUsIGRhdGEuZW50aXR5KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdFx0XHR0aGlzLnJlc2V0U3ByaW50Q291bnRlcihkYXRhLmVudGl0eSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF91cF9sZXZlbDogY2FzZSBldmVudF9kb3duX2xldmVsOlxuXHRcdFx0XHR0aGlzLnN0b3BBbGxTcHJpbnRpbmcoZW5naW5lKTtcblx0XHRcdFx0YnJlYWs7XG5cblx0XHR9XG5cdH1cblxuXHRoYW5kbGVTcHJpbnRpbmcoZW5naW5lLCBlbnRpdHkpIHtcblx0XHRpZih0aGlzLnNwcmludFRpbWVyRXhwaXJlZChlbnRpdHksIHRoaXMuY29uZmlnLlNQUklOVF9SRVNFVF9USU1FX1NQUklOVElORykpIHtcblx0XHRcdHRoaXMuc3RvcFNwcmludGluZyhlbmdpbmUsIGVudGl0eSk7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0aWYoZW50aXR5LmFjdGlvbnMuYnVzeSA+IGVudGl0eS5zcHJpbnQuc3ByaW50U3BlZWQpIHtcblx0XHRcdFx0ZW50aXR5LmFjdGlvbnMuYnVzeSA9IGVudGl0eS5zcHJpbnQuc3ByaW50U3BlZWQ7XG5cdFx0XHR9XG5cdFx0XHRmb3IobGV0IGEgaW4gZW50aXR5LmFjdGlvbnMuYWN0aW9ucykge1xuXHRcdFx0XHRpZihlbnRpdHkuYWN0aW9ucy5hY3Rpb25zW2FdLmN1cnJlbnRDb29sZG93biA+IGVudGl0eS5zcHJpbnQuc3ByaW50U3BlZWQpIHtcblx0XHRcdFx0XHRlbnRpdHkuYWN0aW9ucy5hY3Rpb25zW2FdLmN1cnJlbnRDb29sZG93biA9IGVudGl0eS5zcHJpbnQuc3ByaW50U3BlZWQgKyAxO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRlbnRpdHkuc3ByaW50Lmxhc3RNb3ZlVGltZSA9IG1pbGxpcygpO1xuXHRcdH1cblx0fVxuXG5cdHN0YXJ0U3ByaW50aW5nKGVuZ2luZSwgZW50aXR5KSB7XG5cdFx0aWYoZW50aXR5IGluc3RhbmNlb2YgUGxheWVyKSB7XG5cdFx0XHRlbmdpbmUuc2VuZEV2ZW50KGV2ZW50X3BsYXllcl9zdGFydF9zcHJpbnRpbmcpO1xuXHRcdH1cblx0XHRlbnRpdHkuc3ByaW50LnNwcmludGluZyA9IHRydWU7XG5cdFx0dGhpcy5yZXNldFNwcmludENvdW50ZXIoZW50aXR5KTtcblx0fVxuXG5cdHN0b3BTcHJpbnRpbmcoZW5naW5lLCBlbnRpdHkpIHtcblx0XHRpZihlbnRpdHkgaW5zdGFuY2VvZiBQbGF5ZXIpIHtcblx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfcGxheWVyX3N0b3Bfc3ByaW50aW5nKTtcblx0XHR9XG5cdFx0ZW50aXR5LnNwcmludC5zcHJpbnRpbmcgPSBmYWxzZTtcblx0XHR0aGlzLnJlc2V0U3ByaW50Q291bnRlcihlbnRpdHkpO1xuXHR9XG5cblx0ZGVjcmVtZW50U3ByaW50Q291bnRlcihlbmdpbmUsIGVudGl0eSkge1xuXHRcdGlmKGVudGl0eS5zcHJpbnQuc3ByaW50aW5nKSB7XG5cdFx0XHRlbnRpdHkuc3ByaW50Lmxhc3RNb3ZlVGltZSA9IG1pbGxpcygpO1xuXHRcdH1cblx0XHRlbHNlIGlmKGVudGl0eS5zcHJpbnQuc3ByaW50Q291bnRlciA+IDApIHtcblx0XHRcdGlmKHRoaXMuc3ByaW50VGltZXJFeHBpcmVkKGVudGl0eSwgdGhpcy5jb25maWcuU1BSSU5UX1JFU0VUX1RJTUVfV0FMS0lORykpIHtcblx0XHRcdFx0dGhpcy5yZXNldFNwcmludENvdW50ZXIoZW50aXR5KTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRlbnRpdHkuc3ByaW50LnNwcmludENvdW50ZXItLTtcblx0XHRcdFx0ZW50aXR5LnNwcmludC5sYXN0TW92ZVRpbWUgPSBtaWxsaXMoKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHR0aGlzLnN0YXJ0U3ByaW50aW5nKGVuZ2luZSwgZW50aXR5KTtcblx0XHR9XG5cdH1cblxuXHRyZXNldFNwcmludENvdW50ZXIoZW50aXR5KSB7XG5cdFx0ZW50aXR5LnNwcmludC5zcHJpbnRDb3VudGVyID0gZW50aXR5LnNwcmludC5tb3Zlc0JlZm9yZVNwcmludGluZztcblx0XHRlbnRpdHkuc3ByaW50Lmxhc3RNb3ZlVGltZSA9IG1pbGxpcygpO1xuXHR9XG5cblx0c3ByaW50VGltZXJFeHBpcmVkKGVudGl0eSwgdGltZSkge1xuXHRcdHJldHVybiAobWlsbGlzKCkgLSBlbnRpdHkuc3ByaW50Lmxhc3RNb3ZlVGltZSA+IHRpbWUpO1xuXHR9XG5cblx0c3RvcEFsbFNwcmludGluZyhlbmdpbmUpIHtcblx0XHRmb3IobGV0IGVudGl0eSBvZiB0aGlzLm9iamVjdHMpIHtcblx0XHRcdHRoaXMuc3RvcFNwcmludGluZyhlbmdpbmUsIGVudGl0eSk7XG5cdFx0fVxuXHR9XG59XG4iLCJjbGFzcyBVSVN5c3RlbSBleHRlbmRzIEdhbWVTeXN0ZW0ge1xuXG5cdGNvbnN0cnVjdG9yKGNvbmZpZywgaW1hZ2VzKSB7XG5cdFx0c3VwZXIoW2NvbXBvbmVudF9jb250cm9sbGVyXSk7XG5cdFx0dGhpcy5jb25maWcgPSBjb25maWc7XG5cdFx0dGhpcy5pbWFnZXMgPSBpbWFnZXM7XG5cdH1cblxuXHRpbml0KGVuZ2luZSkge1xuXHRcdHRoaXMuZ2FtZUNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnYW1lJyk7XG5cdFx0dGhpcy50aXRsZVNjcmVlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aXRsZVNjcmVlbicpO1xuXHRcdHRoaXMuaGVscFNjcmVlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoZWxwU2NyZWVuJyk7XG5cdFx0dGhpcy5sZXZlbENoYW5nZVNjcmVlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsZXZlbENoYW5nZVNjcmVlbicpO1xuXHRcdHRoaXMubGV2ZWxDaGFuZ2VUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xldmVsQ2hhbmdlVGV4dCcpO1xuXHRcdHRoaXMuZ2FtZU92ZXJTY3JlZW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2FtZU92ZXJTY3JlZW4nKTtcblxuXHRcdHRoaXMucmVzZXRTY3JlZW4odGhpcy50aXRsZVNjcmVlbik7XG5cdFx0dGhpcy5yZXNldFNjcmVlbih0aGlzLmhlbHBTY3JlZW4pO1xuXHRcdHRoaXMucmVzZXRTY3JlZW4odGhpcy5sZXZlbENoYW5nZVNjcmVlbik7XG5cdFx0dGhpcy5yZXNldFNjcmVlbih0aGlzLmdhbWVPdmVyU2NyZWVuKTtcblxuXHRcdHRoaXMuZHJhd0hlYXJ0cyA9IGZhbHNlO1xuXHRcdHRoaXMuaGVhcnRDYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaGVhcnRDYW52YXMnKS5nZXRDb250ZXh0KCcyZCcpO1xuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoZWFydENhbnZhcycpLnN0eWxlLmxlZnQgPSBcIlwiICsgdGhpcy5jb25maWcuSEVBUlRfT0ZGU0VUICsgXCJweFwiO1xuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoZWFydENhbnZhcycpLnN0eWxlLnRvcCA9IFwiXCIgKyB0aGlzLmNvbmZpZy5IRUFSVF9PRkZTRVQgKyBcInB4XCI7XG5cdH1cblxuXHRydW4oZW5naW5lKSB7XG5cdFx0dGhpcy5kcmF3UGxheWVySGVhbHRoKHRoaXMuaGVhcnRDYW52YXMsIHRoaXMuZW50aXRpZXNbT2JqZWN0LmtleXModGhpcy5lbnRpdGllcylbMF1dKTtcblx0fVxuXG5cdGhhbmRsZUV2ZW50KGVuZ2luZSwgZXZlbnRJRCwgZGF0YSkge1xuXHRcdHN3aXRjaChldmVudElEKSB7XG5cdFx0XHRjYXNlIGV2ZW50X25ld19nYW1lOlxuXHRcdFx0XHR0aGlzLnNob3dMZXZlbENoYW5nZVNjcmVlbigwKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGV2ZW50X3RpdGxlX3NjcmVlbjpcblx0XHRcdFx0dGhpcy5zaG93VGl0bGVTY3JlZW4oZW5naW5lKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIGV2ZW50X2Rvd25fbGV2ZWw6XG5cdFx0XHRcdHRoaXMuc2hvd0xldmVsQ2hhbmdlU2NyZWVuKGRhdGEuZGVwdGgpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgZXZlbnRfYmVnaW5fbGV2ZWw6XG5cdFx0XHRcdHRoaXMuaGlkZUxldmVsQ2hhbmdlU2NyZWVuKGVuZ2luZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9wbGF5ZXJfZ2VuZXJhdGVkOlxuXHRcdFx0XHR0aGlzLmZpeEhlYXJ0Q2FudmFzU2l6ZSh0aGlzLmVudGl0aWVzW09iamVjdC5rZXlzKHRoaXMuZW50aXRpZXMpWzBdXSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBldmVudF9nYW1lX292ZXI6XG5cdFx0XHRcdHRoaXMuc2hvd0dhbWVPdmVyU2NyZWVuKGVuZ2luZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdGFkZE9iamVjdChvYmplY3QpIHtcblx0XHRzdXBlci5hZGRPYmplY3Qob2JqZWN0KTtcblx0fVxuXG5cdHNob3dUaXRsZVNjcmVlbihlbmdpbmUpIHtcblx0XHR0aGlzLmZhZGVTY3JlZW5Jbih0aGlzLnRpdGxlU2NyZWVuLCB0aGlzLmNvbmZpZy5USVRMRV9GQURFX0lOX1RJTUUpO1xuXG5cdFx0bGV0IHNlbGYgPSB0aGlzO1xuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGF5QnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcblx0XHRcdHNlbGYuZmFkZVNjcmVlbk91dChzZWxmLnRpdGxlU2NyZWVuLCBzZWxmLmNvbmZpZy5USVRMRV9GQURFX09VVF9USU1FKTtcblx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfbmV3X2dhbWUpO1xuXHRcdH0pO1xuXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hlbHBCdXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuXHRcdFx0c2VsZi5ibHVyU2NyZWVuKHNlbGYudGl0bGVTY3JlZW4sIHNlbGYuY29uZmlnLlRJVExFX0JMVVJfQU1PVU5ULCBzZWxmLmNvbmZpZy5USVRMRV9GQURFX09VVF9USU1FKTtcblx0XHRcdHNlbGYuZmFkZVNjcmVlbkluKHNlbGYuaGVscFNjcmVlbiwgc2VsZi5jb25maWcuVElUTEVfRkFERV9JTl9USU1FKTtcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXR1cm5Ub1RpdGxlU2NyZWVuQnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0c2VsZi51bmJsdXJTY3JlZW4oc2VsZi50aXRsZVNjcmVlbiwgc2VsZi5jb25maWcuVElUTEVfRkFERV9JTl9USU1FKTtcblx0XHRcdFx0c2VsZi5mYWRlU2NyZWVuT3V0KHNlbGYuaGVscFNjcmVlbiwgc2VsZi5jb25maWcuVElUTEVfRkFERV9PVVRfVElNRSk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0fVxuXG5cdHNob3dMZXZlbENoYW5nZVNjcmVlbihkZXB0aCkge1xuXHRcdHRoaXMubGV2ZWxDaGFuZ2VUZXh0LmlubmVySFRNTCA9ICdFbnRlcmluZyBMZXZlbCAnICsgKGRlcHRoICsgMSk7XG5cdFx0dGhpcy5mYWRlU2NyZWVuSW4odGhpcy5sZXZlbENoYW5nZVNjcmVlbiwgdGhpcy5jb25maWcuTEVWRUxfQ0hBTkdFX0ZBREVfSU5fVElNRSk7XG5cdFx0dGhpcy5kcmF3SGVhcnRzID0gZmFsc2U7XG5cdH1cblxuXHRoaWRlTGV2ZWxDaGFuZ2VTY3JlZW4oZW5naW5lKSB7XG5cdFx0dGhpcy5mYWRlU2NyZWVuT3V0KHRoaXMubGV2ZWxDaGFuZ2VTY3JlZW4sIHRoaXMuY29uZmlnLkxFVkVMX0NIQU5HRV9GQURFX09VVF9USU1FKTtcblx0XHR0aGlzLmRyYXdIZWFydHMgPSB0cnVlO1xuXHR9XG5cblx0c2hvd0dhbWVPdmVyU2NyZWVuKGVuZ2luZSkge1xuXHRcdHRoaXMuZmFkZVNjcmVlbkluKHRoaXMuZ2FtZU92ZXJTY3JlZW4sIHRoaXMuY29uZmlnLkdBTUVfT1ZFUl9GQURFX0lOX1RJTUUpO1xuXHRcdHRoaXMuYmx1clNjcmVlbih0aGlzLmdhbWVDYW52YXMsIHRoaXMuY29uZmlnLkdBTUVfQkxVUl9BTU9VTlQsIHRoaXMuY29uZmlnLkdBTUVfT1ZFUl9GQURFX0lOX1RJTUUpO1xuXHRcdHRoaXMuaGlkZUhlYXJ0cygpO1xuXG5cdFx0bGV0IHNlbGYgPSB0aGlzO1xuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGF5QWdhaW5CdXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuXHRcdFx0c2VsZi5mYWRlU2NyZWVuT3V0KHNlbGYuZ2FtZU92ZXJTY3JlZW4sIHNlbGYuY29uZmlnLkdBTUVfT1ZFUl9GQURFX09VVF9USU1FKTtcblx0XHRcdHNlbGYudW5ibHVyU2NyZWVuKHNlbGYuZ2FtZUNhbnZhcywgc2VsZi5jb25maWcuR0FNRV9PVkVSX0ZBREVfT1VUX1RJTUUpO1xuXHRcdFx0ZW5naW5lLnNlbmRFdmVudChldmVudF9yZXNldF9nYW1lKTtcblx0XHRcdGVuZ2luZS5zZW5kRXZlbnQoZXZlbnRfbmV3X2dhbWUsIHVuZGVmaW5lZCwgMjApO1xuXHRcdH0pO1xuXHR9XG5cblx0ZmFkZVNjcmVlbkluKHNjcmVlbiwgbWlsbGlzZWNvbmRzKSB7XG5cdFx0c2NyZWVuLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IG1pbGxpc2Vjb25kcyArICdtcyc7XG5cdFx0c2NyZWVuLnN0eWxlLm9wYWNpdHkgPSAnMSc7XG5cdFx0c2NyZWVuLnN0eWxlLnZpc2liaWxpdHkgPSAndmlzaWJsZSc7XG5cdH1cblxuXHRmYWRlU2NyZWVuT3V0KHNjcmVlbiwgbWlsbGlzZWNvbmRzKSB7XG5cdFx0c2NyZWVuLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IG1pbGxpc2Vjb25kcyArICdtcyc7XG5cdFx0c2NyZWVuLnN0eWxlLm9wYWNpdHkgPSAnMCc7XG5cdFx0c2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0XHRcdHNjcmVlbi5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG5cdFx0fSwgbWlsbGlzZWNvbmRzKTtcblx0fVxuXG5cdGJsdXJTY3JlZW4oc2NyZWVuLCBibHVyQW1vdW50LCBtaWxsaXNlY29uZHMpIHtcblx0XHRzY3JlZW4uc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gbWlsbGlzZWNvbmRzICsgJ21zJztcblx0XHRzY3JlZW4uc3R5bGUuZmlsdGVyID0gJ2JsdXIoJyArIGJsdXJBbW91bnQgKyAncHgpJztcblx0fVxuXG5cdHVuYmx1clNjcmVlbihzY3JlZW4sIG1pbGxpc2Vjb25kcykge1xuXHRcdHNjcmVlbi5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSBtaWxsaXNlY29uZHMgKyAnbXMnO1xuXHRcdHNjcmVlbi5zdHlsZS5maWx0ZXIgPSAnYmx1cigwKSc7XG5cdH1cblxuXHRyZXNldFNjcmVlbihzY3JlZW4pIHtcblx0XHRzY3JlZW4uc3R5bGUub3BhY2l0eSA9ICcwJztcblx0XHRzY3JlZW4uc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuXHR9XG5cblx0aGlkZUhlYXJ0cygpIHtcblx0XHR0aGlzLmhlYXJ0Q2FudmFzLmNsZWFyUmVjdCgwLCAwLCBoZWFydENhbnZhcy53aWR0aCwgaGVhcnRDYW52YXMuaGVpZ2h0KTtcblx0XHR0aGlzLmRyYXdIZWFydHMgPSBmYWxzZTtcblx0fVxuXG5cdGRyYXdQbGF5ZXJIZWFsdGgoaGVhcnRDYW52YXMsIHBsYXllcikge1xuXHRcdGlmKHRoaXMuZHJhd0hlYXJ0cykge1xuXHRcdFx0bGV0IHggPSAwLCB5ID0gMDtcblx0XHRcdGZvcihsZXQgaSA9IDE7IGkgPD0gVXRpbGl0eS5nZXRNYXhIZWFydEFtb3VudChwbGF5ZXIpOyBpKyspIHtcblx0XHRcdFx0aWYoaSA8PSBVdGlsaXR5LmdldEN1cnJlbnRIZWFydEFtb3VudChwbGF5ZXIpKSB7XG5cdFx0XHRcdFx0aGVhcnRDYW52YXMuZHJhd0ltYWdlKHRoaXMuaW1hZ2VzW3VpX2hlYXJ0XSwgKHggKiB0aGlzLmNvbmZpZy5IRUFSVF9TSVpFKSArICh4ICogdGhpcy5jb25maWcuSEVBUlRfU1BBQ0lORyksICh5ICogdGhpcy5jb25maWcuSEVBUlRfU0laRSksIHRoaXMuY29uZmlnLkhFQVJUX1NJWkUsIHRoaXMuY29uZmlnLkhFQVJUX1NJWkUpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdGhlYXJ0Q2FudmFzLmRyYXdJbWFnZSh0aGlzLmltYWdlc1t1aV9lbXB0eV9oZWFydF0sICh4ICogdGhpcy5jb25maWcuSEVBUlRfU0laRSkgKyAoeCAqIHRoaXMuY29uZmlnLkhFQVJUX1NQQUNJTkcpLCAoeSAqIHRoaXMuY29uZmlnLkhFQVJUX1NJWkUpLCB0aGlzLmNvbmZpZy5IRUFSVF9TSVpFLCB0aGlzLmNvbmZpZy5IRUFSVF9TSVpFKTtcblx0XHRcdFx0fVxuXHRcdFx0XHR4Kys7XG5cdFx0XHRcdGlmKGkgJSB0aGlzLmNvbmZpZy5IRUFSVFNfUEVSX1JPVyA9PSAwKSB7XG5cdFx0XHRcdFx0eSsrO1xuXHRcdFx0XHRcdHggPSAwO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Zml4SGVhcnRDYW52YXNTaXplKHBsYXllcikge1xuXHRcdGxldCBoZWFydENhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoZWFydENhbnZhcycpO1xuXHRcdGxldCBoZWFydEFtb3VudCA9IFV0aWxpdHkuZ2V0TWF4SGVhcnRBbW91bnQocGxheWVyKTtcblx0XHRsZXQgdyA9ICh0aGlzLmNvbmZpZy5IRUFSVF9TUEFDSU5HICsgdGhpcy5jb25maWcuSEVBUlRfU0laRSkgKiB0aGlzLmNvbmZpZy5IRUFSVFNfUEVSX1JPVztcblx0XHRsZXQgaCA9ICh0aGlzLmNvbmZpZy5IRUFSVF9TUEFDSU5HICsgdGhpcy5jb25maWcuSEVBUlRfU0laRSkgKiBjZWlsKGhlYXJ0QW1vdW50IC8gdGhpcy5jb25maWcuSEVBUlRTX1BFUl9ST1cpO1xuXHRcdGhlYXJ0Q2FudmFzLndpZHRoID0gdztcblx0XHRoZWFydENhbnZhcy5oZWlnaHQgPSBoO1xuXHR9XG59XG4iLCJjbGFzcyBWaXNpb25TeXN0ZW0gZXh0ZW5kcyBHYW1lU3lzdGVtIHtcblxuXHRjb25zdHJ1Y3Rvcihjb25maWcpIHtcblx0XHRzdXBlcihbY29tcG9uZW50X2Rpc3BsYXksIGNvbXBvbmVudF9wb3NpdGlvbl0pO1xuXHRcdHRoaXMuY29uZmlnID0gY29uZmlnO1xuXHR9XG5cblx0aW5pdChlbmdpbmUpIHsgfVxuXG5cdHJ1bihlbmdpbmUpIHsgfVxuXG5cdGhhbmRsZUV2ZW50KGVuZ2luZSwgZXZlbnRJRCwgZGF0YSkge1xuXHRcdHN3aXRjaCAoZXZlbnRJRCkge1xuXHRcdFx0Y2FzZSBldmVudF9wbGF5ZXJfbW92ZWQ6IGNhc2UgZXZlbnRfZW50aXR5X21vdmVkOiBjYXNlIGV2ZW50X2JlZ2luX2xldmVsOiBjYXNlIGV2ZW50X3NwYXduX2VuZW15X2Nsb3NlOlxuXHRcdFx0XHR0aGlzLnZpc2lvbihlbmdpbmUuZ2V0TWFwKCksIGVuZ2luZS5nZXRQbGF5ZXIoKSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdC8vIGFkZE9iamVjdChvYmplY3QpIHtcblx0Ly8gfVxuXG5cdHZpc2lvbihtYXAsIHBsYXllcikge1xuXHRcdGZvcihsZXQgciBvZiBtYXApIHtcblx0XHRcdGZvcihsZXQgcyBvZiByKSB7XG5cdFx0XHRcdHMuZGlzcGxheS52aXNpYmxlID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHBsYXllci5kaXNwbGF5LnZpc2libGUgPSB0cnVlO1xuXHRcdG1hcFtwbGF5ZXIucG9zaXRpb24ueF1bcGxheWVyLnBvc2l0aW9uLnldLmRpc3BsYXkudmlzaWJsZSA9IHRydWU7XG5cdFx0bWFwW3BsYXllci5wb3NpdGlvbi54XVtwbGF5ZXIucG9zaXRpb24ueV0uZGlzcGxheS5kaXNjb3ZlcmVkID0gdHJ1ZTtcblx0XHRmb3IobGV0IG9jdGFudCA9IDA7IG9jdGFudCA8IDg7IG9jdGFudCsrKSB7XG5cdFx0XHR0aGlzLnBsYXllclNpZ2h0VHJpYW5nbGUobWFwLCBvY3RhbnQsIHBsYXllci5wb3NpdGlvbi54LCBwbGF5ZXIucG9zaXRpb24ueSwgdGhpcy5jb25maWcuUExBWUVSX1ZJU0lPTl9SQU5HRSk7XG5cdFx0fVxuXHRcdGZvcihsZXQgZSBvZiB0aGlzLm9iamVjdHMpIHtcblx0XHRcdGlmKG1hcFtlLnBvc2l0aW9uLnhdW2UucG9zaXRpb24ueV0uZGlzcGxheS52aXNpYmxlKSB7XG5cdFx0XHRcdGUuZGlzcGxheS52aXNpYmxlID0gdHJ1ZTtcblx0XHRcdFx0ZS5kaXNwbGF5LmRpc2NvdmVyZWQgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGUuZGlzcGxheS52aXNpYmxlID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cGxheWVyU2lnaHRUcmlhbmdsZShtYXAsIG9jdGFudCwgc3gsIHN5LCByYW5nZSkge1xuXHRcdGxldCB4ID0gMTtcblx0XHRsZXQgc2hhZG93cyA9IFtdO1xuXHRcdGxldCBzcXVhcmVzVmlzaWJsZSA9IHRydWU7XG5cblx0XHR3aGlsZSAoeCA8PSByYW5nZSAmJiBzcXVhcmVzVmlzaWJsZSkge1xuXHRcdFx0c3F1YXJlc1Zpc2libGUgPSBmYWxzZTtcblx0XHRcdGxldCB5ID0gMDtcblx0XHRcdGxldCBjdXJzbG9wZSA9IDA7XG5cdFx0XHR3aGlsZShjdXJzbG9wZSA8PSAxKSB7XG5cdFx0XHRcdGlmKCFWaXNpb25TeXN0ZW0uaW5TaGFkb3coeCwgeSwgc2hhZG93cykpIHtcblx0XHRcdFx0XHRzcXVhcmVzVmlzaWJsZSA9IHRydWU7XG5cdFx0XHRcdFx0bGV0IGN1ciA9IFZpc2lvblN5c3RlbS5nZXRUcmFuc2xhdGVkU3F1YXJlKG1hcCwgb2N0YW50LCB4LCB5LCBzeCwgc3kpO1xuXHRcdFx0XHRcdGlmKGN1ciA9PT0gdW5kZWZpbmVkKSB7IGJyZWFrOyB9XG5cdFx0XHRcdFx0Y3VyLmRpc3BsYXkudmlzaWJsZSA9IHRydWU7XG5cdFx0XHRcdFx0Y3VyLmRpc3BsYXkuZGlzY292ZXJlZCA9IHRydWU7XG5cdFx0XHRcdFx0aWYoY3VyLmRpc3BsYXkub3BhcXVlKSB7XG5cdFx0XHRcdFx0XHRsZXQgZmlyc3RCbG9ja2VkID0gdGhpcy5nZXRGaXJzdEJsb2NrZWQobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSwgc2hhZG93cyk7XG5cdFx0XHRcdFx0XHRsZXQgbGFzdEJsb2NrZWQgPSB0aGlzLmdldEJsb2NrZWQobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSwgc2hhZG93cyk7XG5cdFx0XHRcdFx0XHRsZXQgc2hhZG93U3RhcnQgPSBWaXNpb25TeXN0ZW0uc2xvcGUoZmlyc3RCbG9ja2VkLngsIGZpcnN0QmxvY2tlZC55LCBCT1RUT01fUklHSFQpO1xuXHRcdFx0XHRcdFx0bGV0IHNoYWRvd0VuZCA9IFZpc2lvblN5c3RlbS5zbG9wZShsYXN0QmxvY2tlZC54LCBsYXN0QmxvY2tlZC55LCBUT1BfTEVGVCk7XG5cdFx0XHRcdFx0XHRzaGFkb3dzLnB1c2goW3NoYWRvd1N0YXJ0LCBzaGFkb3dFbmRdKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZXtcblx0XHRcdFx0XHRcdGxldCBhYm92ZSA9IFZpc2lvblN5c3RlbS5nZXRUcmFuc2xhdGVkU3F1YXJlKG1hcCwgb2N0YW50LCB4LCB5ICsgMSwgc3gsIHN5KTtcblx0XHRcdFx0XHRcdGlmKGFib3ZlICE9PSB1bmRlZmluZWQgKSB7IGFib3ZlLmRpc3BsYXkuZGlzY292ZXJlZCA9IHRydWU7IH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0eSsrO1xuXHRcdFx0XHRjdXJzbG9wZSA9IFZpc2lvblN5c3RlbS5zbG9wZSh4LCB5LCBDRU5URVJfU1FVQVJFKTtcblx0XHRcdH1cblx0XHRcdHgrKztcblx0XHR9XG5cdH1cblxuXHRnZXRGaXJzdEJsb2NrZWQobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSwgc2hhZG93cykge1xuXHRcdGxldCBmaXJzdEJsb2NrZWQgPSB7eDp4LCB5Onl9O1xuXG5cdFx0bGV0IGN1cnJlbnRCbG9ja2VkID0gVmlzaW9uU3lzdGVtLmdldFRyYW5zbGF0ZWRTcXVhcmUobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSk7XG5cblx0XHR3aGlsZShjdXJyZW50QmxvY2tlZCAhPT0gdW5kZWZpbmVkICYmIGN1cnJlbnRCbG9ja2VkLmRpc3BsYXkub3BhcXVlICYmIFZpc2lvblN5c3RlbS5zbG9wZSh4LCB5LCBDRU5URVJfU1FVQVJFKSA+IDApIHtcblx0XHRcdGZpcnN0QmxvY2tlZCA9IHt4OngsIHk6eX07XG5cdFx0XHRpZighVmlzaW9uU3lzdGVtLmluU2hhZG93KHgsIHksIHNoYWRvd3MpKSB7XG5cdFx0XHRcdGN1cnJlbnRCbG9ja2VkLmRpc3BsYXkudmlzaWJsZSA9IHRydWU7XG5cdFx0XHRcdGN1cnJlbnRCbG9ja2VkLmRpc3BsYXkuZGlzY292ZXJlZCA9IHRydWU7XG5cdFx0XHR9XG5cblx0XHRcdHktLTtcblx0XHRcdGN1cnJlbnRCbG9ja2VkID0gVmlzaW9uU3lzdGVtLmdldFRyYW5zbGF0ZWRTcXVhcmUobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSk7XG5cdFx0fVxuXHRcdHJldHVybiBmaXJzdEJsb2NrZWQ7XG5cdH1cblxuXHRnZXRCbG9ja2VkKG1hcCwgb2N0YW50LCB4LCB5LCBzeCwgc3ksIHNoYWRvd3MpIHtcblx0XHRsZXQgbGFzdEJsb2NrZWQgPSB7eDp4LCB5Onl9O1xuXG5cdFx0bGV0IGN1cnJlbnRCbG9ja2VkID0gVmlzaW9uU3lzdGVtLmdldFRyYW5zbGF0ZWRTcXVhcmUobWFwLCBvY3RhbnQsIHgsIHksIHN4LCBzeSk7XG5cblx0XHR3aGlsZShjdXJyZW50QmxvY2tlZCAhPT0gdW5kZWZpbmVkICYmIGN1cnJlbnRCbG9ja2VkLmRpc3BsYXkub3BhcXVlICYmIFZpc2lvblN5c3RlbS5zbG9wZSh4LCB5LCBCT1RUT01fUklHSFQpIDwgMSkge1xuXHRcdFx0bGFzdEJsb2NrZWQgPSB7eDp4LCB5Onl9O1xuXHRcdFx0aWYoIVZpc2lvblN5c3RlbS5pblNoYWRvdyh4LCB5LCBzaGFkb3dzKSkge1xuXHRcdFx0XHRjdXJyZW50QmxvY2tlZC5kaXNwbGF5LnZpc2libGUgPSB0cnVlO1xuXHRcdFx0XHRjdXJyZW50QmxvY2tlZC5kaXNwbGF5LmRpc2NvdmVyZWQgPSB0cnVlO1xuXHRcdFx0fVxuXG5cdFx0XHR5Kys7XG5cdFx0XHRjdXJyZW50QmxvY2tlZCA9IFZpc2lvblN5c3RlbS5nZXRUcmFuc2xhdGVkU3F1YXJlKG1hcCwgb2N0YW50LCB4LCB5LCBzeCwgc3kpO1xuXHRcdH1cblx0XHRyZXR1cm4gbGFzdEJsb2NrZWQ7XG5cdH1cblxuXHRzdGF0aWMgc2xvcGUoeCwgeSwgQ09STkVSKSB7XG5cdFx0c3dpdGNoKENPUk5FUikge1xuXHRcdFx0Y2FzZSBDRU5URVJfU1FVQVJFOlxuXHRcdFx0XHRyZXR1cm4geS94O1xuXHRcdFx0Y2FzZSBUT1BfTEVGVDpcblx0XHRcdFx0aWYoeCA9PSAwKSB7XG5cdFx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuICh5ICsgLjUpLyh4IC0gLjUpO1xuXHRcdFx0Y2FzZSBCT1RUT01fUklHSFQ6XG5cdFx0XHRcdHJldHVybiBtYXgoMCwgKHkgLSAuNSkvKHggKyAuNSkpO1xuXHRcdFx0Y2FzZSBVUFBFUl9CT1VORDpcblx0XHRcdFx0cmV0dXJuICh5ICsgUEVSTSkvKHggLSBQRVJNKTtcblx0XHRcdGNhc2UgTE9XRVJfQk9VTkQ6XG5cdFx0XHRcdHJldHVybiAoeSAtIFBFUk0pLyh4ICsgUEVSTSk7XG5cdFx0fVxuXHRcdHJldHVybiAxO1xuXHR9XG5cblx0c3RhdGljIGluU2hhZG93KHgsIHksIHNoYWRvd3MpIHtcblx0XHRsZXQgQlIgPSBWaXNpb25TeXN0ZW0uc2xvcGUoeCwgeSwgQk9UVE9NX1JJR0hUKSwgVEwgPSBWaXNpb25TeXN0ZW0uc2xvcGUoeCwgeSwgVE9QX0xFRlQpO1xuXHRcdGZvcihsZXQgcyBvZiBzaGFkb3dzKSB7XG5cdFx0XHRpZiggQlIgPj0gc1swXSAmJiBUTCA8PSBzWzFdKSByZXR1cm4gdHJ1ZTtcblx0XHRcdGVsc2UgaWYoIEJSID49IHNbMF0gJiYgQlIgPD0gc1sxXSAmJiBUTCA+PSBzWzFdKSB7IEJSID0gc1sxXTsgfVxuXHRcdFx0ZWxzZSBpZiggQlIgPD0gc1swXSAmJiBUTCA+PSBzWzBdICYmIFRMIDw9IHNbMV0pIHsgVEwgPSBzWzBdOyB9XG5cdFx0fVxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdHN0YXRpYyBzdGFydFNxdWFyZSh4LCBzbG9wZVN0YXJ0KSB7XG5cdFx0aWYoc2xvcGVTdGFydCA9PSAwKSByZXR1cm4gMDtcblx0XHRyZXR1cm4gY2VpbCh4ICogc2xvcGVTdGFydCk7XG5cdH1cblxuXHRzdGF0aWMgZ2V0VHJhbnNsYXRlZFNxdWFyZShtYXAsIG9jdGFudCwgeCwgeSwgc3gsIHN5KSB7XG5cdFx0bGV0IHVjID0gVmlzaW9uU3lzdGVtLnRyYW5zbGF0ZShvY3RhbnQsIHgsIHkpO1xuXHRcdGxldCBmeCA9IHN4ICsgdWNbMF07XG5cdFx0bGV0IGZ5ID0gc3kgLSB1Y1sxXTtcblx0XHRpZihVdGlsaXR5LnBvc2l0aW9uSW5Cb3VuZHMobmV3IFBvc2l0aW9uQ29tcG9uZW50KGZ4LCBmeSksIG1hcC5sZW5ndGgpKSB7XG5cdFx0XHRyZXR1cm4gbWFwW2Z4XVtmeV07XG5cdFx0fVxuXHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdH1cblxuXHRzdGF0aWMgdHJhbnNsYXRlKG9jdGFudCwgeCwgeSkge1xuXHRcdHJldHVyblt4ICogeHhjb21wW29jdGFudF0gKyB5ICogeHljb21wW29jdGFudF0sIHggKiB5eGNvbXBbb2N0YW50XSArIHkgKiB5eWNvbXBbb2N0YW50XV07XG5cdH1cblxuXHRzdGF0aWMgaXNPcGFxdWUoc3F1YXJlKSB7XG5cdFx0cmV0dXJuIHNxdWFyZS5kaXNwbGF5Lm9wYXF1ZTtcblx0fVxuXG5cdHN0YXRpYyBsaW5lT2ZTaWdodChlbmdpbmUsIHAxLCBwMikge1xuXHRcdGNvbnN0IExPU19QRVJNID0gLjU7XG5cdFx0bGV0IG1hcCA9IGVuZ2luZS5nZXRNYXAoKTtcblx0XHRpZihwMSA9PSBwMikge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXHRcdGVsc2UgaWYocDEueSA9PSBwMi55KSB7XG5cdFx0XHRsZXQgc3RhcnQgPSAocDEueCA8IHAyLngpID8gcDEgOiBwMjtcblx0XHRcdGxldCBlbmQgPSAoc3RhcnQgPT0gcDEpID8gcDIgOiBwMTtcblx0XHRcdGxldCBjdXJTcXVhcmUgPSBtYXBbc3RhcnQueF1bc3RhcnQueV07XG5cdFx0XHRmb3IobGV0IHggPSBzdGFydC54OyB4IDw9IGVuZC54OyB4KyspIHtcblx0XHRcdFx0aWYoVmlzaW9uU3lzdGVtLmlzT3BhcXVlKG1hcFt4XVtzdGFydC55XSkpIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZWxzZSBpZihwMS54ID09IHAyLngpIHtcblx0XHRcdGxldCBzdGFydCA9IChwMS55IDwgcDIueSkgPyBwMSA6IHAyO1xuXHRcdFx0bGV0IGVuZCA9IChzdGFydCA9PSBwMSkgPyBwMiA6IHAxO1xuXHRcdFx0bGV0IGN1clNxdWFyZSA9IG1hcFtzdGFydC54XVtzdGFydC55XTtcblx0XHRcdGZvcihsZXQgeSA9IHN0YXJ0Lnk7IHkgPD0gZW5kLnk7IHkrKykge1xuXHRcdFx0XHRpZihWaXNpb25TeXN0ZW0uaXNPcGFxdWUobWFwW3N0YXJ0LnhdW3ldKSkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdGxldCBzdGFydCwgZW5kLCB4LCB5LCBzbG9wZSwgY3VyU3F1YXJlLCBkaXJlY3Rpb247XG5cdFx0XHRsZXQgZGlmWCA9IGFicyhwMS54IC0gcDIueCk7XG5cdFx0XHRsZXQgZGlmWSA9IGFicyhwMS55IC0gcDIueSk7XG5cblx0XHRcdGlmKGRpZlggPD0gZGlmWSkge1xuXHRcdFx0XHRzdGFydCA9IChwMS54IDw9IHAyLngpID8gcDEgOiBwMjtcblx0XHRcdFx0ZW5kID0gKHN0YXJ0ID09IHAxKSA/IHAyIDogcDE7XG5cdFx0XHRcdHNsb3BlID0gYWJzKGVuZC54IC0gc3RhcnQueCkgLyBhYnMoZW5kLnkgLSBzdGFydC55KTtcblx0XHRcdFx0ZGlyZWN0aW9uID0gKHN0YXJ0LnkgPCBlbmQueSkgPyAxIDogLTE7XG5cdFx0XHRcdHggPSBzdGFydC54O1xuXHRcdFx0XHR5ID0gc3RhcnQueTtcblxuXHRcdFx0XHRsZXQgZXJyb3IgPSAwO1xuXG5cdFx0XHRcdHdoaWxlKHggPD0gZW5kLngpIHtcblx0XHRcdFx0XHRpZihWaXNpb25TeXN0ZW0uaXNPcGFxdWUobWFwW3hdW3ldKSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZih5ID09IGVuZC55KSB7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0eSArPSBkaXJlY3Rpb247XG5cdFx0XHRcdFx0ZXJyb3IgKz0gc2xvcGU7XG5cdFx0XHRcdFx0aWYoZXJyb3IgPiAuNSkge1xuXHRcdFx0XHRcdFx0eCsrO1xuXHRcdFx0XHRcdFx0ZXJyb3IgLT0gMTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRzdGFydCA9IChwMS55IDw9IHAyLnkpID8gcDEgOiBwMjtcblx0XHRcdFx0ZW5kID0gKHN0YXJ0ID09IHAxKSA/IHAyIDogcDE7XG5cdFx0XHRcdHNsb3BlID0gYWJzKGVuZC55IC0gc3RhcnQueSkgLyBhYnMoZW5kLnggLSBzdGFydC54KTtcblx0XHRcdFx0ZGlyZWN0aW9uID0gKHN0YXJ0LnggPCBlbmQueCkgPyAxIDogLTE7XG5cdFx0XHRcdHggPSBzdGFydC54O1xuXHRcdFx0XHR5ID0gc3RhcnQueTtcblxuXHRcdFx0XHRsZXQgZXJyb3IgPSAwO1xuXG5cdFx0XHRcdHdoaWxlKHkgPD0gZW5kLnkpIHtcblx0XHRcdFx0XHRpZihWaXNpb25TeXN0ZW0uaXNPcGFxdWUobWFwW3hdW3ldKSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZih4ID09IGVuZC54KSB7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0eCArPSBkaXJlY3Rpb247XG5cdFx0XHRcdFx0ZXJyb3IgKz0gc2xvcGU7XG5cdFx0XHRcdFx0aWYoZXJyb3IgPiAuNSkge1xuXHRcdFx0XHRcdFx0eSsrO1xuXHRcdFx0XHRcdFx0ZXJyb3IgLT0gMTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cbn1cbiJdfQ==